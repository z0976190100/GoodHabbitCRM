{"version":3,"file":"dx-react-grid.es.js","sources":["../src/plugins/grid-core.jsx","../src/grid.jsx","../src/plugins/column-chooser.jsx","../src/utils/state-helper.js","../src/plugins/filtering-state.jsx","../src/plugins/integrated-filtering.jsx","../src/plugins/editing-state.jsx","../src/plugins/paging-state.jsx","../src/plugins/integrated-paging.jsx","../src/plugins/custom-paging.jsx","../src/plugins/grouping-state.jsx","../src/plugins/integrated-grouping.jsx","../src/plugins/custom-grouping.jsx","../src/plugins/selection-state.jsx","../src/plugins/integrated-selection.jsx","../src/plugins/sorting-state.jsx","../src/plugins/integrated-sorting.jsx","../src/plugins/drag-drop-provider.jsx","../src/plugins/table-column-reordering.jsx","../src/plugins/table.jsx","../src/plugins/table-selection.jsx","../src/plugins/row-detail-state.jsx","../src/plugins/table-row-detail.jsx","../src/plugins/table-group-row.jsx","../src/plugins/table-header-row.jsx","../src/plugins/table-filter-row.jsx","../src/plugins/table-edit-row.jsx","../src/plugins/table-edit-column.jsx","../src/plugins/table-column-resizing.jsx","../src/plugins/paging-panel.jsx","../src/plugins/grouping-panel.jsx","../src/plugins/data-type-provider.jsx","../src/plugins/table-column-visibility.jsx","../src/components/table-layout.jsx","../src/components/table-layout/column-group.jsx","../src/components/table-layout/row-layout.jsx","../src/components/table-layout/virtual-table-utils.js","../src/components/table-layout/virtual-table-layout.jsx","../src/components/table-layout/rows-block-layout.jsx","../src/components/table-layout/static-table-layout.jsx","../src/components/group-panel-layout/item-layout.jsx","../src/components/group-panel-layout.jsx","../src/plugins/toolbar.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Plugin, Getter, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\nimport { rowIdGetter, cellValueGetter } from '@devexpress/dx-grid-core';\n\nexport class GridCore extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      getRowId,\n      getCellValue,\n      rootComponent: Root,\n    } = this.props;\n\n    return (\n      <Plugin>\n        <Getter name=\"rows\" value={rows} />\n        <Getter name=\"getRowId\" value={rowIdGetter(getRowId, rows)} />\n        <Getter name=\"columns\" value={columns} />\n        <Getter name=\"getCellValue\" value={cellValueGetter(getCellValue, columns)} />\n        <Template name=\"header\" />\n        <Template name=\"body\" />\n        <Template name=\"footer\" />\n        <Template name=\"root\">\n          <Root>\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGridCore.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nGridCore.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { GridCore } from './plugins/grid-core';\n\nexport const Grid = ({\n  rows,\n  columns,\n  getRowId,\n  getCellValue,\n  rootComponent,\n  children,\n}) => (\n  <PluginHost>\n    <GridCore\n      rows={rows}\n      columns={columns}\n      getRowId={getRowId}\n      getCellValue={getCellValue}\n      rootComponent={rootComponent}\n    />\n    {children}\n  </PluginHost>\n);\n\nGrid.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nGrid.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n  children: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\n\nimport { getMessagesFormatter, columnChooserItems } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'TableColumnVisibility' },\n  { name: 'Toolbar' },\n];\nexport class ColumnChooser extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.buttonRef = this.buttonRef.bind(this);\n  }\n  buttonRef(button) {\n    this.button = button;\n  }\n  handleToggle() {\n    this.setState({ visible: !this.state.visible });\n  }\n  handleHide() {\n    this.setState({ visible: false });\n  }\n  render() {\n    const {\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      itemComponent: Item,\n      toggleButtonComponent: ToggleButton,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { visible } = this.state;\n\n    return (\n      <Plugin\n        name=\"ColumnChooser\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ columns, hiddenColumnNames }, { toggleColumnVisibility }) => (\n              <React.Fragment>\n                <ToggleButton\n                  buttonRef={this.buttonRef}\n                  onToggle={this.handleToggle}\n                  getMessage={getMessage}\n                />\n                <Overlay\n                  visible={visible}\n                  target={this.button}\n                  onHide={this.handleHide}\n                >\n                  <Container>\n                    {columnChooserItems(columns, hiddenColumnNames)\n                      .map(item => (\n                        <Item\n                          key={item.column.name}\n                          item={item}\n                          onToggle={() => toggleColumnVisibility(item.column.name)}\n                        />\n                    ))}\n                  </Container>\n                </Overlay>\n              </React.Fragment>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nColumnChooser.propTypes = {\n  overlayComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nColumnChooser.defaultProps = {\n  messages: {},\n};\n","export const createStateHelper = (component) => {\n  let lastStateUpdater = null;\n  let initialState = null;\n\n  const applyReducer = (reduce, payload, callback) => {\n    const stateUpdater = (prevState) => {\n      const state = {\n        ...component.getState(prevState),\n        ...(component.state !== prevState ? prevState : null),\n      };\n      if (initialState === null) {\n        initialState = state;\n      }\n      const nextState = { ...state, ...reduce(state, payload) };\n\n      if (typeof callback === 'function') {\n        callback(nextState, state);\n      }\n      if (stateUpdater === lastStateUpdater) {\n        component.notifyStateChange(nextState, initialState);\n        initialState = null;\n      }\n\n      return nextState;\n    };\n    lastStateUpdater = stateUpdater;\n    component.setState(stateUpdater);\n  };\n  const applyFieldReducer = (field, reduce, payload) => {\n    applyReducer(state => ({\n      [field]: reduce(state[field], payload),\n    }));\n  };\n\n  return {\n    applyReducer,\n    applyFieldReducer,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { changeColumnFilter } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class FilteringState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.defaultFilters,\n    };\n    const stateHelper = createStateHelper(this);\n\n    this.changeColumnFilter = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'filters', changeColumnFilter);\n  }\n  getState() {\n    const {\n      filters = this.state.filters,\n    } = this.props;\n    return {\n      ...this.state,\n      filters,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { filters } = nextState;\n    const { onFiltersChange } = this.props;\n    if (onFiltersChange && filters !== state.filters) {\n      onFiltersChange(filters);\n    }\n  }\n  render() {\n    const { filters } = this.getState();\n\n    return (\n      <Plugin\n        name=\"FilteringState\"\n      >\n        <Getter name=\"filters\" value={filters} />\n        <Action name=\"changeColumnFilter\" action={this.changeColumnFilter} />\n      </Plugin>\n    );\n  }\n}\n\nFilteringState.propTypes = {\n  filters: PropTypes.array,\n  defaultFilters: PropTypes.array,\n  onFiltersChange: PropTypes.func,\n};\n\nFilteringState.defaultProps = {\n  filters: undefined,\n  defaultFilters: [],\n  onFiltersChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { filteredRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState' },\n];\n\nexport class IntegratedFiltering extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnPredicate = columnName =>\n      getColumnExtension(columnExtensions, columnName).predicate;\n\n    const rowsComputed = ({\n      rows,\n      filters,\n      getCellValue,\n      isGroupRow,\n      getRowLevelKey,\n    }) =>\n      filteredRows(rows, filters, getCellValue, getColumnPredicate, isGroupRow, getRowLevelKey);\n\n    return (\n      <Plugin\n        name=\"IntegratedFiltering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedFiltering.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedFiltering.defaultProps = {\n  columnExtensions: undefined,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  createRowChangeGetter,\n\n  startEditRows,\n  stopEditRows,\n\n  addRow,\n  changeAddedRow,\n  cancelAddedRows,\n  addedRowsByIds,\n\n  changeRow,\n  cancelChanges,\n  changedRowsByIds,\n\n  deleteRows,\n  cancelDeletedRows,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class EditingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingRowIds: props.defaultEditingRowIds,\n      addedRows: props.defaultAddedRows,\n      rowChanges: props.defaultRowChanges,\n      deletedRowIds: props.defaultDeletedRowIds,\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.startEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', startEditRows);\n    this.stopEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', stopEditRows);\n\n    this.changeRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', changeRow);\n    this.cancelChangedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', cancelChanges);\n    this.commitChangedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        changed: changedRowsByIds(this.getState().rowChanges, rowIds),\n      });\n      this.cancelChangedRows({ rowIds });\n    };\n\n    this.addRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', addRow);\n    this.changeAddedRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', changeAddedRow);\n    this.cancelAddedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', cancelAddedRows);\n    this.commitAddedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        added: addedRowsByIds(this.getState().addedRows, rowIds),\n      });\n      this.cancelAddedRows({ rowIds });\n    };\n\n    this.deleteRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', deleteRows);\n    this.cancelDeletedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', cancelDeletedRows);\n    this.commitDeletedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({ deleted: rowIds });\n      this.cancelDeletedRows({ rowIds });\n    };\n  }\n  getState() {\n    const {\n      editingRowIds = this.state.editingRowIds,\n      rowChanges = this.state.rowChanges,\n      addedRows = this.state.addedRows,\n      deletedRowIds = this.state.deletedRowIds,\n    } = this.props;\n    return {\n      ...this.state,\n      editingRowIds,\n      rowChanges,\n      addedRows,\n      deletedRowIds,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { editingRowIds } = nextState;\n    const { onEditingRowIdsChange } = this.props;\n    if (onEditingRowIdsChange && editingRowIds !== state.editingRowIds) {\n      onEditingRowIdsChange(editingRowIds);\n    }\n\n    const { rowChanges } = nextState;\n    const { onRowChangesChange } = this.props;\n    if (onRowChangesChange && rowChanges !== state.rowChanges) {\n      onRowChangesChange(rowChanges);\n    }\n\n    const { addedRows } = nextState;\n    const { onAddedRowsChange } = this.props;\n    if (onAddedRowsChange && addedRows !== state.addedRows) {\n      onAddedRowsChange(addedRows);\n    }\n\n    const { deletedRowIds } = nextState;\n    const { onDeletedRowIdsChange } = this.props;\n    if (onDeletedRowIdsChange && deletedRowIds !== state.deletedRowIds) {\n      onDeletedRowIdsChange(deletedRowIds);\n    }\n  }\n  render() {\n    const { createRowChange, columnExtensions } = this.props;\n    const {\n      editingRowIds, rowChanges, addedRows, deletedRowIds,\n    } = this.getState();\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter\n          name=\"createRowChange\"\n          value={createRowChangeGetter(createRowChange, columnExtensions)}\n        />\n\n        <Getter name=\"editingRowIds\" value={editingRowIds} />\n        <Action name=\"startEditRows\" action={this.startEditRows} />\n        <Action name=\"stopEditRows\" action={this.stopEditRows} />\n\n        <Getter name=\"rowChanges\" value={rowChanges} />\n        <Action name=\"changeRow\" action={this.changeRow} />\n        <Action name=\"cancelChangedRows\" action={this.cancelChangedRows} />\n        <Action name=\"commitChangedRows\" action={this.commitChangedRows} />\n\n        <Getter name=\"addedRows\" value={addedRows} />\n        <Action name=\"addRow\" action={this.addRow} />\n        <Action name=\"changeAddedRow\" action={this.changeAddedRow} />\n        <Action name=\"cancelAddedRows\" action={this.cancelAddedRows} />\n        <Action name=\"commitAddedRows\" action={this.commitAddedRows} />\n\n        <Getter name=\"deletedRowIds\" value={deletedRowIds} />\n        <Action name=\"deleteRows\" action={this.deleteRows} />\n        <Action name=\"cancelDeletedRows\" action={this.cancelDeletedRows} />\n        <Action name=\"commitDeletedRows\" action={this.commitDeletedRows} />\n      </Plugin>\n    );\n  }\n}\n\nEditingState.propTypes = {\n  createRowChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n\n  editingRowIds: PropTypes.array,\n  defaultEditingRowIds: PropTypes.array,\n  onEditingRowIdsChange: PropTypes.func,\n\n  addedRows: PropTypes.array,\n  defaultAddedRows: PropTypes.array,\n  onAddedRowsChange: PropTypes.func,\n\n  rowChanges: PropTypes.object,\n  defaultRowChanges: PropTypes.object,\n  onRowChangesChange: PropTypes.func,\n\n  deletedRowIds: PropTypes.array,\n  defaultDeletedRowIds: PropTypes.array,\n  onDeletedRowIdsChange: PropTypes.func,\n\n  onCommitChanges: PropTypes.func.isRequired,\n};\n\nEditingState.defaultProps = {\n  createRowChange: undefined,\n  columnExtensions: undefined,\n\n  editingRowIds: undefined,\n  defaultEditingRowIds: [],\n  onEditingRowIdsChange: undefined,\n\n  rowChanges: undefined,\n  defaultRowChanges: {},\n  onRowChangesChange: undefined,\n\n  addedRows: undefined,\n  defaultAddedRows: [],\n  onAddedRowsChange: undefined,\n\n  deletedRowIds: undefined,\n  defaultDeletedRowIds: [],\n  onDeletedRowIdsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { setCurrentPage, setPageSize } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class PagingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: props.defaultCurrentPage,\n      pageSize: props.defaultPageSize,\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.setCurrentPage = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentPage', setCurrentPage);\n    this.setPageSize = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'pageSize', setPageSize);\n  }\n  getState() {\n    const {\n      currentPage = this.state.currentPage,\n      pageSize = this.state.pageSize,\n    } = this.props;\n    return {\n      ...this.state,\n      currentPage,\n      pageSize,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { currentPage } = nextState;\n    const { onCurrentPageChange } = this.props;\n    if (onCurrentPageChange && currentPage !== state.currentPage) {\n      onCurrentPageChange(currentPage);\n    }\n\n    const { pageSize } = nextState;\n    const { onPageSizeChange } = this.props;\n    if (onPageSizeChange && pageSize !== state.pageSize) {\n      onPageSizeChange(pageSize);\n    }\n  }\n  render() {\n    const { pageSize, currentPage } = this.getState();\n\n    return (\n      <Plugin\n        name=\"PagingState\"\n      >\n        <Getter name=\"currentPage\" value={currentPage} />\n        <Getter name=\"pageSize\" value={pageSize} />\n        <Action name=\"setCurrentPage\" action={this.setCurrentPage} />\n        <Action name=\"setPageSize\" action={this.setPageSize} />\n      </Plugin>\n    );\n  }\n}\n\nPagingState.propTypes = {\n  pageSize: PropTypes.number,\n  defaultPageSize: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onCurrentPageChange: PropTypes.func,\n};\n\nPagingState.defaultProps = {\n  pageSize: undefined,\n  defaultPageSize: 10,\n  onPageSizeChange: undefined,\n  currentPage: undefined,\n  defaultCurrentPage: 0,\n  onCurrentPageChange: undefined,\n};\n","import React from 'react';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { paginatedRows, rowsWithPageHeaders, pageCount, rowCount } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nconst clamp = (value, max) => Math.max(Math.min(value, max), 0);\n\nconst rowsWithHeadersComputed = ({ rows, pageSize, getRowLevelKey }) =>\n  rowsWithPageHeaders(rows, pageSize, getRowLevelKey);\nconst totalCountComputed = ({ rows }) => rowCount(rows);\nconst paginatedRowsComputed = ({ rows, pageSize, currentPage }) =>\n  paginatedRows(rows, pageSize, currentPage);\nconst currentPageComputed = ({ currentPage, totalCount, pageSize }, { setCurrentPage }) => {\n  const totalPages = pageCount(totalCount, pageSize);\n  const adjustedCurrentPage = clamp(currentPage, totalPages - 1);\n  if (totalPages - 1 < currentPage) {\n    setCurrentPage(adjustedCurrentPage);\n  }\n  return adjustedCurrentPage;\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedPaging extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithHeadersComputed} />\n        <Getter name=\"totalCount\" computed={totalCountComputed} />\n        <Getter name=\"currentPage\" computed={currentPageComputed} />\n        <Getter name=\"rows\" computed={paginatedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class CustomPaging extends React.PureComponent {\n  render() {\n    const { totalCount } = this.props;\n\n    return (\n      <Plugin\n        name=\"CustomPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalCount\" value={totalCount} />\n      </Plugin>\n    );\n  }\n}\n\nCustomPaging.propTypes = {\n  totalCount: PropTypes.number,\n};\n\nCustomPaging.defaultProps = {\n  totalCount: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  changeColumnGrouping,\n  toggleExpandedGroups,\n  draftColumnGrouping,\n  cancelColumnGroupingDraft,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst dependencies = [\n  { name: 'SortingState', optional: true },\n];\n\nconst adjustSortIndex = (sortIndex, grouping, sorting) =>\n  Math.max(\n    grouping.slice(0, sortIndex).reduce(\n      (acc, columnGrouping) => {\n        const columnSortingIndex = sorting.findIndex(columnSorting =>\n          columnSorting.columnName === columnGrouping.columnName);\n        return (columnSortingIndex === -1 ? acc - 1 : acc);\n      },\n      sortIndex,\n    ),\n    0,\n  );\n\nexport class GroupingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.defaultGrouping,\n      draftGrouping: null,\n      expandedGroups: props.defaultExpandedGroups,\n    };\n\n    this.stateHelper = createStateHelper(this);\n\n    this.changeColumnGrouping = this.changeColumnGrouping.bind(this);\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n    this.draftColumnGrouping = this.stateHelper.applyReducer\n      .bind(this.stateHelper, draftColumnGrouping);\n    this.cancelColumnGroupingDraft = this.stateHelper.applyReducer\n      .bind(this.stateHelper, cancelColumnGroupingDraft);\n    this.changeColumnSorting = this.changeColumnSorting.bind(this);\n  }\n  getState() {\n    const {\n      grouping = this.state.grouping,\n      expandedGroups = this.state.expandedGroups,\n    } = this.props;\n    return {\n      ...this.state,\n      grouping,\n      expandedGroups,\n    };\n  }\n  changeColumnSorting(\n    { columnName, keepOther, ...restParams },\n    { sorting },\n    { changeColumnSorting },\n  ) {\n    const { grouping } = this.getState();\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    if (groupingIndex === -1) {\n      changeColumnSorting({\n        columnName,\n        keepOther: keepOther || grouping.map(columnGrouping => columnGrouping.columnName),\n        ...restParams,\n      });\n      return false;\n    }\n\n    const sortIndex = adjustSortIndex(groupingIndex, grouping, sorting);\n    changeColumnSorting({\n      columnName,\n      keepOther: true,\n      sortIndex,\n      ...restParams,\n    });\n    return false;\n  }\n  changeColumnGrouping({ columnName, groupIndex }, getters, actions) {\n    this.stateHelper.applyReducer(\n      changeColumnGrouping,\n      { columnName, groupIndex },\n      (nextState, state) => {\n        const { grouping } = nextState;\n        const { grouping: prevGrouping } = state;\n        const { sorting } = getters;\n        const { changeColumnSorting } = actions;\n\n        if (!sorting) return;\n\n        const columnSortingIndex = sorting\n          .findIndex(columnSorting => columnSorting.columnName === columnName);\n        const prevGroupingIndex = prevGrouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n        const groupingIndex = grouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n\n        if (columnSortingIndex === -1\n          || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1)) return;\n\n        const sortIndex = adjustSortIndex(\n          groupingIndex === -1 ? grouping.length : groupingIndex,\n          grouping,\n          sorting,\n        );\n\n        if (columnSortingIndex === sortIndex) return;\n\n        changeColumnSorting({\n          keepOther: true,\n          sortIndex,\n          ...sorting[columnSortingIndex],\n        });\n      },\n    );\n  }\n  notifyStateChange(nextState, state) {\n    const { grouping } = nextState;\n    const { onGroupingChange } = this.props;\n    if (onGroupingChange && grouping !== state.grouping) {\n      onGroupingChange(grouping);\n    }\n\n    const { expandedGroups } = nextState;\n    const { onExpandedGroupsChange } = this.props;\n    if (onExpandedGroupsChange && expandedGroups !== state.expandedGroups) {\n      onExpandedGroupsChange(expandedGroups);\n    }\n  }\n  render() {\n    const { grouping, draftGrouping, expandedGroups } = this.getState();\n\n    return (\n      <Plugin\n        name=\"GroupingState\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"draftGrouping\" value={draftGrouping || grouping} />\n        <Action name=\"changeColumnGrouping\" action={this.changeColumnGrouping} />\n        <Action name=\"draftColumnGrouping\" action={this.draftColumnGrouping} />\n        <Action name=\"cancelColumnGroupingDraft\" action={this.cancelColumnGroupingDraft} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nGroupingState.propTypes = {\n  grouping: PropTypes.array,\n  defaultGrouping: PropTypes.array,\n  onGroupingChange: PropTypes.func,\n  expandedGroups: PropTypes.array,\n  defaultExpandedGroups: PropTypes.array,\n  onExpandedGroupsChange: PropTypes.func,\n};\n\nGroupingState.defaultProps = {\n  grouping: undefined,\n  defaultGrouping: [],\n  onGroupingChange: undefined,\n  expandedGroups: undefined,\n  defaultExpandedGroups: [],\n  onExpandedGroupsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupedRows,\n  expandedGroupRows,\n  getColumnExtension,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\n\nexport class IntegratedGrouping extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCriteria = columnName =>\n      getColumnExtension(columnExtensions, columnName).criteria;\n\n    const groupedRowsComputed = ({ rows, grouping, getCellValue }) =>\n      groupedRows(rows, grouping, getCellValue, getColumnCriteria);\n\n    return (\n      <Plugin\n        name=\"IntegratedGrouping\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedGrouping.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedGrouping.defaultProps = {\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  customGroupingRowIdGetter,\n  customGroupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\nconst getRowIdComputed = ({ getRowId, rows }) =>\n  customGroupingRowIdGetter(getRowId, rows);\n\nexport class CustomGrouping extends React.PureComponent {\n  render() {\n    const {\n      getChildGroups,\n      grouping: appliedGrouping,\n      expandedGroups: appliedExpandedGroups,\n    } = this.props;\n    const groupedRowsComputed = ({ rows, grouping }) =>\n      customGroupedRows(rows, grouping, getChildGroups);\n\n    return (\n      <Plugin\n        name=\"CustomGrouping\"\n        dependencies={pluginDependencies}\n      >\n        {appliedGrouping && (\n          <Getter name=\"grouping\" value={appliedGrouping} />\n        )}\n        {appliedExpandedGroups && (\n          <Getter name=\"expandedGroups\" value={appliedExpandedGroups} />\n        )}\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nCustomGrouping.propTypes = {\n  getChildGroups: PropTypes.func.isRequired,\n  grouping: PropTypes.array,\n  expandedGroups: PropTypes.array,\n};\n\nCustomGrouping.defaultProps = {\n  grouping: undefined,\n  expandedGroups: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { toggleSelection } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SelectionState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: props.defaultSelection,\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.toggleSelection = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'selection', toggleSelection);\n  }\n  getState() {\n    const {\n      selection = this.state.selection,\n    } = this.props;\n    return {\n      ...this.state,\n      selection,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { selection } = nextState;\n    const { onSelectionChange } = this.props;\n    if (onSelectionChange && selection !== state.selection) {\n      onSelectionChange(selection);\n    }\n  }\n  render() {\n    const { selection } = this.getState();\n\n    return (\n      <Plugin\n        name=\"SelectionState\"\n      >\n        <Getter name=\"selection\" value={selection} />\n        <Action name=\"toggleSelection\" action={this.toggleSelection} />\n      </Plugin>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.array,\n  defaultSelection: PropTypes.array,\n  onSelectionChange: PropTypes.func,\n};\n\nSelectionState.defaultProps = {\n  selection: undefined,\n  defaultSelection: [],\n  onSelectionChange: undefined,\n};\n","import React from 'react';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  getAvailableToSelect,\n  someSelected,\n  allSelected,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SelectionState' },\n];\n\nexport class IntegratedSelection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { availableToSelect: [] };\n\n    this.toggleSelectAll = this.toggleSelectAll.bind(this);\n    this.availableToSelect = this.availableToSelect.bind(this);\n  }\n\n  toggleSelectAll(state, getters, { toggleSelection }) {\n    const { availableToSelect } = this.state;\n    toggleSelection({ rowIds: availableToSelect, state });\n  }\n  availableToSelect({ rows, getRowId, isGroupRow }) {\n    this.setState({ availableToSelect: getAvailableToSelect(rows, getRowId, isGroupRow) });\n    return rows;\n  }\n  render() {\n    const { availableToSelect } = this.state;\n\n    const allSelectedComputed = ({ selection }) =>\n      allSelected({ selection, availableToSelect });\n    const someSelectedComputed = ({ selection }) =>\n      someSelected({ selection, availableToSelect });\n\n    return (\n      <Plugin\n        name=\"IntegratedSelection\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={this.availableToSelect} />\n        <Getter name=\"allSelected\" computed={allSelectedComputed} />\n        <Getter name=\"someSelected\" computed={someSelectedComputed} />\n        <Getter name=\"selectAllAvailable\" value={!!availableToSelect.length} />\n\n        <Action name=\"toggleSelectAll\" action={this.toggleSelectAll} />\n      </Plugin>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { changeColumnSorting } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SortingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sorting: props.defaultSorting,\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.changeColumnSorting = stateHelper.applyReducer\n      .bind(stateHelper, changeColumnSorting);\n  }\n  getState() {\n    const {\n      sorting = this.state.sorting,\n    } = this.props;\n    return {\n      ...this.state,\n      sorting,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { sorting } = nextState;\n    const { onSortingChange } = this.props;\n    if (onSortingChange && sorting !== state.sorting) {\n      onSortingChange(sorting);\n    }\n  }\n  render() {\n    const { sorting } = this.getState();\n\n    return (\n      <Plugin\n        name=\"SortingState\"\n      >\n        <Getter name=\"sorting\" value={sorting} />\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nSortingState.propTypes = {\n  sorting: PropTypes.array,\n  defaultSorting: PropTypes.array,\n  onSortingChange: PropTypes.func,\n};\n\nSortingState.defaultProps = {\n  sorting: undefined,\n  defaultSorting: [],\n  onSortingChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { sortedRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SortingState' },\n];\n\nexport class IntegratedSorting extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCompare = columnName =>\n      getColumnExtension(columnExtensions, columnName).compare;\n\n    const rowsComputed = ({\n      rows, sorting, getCellValue, isGroupRow, getRowLevelKey,\n    }) =>\n      sortedRows(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\n\n    return (\n      <Plugin\n        name=\"IntegratedSorting\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedSorting.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedSorting.defaultProps = {\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n  TemplateConnector,\n  DragDropProvider as DragDropProviderCore,\n} from '@devexpress/dx-react-core';\n\nconst getTargetColumns = (payload, columns) => payload\n  .filter(item => item.type === 'column')\n  .map(item => columns.find(column => column.name === item.columnName));\n\nexport class DragDropProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      payload: null,\n      clientOffset: null,\n    };\n\n    this.change = ({ payload, clientOffset }) => this.setState({ payload, clientOffset });\n  }\n  render() {\n    const {\n      containerComponent: Container,\n      columnComponent: Column,\n    } = this.props;\n    const {\n      payload,\n      clientOffset,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n      >\n        <Getter name=\"draggingEnabled\" value />\n        <Template name=\"root\">\n          <DragDropProviderCore\n            onChange={this.change}\n          >\n            <TemplatePlaceholder />\n          </DragDropProviderCore>\n          {payload && (\n            <TemplateConnector>\n              {({ columns }) => (\n                <Container\n                  clientOffset={clientOffset}\n                >\n                  {getTargetColumns(payload, columns)\n                    .map(column => (\n                      <Column\n                        key={column.name}\n                        column={column}\n                      />\n                    ))\n                  }\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nDragDropProvider.propTypes = {\n  containerComponent: PropTypes.func.isRequired,\n  columnComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_DATA_TYPE,\n  TABLE_REORDERING_TYPE,\n  orderedColumns,\n  changeColumnOrder,\n  getTableTargetColumnIndex,\n  tableHeaderRowsWithReordering,\n  draftOrder as draftOrderComputed,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n  tableHeaderRowsWithReordering(tableHeaderRows);\n\nexport class TableColumnReordering extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: props.defaultOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    };\n\n    this.onOver = this.handleOver.bind(this);\n    this.onLeave = this.handleLeave.bind(this);\n    this.onDrop = this.handleDrop.bind(this);\n  }\n  getState() {\n    const {\n      order = this.state.order,\n    } = this.props;\n    return {\n      ...this.state,\n      order,\n    };\n  }\n  getDraftOrder() {\n    const { order, sourceColumnIndex, targetColumnIndex } = this.getState();\n    return draftOrderComputed(order, sourceColumnIndex, targetColumnIndex);\n  }\n  getAvailableColumns() {\n    return this.getDraftOrder()\n      .filter(columnName => !!this.cellDimensionGetters[columnName]);\n  }\n  cacheCellDimensions() {\n    this.cellDimensions = (this.cellDimensions && this.cellDimensions.length)\n      ? this.cellDimensions\n      : this.getAvailableColumns()\n        .map(columnName => this.cellDimensionGetters[columnName]());\n  }\n  resetCellDimensions() {\n    this.cellDimensions = [];\n  }\n  storeCellDimensionsGetter(tableColumn, data) {\n    if (tableColumn.type === TABLE_DATA_TYPE) {\n      this.cellDimensionGetters[tableColumn.column.name] = data;\n    }\n  }\n  handleOver({ payload, clientOffset: { x } }) {\n    const sourceColumnName = payload[0].columnName;\n    const availableColumns = this.getAvailableColumns();\n    const relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\n\n    if (relativeSourceColumnIndex === -1) return;\n\n    this.cacheCellDimensions();\n    const { cellDimensions } = this;\n\n    const overlappedColumns = cellDimensions\n      .filter(({ left, right }) => left <= x && x <= right);\n\n    if (overlappedColumns.length > 1) return;\n\n    const relativeTargetIndex = getTableTargetColumnIndex(\n      cellDimensions,\n      relativeSourceColumnIndex,\n      x,\n    );\n\n    if (relativeTargetIndex === -1) return;\n\n    const {\n      sourceColumnIndex: prevSourceColumnIndex,\n      targetColumnIndex: prevTargetColumnIndex,\n    } = this.getState();\n    const draftOrder = this.getDraftOrder();\n    const targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\n\n    if (targetColumnIndex === prevTargetColumnIndex) return;\n\n    const sourceColumnIndex = prevSourceColumnIndex === -1\n      ? draftOrder.indexOf(sourceColumnName)\n      : prevSourceColumnIndex;\n\n    this.setState({\n      sourceColumnIndex,\n      targetColumnIndex,\n    });\n  }\n  handleLeave() {\n    this.setState({\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    this.resetCellDimensions();\n  }\n  handleDrop() {\n    const { sourceColumnIndex, targetColumnIndex, order } = this.getState();\n    const { onOrderChange } = this.props;\n    const nextOrder = changeColumnOrder(order, {\n      sourceColumnName: order[sourceColumnIndex],\n      targetColumnName: order[targetColumnIndex],\n    });\n\n    this.setState({\n      order: nextOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    if (onOrderChange) {\n      onOrderChange(nextOrder);\n    }\n\n    this.resetCellDimensions();\n  }\n  render() {\n    const {\n      tableContainerComponent: Container,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const columnsComputed = ({ tableColumns }) =>\n      orderedColumns(tableColumns, this.getDraftOrder());\n\n    this.cellDimensionGetters = {};\n\n    return (\n      <Plugin\n        name=\"TableColumnReordering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={columnsComputed} />\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template name=\"table\">\n          {params => (\n            <Container\n              {...params}\n              onOver={this.onOver}\n              onLeave={this.onLeave}\n              onDrop={this.onDrop}\n            >\n              <TemplatePlaceholder />\n            </Container>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Row {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Cell\n              {...params}\n              getCellDimensions={fn =>\n                this.storeCellDimensionsGetter(params.tableColumn, fn)}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnReordering.propTypes = {\n  order: PropTypes.arrayOf(PropTypes.string),\n  defaultOrder: PropTypes.arrayOf(PropTypes.string),\n  onOrderChange: PropTypes.func,\n  tableContainerComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nTableColumnReordering.defaultProps = {\n  order: undefined,\n  defaultOrder: [],\n  onOrderChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithDataRows,\n  tableRowsWithDataRows,\n  isNoDataTableRow,\n  isDataTableCell,\n  isHeaderStubTableCell,\n  isDataTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst RowPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableRow\" params={props} />;\nconst CellPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableCell\" params={props} />;\n\nconst tableHeaderRows = [];\nconst tableBodyRowsComputed = ({ rows, getRowId }) =>\n  tableRowsWithDataRows(rows, getRowId);\n\nconst pluginDependencies = [\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class Table extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent: Row,\n      noDataRowComponent: NoDataRow,\n      noDataCellComponent: NoDataCell,\n      stubCellComponent: StubCell,\n      stubHeaderCellComponent: StubHeaderCell,\n      columnExtensions,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ columns }) =>\n      tableColumnsWithDataRows(columns, columnExtensions);\n\n    return (\n      <Plugin\n        name=\"Table\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" value={tableHeaderRows} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template name=\"body\">\n          <TemplatePlaceholder name=\"table\" />\n        </Template>\n        <Template name=\"table\">\n          <TemplateConnector>\n            {({ tableHeaderRows: headerRows, tableBodyRows: bodyRows, tableColumns: columns }) => (\n              <Layout\n                headerRows={headerRows}\n                bodyRows={bodyRows}\n                columns={columns}\n                rowComponent={RowPlaceholder}\n                cellComponent={CellPlaceholder}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"tableCell\">\n          {params => (\n            <TemplateConnector>\n              {({ tableHeaderRows: headerRows }) =>\n                (isHeaderStubTableCell(params.tableRow, headerRows)\n                  ? <StubHeaderCell {...params} />\n                  : <StubCell {...params} />\n                )\n              }\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDataTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue }) => {\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(params.tableRow.row, columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row: params.tableRow.row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        {content}\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataCell {...{ getMessage, ...params }} />}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDataTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTable.propTypes = {\n  layoutComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  noDataCellComponent: PropTypes.func.isRequired,\n  noDataRowComponent: PropTypes.func.isRequired,\n  stubCellComponent: PropTypes.func.isRequired,\n  stubHeaderCellComponent: PropTypes.func.isRequired,\n  columnExtensions: PropTypes.array,\n  messages: PropTypes.object,\n};\n\nTable.defaultProps = {\n  columnExtensions: undefined,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithSelection,\n  isSelectTableCell,\n  isSelectAllTableCell,\n  isDataTableRow,\n} from '@devexpress/dx-grid-core';\n\nexport class TableSelection extends React.PureComponent {\n  render() {\n    const {\n      highlightRow,\n      selectByRowClick,\n      showSelectionColumn,\n      showSelectAll,\n      headerCellComponent: HeaderCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      selectionColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithSelection(tableColumns, selectionColumnWidth);\n\n    return (\n      <Plugin\n        name=\"TableSelection\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SelectionState' },\n          { name: 'IntegratedSelection', optional: !showSelectAll },\n        ]}\n      >\n        {showSelectionColumn && (\n          <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        )}\n\n        {(showSelectionColumn && showSelectAll) && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectAllTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                  <HeaderCell\n                    {...params}\n                    disabled={!selectAllAvailable}\n                    allSelected={allSelected}\n                    someSelected={someSelected}\n                    onToggle={select => toggleSelectAll(select)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {showSelectionColumn && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                    selected={selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {(highlightRow || selectByRowClick) && (\n          <Template\n            name=\"tableRow\"\n            predicate={({ tableRow }) => isDataTableRow(tableRow)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Row\n                    {...params}\n                    selectByRowClick\n                    selected={highlightRow && selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n      </Plugin>\n    );\n  }\n}\n\nTableSelection.propTypes = {\n  headerCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  highlightRow: PropTypes.bool,\n  selectByRowClick: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  showSelectionColumn: PropTypes.bool,\n  selectionColumnWidth: PropTypes.number.isRequired,\n};\n\nTableSelection.defaultProps = {\n  highlightRow: false,\n  selectByRowClick: false,\n  showSelectAll: false,\n  showSelectionColumn: true,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { toggleDetailRowExpanded } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class RowDetailState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRowIds: props.defaultExpandedRowIds,\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.toggleDetailRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRowIds', toggleDetailRowExpanded);\n  }\n  getState() {\n    const {\n      expandedRowIds = this.state.expandedRowIds,\n    } = this.props;\n    return {\n      ...this.state,\n      expandedRowIds,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { expandedRowIds } = nextState;\n    const { onExpandedRowIdsChange } = this.props;\n    if (onExpandedRowIdsChange && expandedRowIds !== state.expandedRowIds) {\n      onExpandedRowIdsChange(expandedRowIds);\n    }\n  }\n  render() {\n    const { expandedRowIds } = this.getState();\n\n    return (\n      <Plugin\n        name=\"RowDetailState\"\n      >\n        <Getter name=\"expandedDetailRowIds\" value={expandedRowIds} />\n        <Action name=\"toggleDetailRowExpanded\" action={this.toggleDetailRowExpanded} />\n      </Plugin>\n    );\n  }\n}\n\nRowDetailState.propTypes = {\n  expandedRowIds: PropTypes.array,\n  defaultExpandedRowIds: PropTypes.array,\n  onExpandedRowIdsChange: PropTypes.func,\n};\n\nRowDetailState.defaultProps = {\n  expandedRowIds: undefined,\n  defaultExpandedRowIds: [],\n  onExpandedRowIdsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithExpandedDetail,\n  isDetailRowExpanded,\n  tableColumnsWithDetail,\n  isDetailToggleTableCell,\n  isDetailTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableRowDetail extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      contentComponent: Content,\n      toggleCellComponent: ToggleCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      toggleColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithDetail(tableColumns, toggleColumnWidth);\n    const tableBodyRowsComputed = ({ tableBodyRows, expandedDetailRowIds }) =>\n      tableRowsWithExpandedDetail(tableBodyRows, expandedDetailRowIds, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableRowDetail\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDetailToggleTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedDetailRowIds }, { toggleDetailRowExpanded }) => (\n                <ToggleCell\n                  {...params}\n                  row={params.tableRow.row}\n                  expanded={isDetailRowExpanded(expandedDetailRowIds, params.tableRow.rowId)}\n                  onToggle={() => toggleDetailRowExpanded({ rowId: params.tableRow.rowId })}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Cell\n              {...params}\n              row={params.tableRow.row}\n            >\n              <Content row={params.tableRow.row} />\n            </Cell>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableRowDetail.propTypes = {\n  contentComponent: PropTypes.func,\n  toggleCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  toggleColumnWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number,\n};\n\nTableRowDetail.defaultProps = {\n  contentComponent: () => null,\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplatePlaceholder, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithGrouping,\n  tableRowsWithGrouping,\n  isGroupTableCell,\n  isGroupIndentTableCell,\n  isGroupTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nconst tableBodyRowsComputed = ({ tableBodyRows, isGroupRow }) =>\n  tableRowsWithGrouping(tableBodyRows, isGroupRow);\n\nconst showColumnWhenGroupedGetter = (showColumnsWhenGrouped, columnExtensions = []) => {\n  const map = columnExtensions.reduce((acc, columnExtension) => {\n    acc[columnExtension.columnName] = columnExtension.showWhenGrouped;\n    return acc;\n  }, {});\n\n  return columnName => map[columnName] || showColumnsWhenGrouped;\n};\n\nexport class TableGroupRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: GroupCell,\n      rowComponent: GroupRow,\n      indentCellComponent: GroupIndentCell,\n      indentColumnWidth,\n      showColumnsWhenGrouped,\n      columnExtensions,\n    } = this.props;\n\n    const tableColumnsComputed = ({\n      columns, tableColumns, grouping, draftGrouping,\n    }) =>\n      tableColumnsWithGrouping(\n        columns,\n        tableColumns,\n        grouping,\n        draftGrouping,\n        indentColumnWidth,\n        showColumnWhenGroupedGetter(showColumnsWhenGrouped, columnExtensions),\n      );\n\n    return (\n      <Plugin\n        name=\"TableGroupRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isGroupTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedGroups }, { toggleGroupExpanded }) => (\n                <TemplatePlaceholder\n                  name=\"valueFormatter\"\n                  params={{\n                    column: params.tableColumn.column,\n                    value: params.tableRow.row.value,\n                  }}\n                >\n                  {content => (\n                    <GroupCell\n                      {...params}\n                      row={params.tableRow.row}\n                      column={params.tableColumn.column}\n                      expanded={expandedGroups.indexOf(params.tableRow.row.compoundKey) !== -1}\n                      onToggle={() =>\n                        toggleGroupExpanded({ groupKey: params.tableRow.row.compoundKey })}\n                    >\n                      {content}\n                    </GroupCell>\n                  )}\n                </TemplatePlaceholder>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        {GroupIndentCell && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isGroupIndentTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <GroupIndentCell\n                {...params}\n                row={params.tableRow.row}\n                column={params.tableColumn.column}\n              />\n            )}\n          </Template>\n        )}\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableGroupRow.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  indentCellComponent: PropTypes.func,\n  indentColumnWidth: PropTypes.number.isRequired,\n  showColumnsWhenGrouped: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n};\n\nTableGroupRow.defaultProps = {\n  indentCellComponent: null,\n  showColumnsWhenGrouped: false,\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnSortingDirection,\n  tableRowsWithHeading,\n  isHeadingTableCell,\n  isHeadingTableRow,\n  getMessagesFormatter,\n  TABLE_DATA_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableRowsWithHeading(tableHeaderRows);\n\nexport class TableHeaderRow extends React.PureComponent {\n  render() {\n    const {\n      showSortingControls,\n      showGroupingControls,\n      cellComponent: HeaderCell,\n      rowComponent: HeaderRow,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"TableHeaderRow\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SortingState', optional: !showSortingControls },\n          { name: 'GroupingState', optional: !showGroupingControls },\n          { name: 'DragDropProvider', optional: true },\n          { name: 'TableColumnResizing', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                sorting, tableColumns, draggingEnabled, tableColumnResizingEnabled,\n              }, {\n                changeColumnSorting, changeColumnGrouping,\n                changeTableColumnWidth, draftTableColumnWidth, cancelTableColumnWidthDraft,\n              }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const atLeastOneDataColumn = tableColumns\n                  .filter(({ type }) => type === TABLE_DATA_TYPE).length > 1;\n\n                return (\n                  <HeaderCell\n                    {...params}\n                    column={params.tableColumn.column}\n                    getMessage={getMessage}\n                    showSortingControls={showSortingControls && sorting !== undefined}\n                    showGroupingControls={showGroupingControls && atLeastOneDataColumn}\n                    draggingEnabled={draggingEnabled && atLeastOneDataColumn}\n                    resizingEnabled={tableColumnResizingEnabled}\n                    sortingDirection={showSortingControls && sorting !== undefined\n                      ? getColumnSortingDirection(sorting, columnName) : undefined}\n                    onSort={({ direction, keepOther }) =>\n                      changeColumnSorting({ columnName, direction, keepOther })}\n                    onGroup={() => changeColumnGrouping({ columnName })}\n                    onWidthChange={({ shift }) => changeTableColumnWidth({ columnName, shift })}\n                    onWidthDraft={({ shift }) => draftTableColumnWidth({ columnName, shift })}\n                    onWidthDraftCancel={() => cancelTableColumnWidthDraft()}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isHeadingTableRow(tableRow)}\n        >\n          {params => <HeaderRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableHeaderRow.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableHeaderRow.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnFilterConfig,\n  tableHeaderRowsWithFilter,\n  isFilterTableCell,\n  isFilterTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableFilterRow extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      cellComponent: FilterCell,\n      rowComponent: FilterRow,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n      tableHeaderRowsWithFilter(tableHeaderRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableFilterRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isFilterTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ filters }, { changeColumnFilter }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const filter = getColumnFilterConfig(filters, columnName);\n                const onFilter = config => changeColumnFilter({ columnName, config });\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      value: filter ? filter.value : null,\n                      onValueChange: newValue => onFilter(newValue ? { value: newValue } : null),\n                    }}\n                  >\n                    {content => (\n                      <FilterCell\n                        {...params}\n                        getMessage={getMessage}\n                        column={params.tableColumn.column}\n                        filter={filter}\n                        onFilter={onFilter}\n                      >\n                        {content}\n                      </FilterCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFilterTableRow(tableRow)}\n        >\n          {params => <FilterRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableFilterRow.propTypes = {\n  rowHeight: PropTypes.any,\n  messages: PropTypes.object,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableFilterRow.defaultProps = {\n  rowHeight: undefined,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  getRowChange,\n  tableRowsWithEditing,\n  isEditTableRow,\n  isAddedTableRow,\n  isEditTableCell,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableEditRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: EditCell,\n      rowComponent: EditRow,\n      rowHeight,\n    } = this.props;\n\n    const tableBodyRowsComputed = ({ tableBodyRows, editingRowIds, addedRows }) =>\n      tableRowsWithEditing(tableBodyRows, editingRowIds, addedRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableEditRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue, createRowChange, rowChanges }, { changeAddedRow, changeRow }) => {\n                const { rowId, row } = params.tableRow;\n                const { name: columnName } = params.tableColumn.column;\n\n                const isNew = isAddedTableRow(params.tableRow);\n                const changedRow = isNew\n                  ? row\n                  : { ...row, ...getRowChange(rowChanges, rowId) };\n\n                const value = getCellValue(changedRow, columnName);\n                const onValueChange = (newValue) => {\n                  const changeArgs = {\n                    rowId,\n                    change: createRowChange(changedRow, newValue, columnName),\n                  };\n                  if (isNew) {\n                    changeAddedRow(changeArgs);\n                  } else {\n                    changeRow(changeArgs);\n                  }\n                };\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      row,\n                      value,\n                      onValueChange,\n                    }}\n                  >\n                    {content => (\n                      <EditCell\n                        {...params}\n                        row={row}\n                        column={params.tableColumn.column}\n                        value={value}\n                        onValueChange={onValueChange}\n                      >\n                        {content}\n                      </EditCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => (isEditTableRow(tableRow) || isAddedTableRow(tableRow))}\n        >\n          {params => (\n            <EditRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableEditRow.propTypes = {\n  rowHeight: PropTypes.any,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableEditRow.defaultProps = {\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithEditing,\n  isHeadingEditCommandsTableCell,\n  isEditCommandsTableCell,\n  isAddedTableRow,\n  isEditTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n];\n\nexport class TableEditColumn extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      headerCellComponent: HeaderCell,\n      commandComponent: Command,\n      showAddCommand,\n      showEditCommand,\n      showDeleteCommand,\n      width,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithEditing(tableColumns, width);\n\n    return (\n      <Plugin\n        name=\"TableEditColumn\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isHeadingEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <HeaderCell {...params}>\n                  {showAddCommand && (\n                    <Command\n                      id=\"add\"\n                      text={getMessage('addCommand')}\n                      onExecute={() => actions.addRow()}\n                    />\n                  )}\n                </HeaderCell>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const isEdit = isEditTableRow(params.tableRow);\n                const isNew = isAddedTableRow(params.tableRow);\n                const isEditing = isEdit || isNew;\n                const rowIds = [params.tableRow.rowId];\n                return (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                  >\n                    {showEditCommand && !isEditing && (\n                      <Command\n                        id=\"edit\"\n                        text={getMessage('editCommand')}\n                        onExecute={() => actions.startEditRows({ rowIds })}\n                      />\n                    )}\n                    {showDeleteCommand && !isEditing && (\n                      <Command\n                        id=\"delete\"\n                        text={getMessage('deleteCommand')}\n                        onExecute={() => {\n                          actions.deleteRows({ rowIds });\n                          actions.commitDeletedRows({ rowIds });\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"commit\"\n                        text={getMessage('commitCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.commitAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.commitChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"cancel\"\n                        text={getMessage('cancelCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.cancelAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.cancelChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                  </Cell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\nTableEditColumn.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  headerCellComponent: PropTypes.func.isRequired,\n  commandComponent: PropTypes.func.isRequired,\n  showAddCommand: PropTypes.bool,\n  showEditCommand: PropTypes.bool,\n  showDeleteCommand: PropTypes.bool,\n  width: PropTypes.number,\n  messages: PropTypes.object,\n};\nTableEditColumn.defaultProps = {\n  showAddCommand: false,\n  showEditCommand: false,\n  showDeleteCommand: false,\n  width: 140,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Plugin, Getter, Action } from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithWidths,\n  changeTableColumnWidth,\n  draftTableColumnWidth,\n  cancelTableColumnWidthDraft,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableColumnResizing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnWidths: props.defaultColumnWidths,\n      draftColumnWidths: [],\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.changeTableColumnWidth =\n      stateHelper.applyReducer.bind(stateHelper, changeTableColumnWidth);\n    this.draftTableColumnWidth =\n      stateHelper.applyReducer.bind(stateHelper, draftTableColumnWidth);\n    this.cancelTableColumnWidthDraft =\n      stateHelper.applyReducer.bind(stateHelper, cancelTableColumnWidthDraft);\n  }\n  getState() {\n    const {\n      columnWidths = this.state.columnWidths,\n    } = this.props;\n    return {\n      ...this.state,\n      columnWidths,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { columnWidths } = nextState;\n    const { onColumnWidthsChange } = this.props;\n    if (onColumnWidthsChange && columnWidths !== state.columnWidths) {\n      onColumnWidthsChange(columnWidths);\n    }\n  }\n  render() {\n    const { columnWidths, draftColumnWidths } = this.getState();\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithWidths(tableColumns, columnWidths, draftColumnWidths);\n\n    return (\n      <Plugin\n        name=\"TableColumnResizing\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumnResizingEnabled\" value />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Action name=\"changeTableColumnWidth\" action={this.changeTableColumnWidth} />\n        <Action name=\"draftTableColumnWidth\" action={this.draftTableColumnWidth} />\n        <Action name=\"cancelTableColumnWidthDraft\" action={this.cancelTableColumnWidthDraft} />\n      </Plugin>\n    );\n  }\n}\n\nTableColumnResizing.propTypes = {\n  defaultColumnWidths: PropTypes.array,\n  columnWidths: PropTypes.array,\n  onColumnWidthsChange: PropTypes.func,\n};\n\nTableColumnResizing.defaultProps = {\n  defaultColumnWidths: [],\n  columnWidths: undefined,\n  onColumnWidthsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { pageCount, getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class PagingPanel extends React.PureComponent {\n  render() {\n    const {\n      containerComponent: Pager,\n      pageSizes,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"PagingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"footer\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentPage, pageSize, totalCount }, { setCurrentPage, setPageSize }) => (\n              <Pager\n                currentPage={currentPage}\n                pageSize={pageSize}\n                totalCount={totalCount}\n                totalPages={pageCount(totalCount, pageSize)}\n                pageSizes={pageSizes}\n                getMessage={getMessage}\n                onCurrentPageChange={setCurrentPage}\n                onPageSizeChange={setPageSize}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nPagingPanel.propTypes = {\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  containerComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nPagingPanel.defaultProps = {\n  pageSizes: [],\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, Plugin, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  groupingPanelItems,\n  getColumnSortingDirection,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nexport class GroupingPanel extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      containerComponent: Container,\n      itemComponent: Item,\n      emptyMessageComponent: EmptyMessage,\n      showSortingControls,\n      showGroupingControls,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const EmptyMessagePlaceholder = () => (\n      <EmptyMessage\n        getMessage={getMessage}\n      />\n    );\n\n    const ItemPlaceholder = ({ item }) => {\n      const { name: columnName } = item.column;\n      return (\n        <TemplateConnector>\n          {({ sorting }, { changeColumnGrouping, changeColumnSorting }) => (\n            <Item\n              item={item}\n              showSortingControls={showSortingControls && sorting !== undefined}\n              sortingDirection={sorting !== undefined\n                ? getColumnSortingDirection(sorting, columnName) : undefined}\n              showGroupingControls={showGroupingControls}\n              onGroup={() => changeColumnGrouping({ columnName })}\n              onSort={({ direction, keepOther }) =>\n                changeColumnSorting({ columnName, direction, keepOther })}\n            />\n          )}\n        </TemplateConnector>\n      );\n    };\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={[\n          { name: 'GroupingState' },\n          { name: 'Toolbar' },\n          { name: 'SortingState', optional: !showSortingControls },\n        ]}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              columns, grouping, draftGrouping, draggingEnabled,\n            }, {\n              changeColumnGrouping, draftColumnGrouping, cancelColumnGroupingDraft,\n            }) => (\n              <Layout\n                items={groupingPanelItems(columns, grouping, draftGrouping)}\n                draggingEnabled={draggingEnabled}\n                onGroup={changeColumnGrouping}\n                onGroupDraft={draftColumnGrouping}\n                onGroupDraftCancel={cancelColumnGroupingDraft}\n                itemComponent={ItemPlaceholder}\n                emptyMessageComponent={EmptyMessagePlaceholder}\n                containerComponent={Container}\n              />\n            )}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGroupingPanel.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  layoutComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nGroupingPanel.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Plugin, Template } from '@devexpress/dx-react-core';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DataTypeProvider extends React.PureComponent {\n  render() {\n    const {\n      for: columnNames,\n      formatterComponent: Formatter,\n      editorComponent: Editor,\n    } = this.props;\n    return (\n      <Plugin name=\"DataTypeProvider\">\n        {Formatter\n          ? (\n            <Template\n              name=\"valueFormatter\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Formatter {...params} />}\n            </Template>\n          )\n          : null\n        }\n        {Editor\n          ? (\n            <Template\n              name=\"valueEditor\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Editor {...params} />}\n            </Template>\n          )\n          : null\n        }\n      </Plugin>\n    );\n  }\n}\n\nDataTypeProvider.propTypes = {\n  for: PropTypes.arrayOf(PropTypes.string).isRequired,\n  formatterComponent: PropTypes.func,\n  editorComponent: PropTypes.func,\n};\n\nDataTypeProvider.defaultProps = {\n  formatterComponent: undefined,\n  editorComponent: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Action,\n  Getter,\n  Plugin,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter, toggleColumn, visibleTableColumns, tableDataColumnsExist } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst visibleTableColumnsComputed = ({ tableColumns, hiddenColumnNames }) =>\n  visibleTableColumns(tableColumns, hiddenColumnNames);\n\nexport class TableColumnVisibility extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenColumnNames: props.defaultHiddenColumnNames,\n    };\n    const stateHelper = createStateHelper(this);\n\n    this.toggleColumnVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'hiddenColumnNames', toggleColumn);\n  }\n  getState() {\n    const {\n      hiddenColumnNames = this.state.hiddenColumnNames,\n    } = this.props;\n    return {\n      ...this.state,\n      hiddenColumnNames,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { hiddenColumnNames } = nextState;\n    const { onHiddenColumnNamesChange } = this.props;\n    if (onHiddenColumnNamesChange && hiddenColumnNames !== state.hiddenColumnNames) {\n      onHiddenColumnNamesChange(hiddenColumnNames);\n    }\n  }\n  render() {\n    const {\n      emptyMessageComponent: EmptyMessage,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { hiddenColumnNames } = this.getState();\n\n    return (\n      <Plugin\n        name=\"TableColumnVisibility\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"hiddenColumnNames\" value={hiddenColumnNames} />\n        <Getter name=\"tableColumns\" computed={visibleTableColumnsComputed} />\n        <Action\n          name=\"toggleColumnVisibility\"\n          action={this.toggleColumnVisibility}\n        />\n\n        <Template name=\"table\">\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) =>\n                (tableDataColumnsExist(tableColumns)\n                ? <TemplatePlaceholder />\n                : <EmptyMessage\n                  getMessage={getMessage}\n                  {...params}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnVisibility.propTypes = {\n  hiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  defaultHiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  emptyMessageComponent: PropTypes.func.isRequired,\n  onHiddenColumnNamesChange: PropTypes.func,\n  messages: PropTypes.object,\n};\n\nTableColumnVisibility.defaultProps = {\n  hiddenColumnNames: undefined,\n  defaultHiddenColumnNames: [],\n  onHiddenColumnNamesChange: undefined,\n  messages: {},\n};\n","/* globals requestAnimationFrame */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport {\n  getAnimations,\n  filterActiveAnimations,\n  evalAnimations,\n} from '@devexpress/dx-grid-core';\n\nconst TABLE_FLEX_TYPE = 'flex';\n\nconst areColumnsChanged = (prevColumns, nextColumns) => {\n  if (prevColumns.length !== nextColumns.length) return true;\n  const prevKeys = prevColumns.map(column => column.key);\n  return nextColumns.find(column =>\n    prevKeys.indexOf(column.key) === -1) !== undefined;\n};\n\nexport class TableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animationState: new Map(),\n    };\n\n    this.animations = new Map();\n    this.tableNode = null;\n\n    this.setRef = (ref) => { if (ref) this.tableNode = ref; };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { columns: nextColumns } = nextProps;\n    const { columns } = this.props;\n\n    if (areColumnsChanged(columns, nextColumns)) return;\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const tableWidth = findDOMNode(this).scrollWidth;\n    this.animations = getAnimations(columns, nextColumns, tableWidth, this.animations);\n    this.processAnimationFrame();\n  }\n  getColumns() {\n    const { columns } = this.props;\n    const { animationState } = this.state;\n\n    let result = columns;\n\n    const isFixedWidth = columns.filter(column => column.width === undefined).length === 0;\n    if (isFixedWidth) {\n      result = result.slice();\n      result.push({ key: TABLE_FLEX_TYPE, type: TABLE_FLEX_TYPE });\n    }\n\n    if (animationState.size) {\n      result = result\n        .map(column => (animationState.has(column.key)\n          ? { ...column, animationState: animationState.get(column.key) }\n          : column));\n    }\n\n    return result;\n  }\n  processAnimationFrame() {\n    this.animations = filterActiveAnimations(this.animations);\n\n    if (!this.animations.size) {\n      if (this.state.animationState.size) {\n        this.setState({ animationState: new Map() });\n      }\n      return;\n    }\n\n    const animationState = evalAnimations(this.animations);\n    this.setState({ animationState });\n\n    requestAnimationFrame(this.processAnimationFrame.bind(this));\n  }\n  render() {\n    const {\n      layoutComponent: Layout,\n      minColumnWidth,\n      ...restProps\n    } = this.props;\n    const columns = this.getColumns();\n    const minWidth = columns\n      .map(column => column.width || (column.type === TABLE_FLEX_TYPE ? 0 : minColumnWidth))\n      .reduce((acc, width) => acc + width, 0);\n\n    return (\n      <Layout\n        {...restProps}\n        columns={columns}\n        minWidth={minWidth}\n      />\n    );\n  }\n}\n\nTableLayout.propTypes = {\n  columns: PropTypes.array.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  layoutComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ColumnGroup extends React.PureComponent {\n  render() {\n    const { columns } = this.props;\n\n    return (\n      <colgroup>\n        {columns.map(column => (\n          <col\n            key={column.key}\n            style={column.width !== undefined\n              ? { width: `${column.width}px` }\n              : null}\n          />\n        ))}\n      </colgroup>\n    );\n  }\n}\n\nColumnGroup.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTableRowColumnsWithColSpan } from '@devexpress/dx-grid-core';\n\nconst getColumnStyle = ({ column }) => column.animationState;\n\nconst getRowStyle = ({ row }) => (row.height !== undefined\n  ? ({ height: `${row.height}px` })\n  : undefined);\n\nexport class RowLayout extends React.PureComponent {\n  render() {\n    const {\n      row,\n      columns,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    return (\n      <Row\n        tableRow={row}\n        style={getRowStyle({ row })}\n      >\n        {\n          getTableRowColumnsWithColSpan(columns, row.colSpanStart)\n            .map(column => (\n              <Cell\n                key={column.key}\n                tableRow={row}\n                tableColumn={column}\n                style={getColumnStyle({ column })}\n                colSpan={column.colSpan}\n              />\n            ))\n        }\n      </Row>\n    );\n  }\n}\n\nRowLayout.propTypes = {\n  row: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","const OVERSCAN = 3;\n\nexport const STUB_TYPE = 'stub';\nconst VISIBLE_TYPE = 'visible';\nconst OVERSCAN_TYPE = 'overscan';\n\nconst STARTING_KEY = 'starting';\nconst ENDING_KEY = 'ending';\n\nexport const getVisibleRows = (rows, viewportTop, viewportHeight, getRowHeight) => {\n  const result = [];\n\n  const bottom = viewportTop + viewportHeight;\n  let position = 0;\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const last = result[result.length - 1];\n\n    const height = getRowHeight(row);\n    const nextPosition = position + height;\n    if (\n      (viewportTop <= position && position < bottom\n        && viewportTop < nextPosition && nextPosition <= bottom) ||\n      (viewportTop > position && nextPosition > bottom)\n    ) {\n      if (last && last.type === STUB_TYPE) {\n        rows.slice(Math.max(0, i - OVERSCAN), i).forEach((overscanRow) => {\n          const overscanRowSize = getRowHeight(overscanRow);\n          last.height -= overscanRowSize;\n          result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n        });\n      }\n      result.push({ type: VISIBLE_TYPE, height, row });\n    } else if (last && last.type === STUB_TYPE) {\n      last.height += height;\n    } else if (i > 0) {\n      rows.slice(i, i + OVERSCAN).forEach((overscanRow) => {\n        const overscanRowSize = getRowHeight(overscanRow);\n        result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n      });\n      i += OVERSCAN - 1;\n      if (i < rows.length) {\n        result.push({ type: STUB_TYPE, key: ENDING_KEY, height: 0 });\n      }\n    } else {\n      result.push({ type: STUB_TYPE, key: STARTING_KEY, height });\n    }\n    position = nextPosition;\n  }\n\n  return result;\n};\n\nconst getRowPosition = (visibleRows, index) => visibleRows\n  .slice(0, index)\n  .reduce((acc, row) => acc + row.height, 0);\n\nexport const firstVisibleRowOffset = (prevVisibleRows, visibleRows) => {\n  const firstVisibleRowIndex = visibleRows.findIndex(row => row.type === VISIBLE_TYPE);\n  if (firstVisibleRowIndex === -1) return 0;\n\n  const firstVisibleRow = visibleRows[firstVisibleRowIndex].row;\n  const prevIndex = prevVisibleRows.findIndex(row => row.row === firstVisibleRow);\n  if (prevIndex === -1) return 0;\n\n  const position = getRowPosition(visibleRows, firstVisibleRowIndex);\n  const prevPosition = getRowPosition(prevVisibleRows, prevIndex);\n  return position - prevPosition;\n};\n","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowLayout } from './row-layout';\nimport {\n  getVisibleRows,\n  firstVisibleRowOffset,\n} from './virtual-table-utils';\n\nexport class VirtualTableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibleBodyRows: [],\n    };\n\n    this.rowRefs = new Map();\n    this.rowHeights = new Map();\n    this.viewportTop = 0;\n    this.updateViewport = this.updateViewport.bind(this);\n    this.registerRowRef = this.registerRowRef.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n\n    this.state.visibleBodyRows = this.getVisibleRows();\n  }\n  componentDidMount() {\n    this.storeRowHeights();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.props.headerRows !== nextProps.headerRows ||\n      this.props.rows !== nextProps.rows) {\n      const { rowHeights: prevRowHeight } = this;\n      this.rowHeights = [...nextProps.headerRows, ...nextProps.rows].reduce(\n        (acc, row) => {\n          const rowHeight = prevRowHeight.get(row.key);\n          if (rowHeight !== undefined) {\n            acc.set(row.key, rowHeight);\n          }\n          return acc;\n        },\n        new Map(),\n      );\n      this.setState({\n        visibleBodyRows: this.getVisibleRows(nextProps, this.viewportTop),\n      });\n    }\n  }\n  componentDidUpdate() {\n    this.storeRowHeights();\n  }\n  getRowHeight(row) {\n    const storedHeight = this.rowHeights.get(row.key);\n    if (storedHeight !== undefined) return storedHeight;\n    if (row.height) return row.height;\n    return this.props.estimatedRowHeight;\n  }\n  getVisibleRows({ rows, headerRows, height } = this.props, top = this.viewportTop) {\n    const headHeight = headerRows.reduce((acc, row) => acc + this.getRowHeight(row), 0);\n    return getVisibleRows(rows, top, height - headHeight, this.getRowHeight);\n  }\n  storeRowHeights() {\n    const rowsWithChangedHeights = Array.from(this.rowRefs.entries())\n      // eslint-disable-next-line react/no-find-dom-node\n      .map(([row, ref]) => [row, findDOMNode(ref).getBoundingClientRect().height])\n      .filter(([row, height]) => height !== this.getRowHeight(row));\n\n    if (rowsWithChangedHeights.length) {\n      const { rowHeights } = this;\n      rowsWithChangedHeights\n        .forEach(([row, height]) => rowHeights.set(row.key, height));\n\n      const { visibleBodyRows: prevVisibleBodyRows } = this.state;\n      const visibleBodyRows = this.getVisibleRows();\n\n      this.setState({\n        visibleBodyRows,\n      });\n\n      const scrollOffset = firstVisibleRowOffset(prevVisibleBodyRows, visibleBodyRows);\n      if (scrollOffset !== 0) {\n        // eslint-disable-next-line react/no-find-dom-node\n        findDOMNode(this).scrollTop += scrollOffset;\n      }\n    }\n  }\n  registerRowRef(row, ref) {\n    if (ref === null) {\n      this.rowRefs.delete(row);\n    } else {\n      this.rowRefs.set(row, ref);\n    }\n  }\n  updateViewport(e) {\n    const node = e.target;\n\n    // NOTE: prevent iOS to flicker in bounces\n    if (node.scrollTop < 0 ||\n      node.scrollLeft < 0 ||\n      node.scrollLeft + node.clientWidth > node.scrollWidth ||\n      node.scrollTop + node.clientHeight > node.scrollHeight) {\n      return;\n    }\n\n    if (this.viewportTop !== node.scrollTop) {\n      this.viewportTop = node.scrollTop;\n      this.setState({\n        visibleBodyRows: this.getVisibleRows(),\n      });\n    }\n  }\n  render() {\n    const {\n      headerRows, columns,\n      minWidth, height,\n      containerComponent: Container,\n      headTableComponent: HeadTable,\n      tableComponent: Table,\n      headComponent: Head,\n      bodyComponent: Body,\n      rowComponent, cellComponent,\n    } = this.props;\n    const {\n      visibleBodyRows,\n    } = this.state;\n\n    return (\n      <Container\n        style={{ height: `${height}px` }}\n        onScroll={this.updateViewport}\n      >\n        {!!headerRows.length && (\n          <HeadTable\n            style={{ minWidth: `${minWidth}px` }}\n          >\n            <ColumnGroup columns={columns} />\n            <Head>\n              {headerRows.map(row => (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              ))}\n            </Head>\n          </HeadTable>\n        )}\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          <Body>\n            {visibleBodyRows.map((visibleRow) => {\n              if (visibleRow.type === 'stub') {\n                return (\n                  <tr key={visibleRow.key} style={{ height: `${visibleRow.height}px` }} />\n                );\n              }\n              const { row } = visibleRow;\n              return (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              );\n            })}\n          </Body>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nVirtualTableLayout.propTypes = {\n  minWidth: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  tableComponent: PropTypes.func.isRequired,\n  headTableComponent: PropTypes.func,\n  containerComponent: PropTypes.func.isRequired,\n  estimatedRowHeight: PropTypes.number.isRequired,\n};\n\nVirtualTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n  headTableComponent: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowLayout } from './row-layout';\n\nexport class RowsBlockLayout extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      blockComponent: Block,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Block>\n        {\n          rows\n            .map(row => (\n              <RowLayout\n                key={row.key}\n                row={row}\n                columns={columns}\n                rowComponent={rowComponent}\n                cellComponent={cellComponent}\n              />\n            ))\n        }\n      </Block>\n    );\n  }\n}\n\nRowsBlockLayout.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  blockComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowsBlockLayout } from './rows-block-layout';\n\nexport class StaticTableLayout extends React.PureComponent {\n  render() {\n    const {\n      headerRows,\n      rows,\n      columns,\n      minWidth,\n      containerComponent: Container,\n      tableComponent: Table,\n      headComponent,\n      bodyComponent,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Container>\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          {!!headerRows.length && (\n            <RowsBlockLayout\n              rows={headerRows}\n              columns={columns}\n              blockComponent={headComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n            />\n          )}\n          <RowsBlockLayout\n            rows={rows}\n            columns={columns}\n            blockComponent={bodyComponent}\n            rowComponent={rowComponent}\n            cellComponent={cellComponent}\n          />\n        </Table>\n      </Container>\n    );\n  }\n}\n\nStaticTableLayout.propTypes = {\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  minWidth: PropTypes.number.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  bodyComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nStaticTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from '@devexpress/dx-react-core';\n\nexport class ItemLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dragging: false,\n    };\n  }\n  render() {\n    const {\n      item,\n      itemComponent: Item,\n      draggingEnabled,\n      onDragStart,\n      onDragEnd,\n    } = this.props;\n    const { dragging } = this.state;\n\n    const itemElement = <Item item={{ ...item, draft: dragging || item.draft }} />;\n\n    return (draggingEnabled ? (\n      <DragSource\n        payload={[{ type: 'column', columnName: item.column.name }]}\n        onStart={() => {\n          this.setState({ dragging: true });\n          onDragStart();\n        }}\n        onEnd={() => {\n          this.setState({ dragging: false });\n          onDragEnd();\n        }}\n      >\n        {itemElement}\n      </DragSource>\n    ) : (\n      itemElement\n    ));\n  }\n}\n\nItemLayout.propTypes = {\n  item: PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  }).isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n};\n\nItemLayout.defaultProps = {\n  draggingEnabled: false,\n  onDragStart: () => {},\n  onDragEnd: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DropTarget } from '@devexpress/dx-react-core';\nimport {\n  getGroupCellTargetIndex,\n} from '@devexpress/dx-grid-core';\nimport { ItemLayout } from './group-panel-layout/item-layout';\n\nexport class GroupPanelLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    };\n\n    this.onEnter = ({ payload }) => {\n      this.setState({\n        sourceColumnName: payload[0].columnName,\n      });\n    };\n    this.onOver = ({ clientOffset }) => {\n      const { onGroupDraft, items } = this.props;\n      const { sourceColumnName, targetItemIndex: prevTargetItemIndex } = this.state;\n      // eslint-disable-next-line react/no-find-dom-node\n      const itemGeometries = this.itemRefs.map(ref => findDOMNode(ref).getBoundingClientRect());\n      const sourceItemIndex = items.findIndex(({ column }) => column.name === sourceColumnName);\n      const targetItemIndex = getGroupCellTargetIndex(\n        itemGeometries,\n        sourceItemIndex,\n        clientOffset,\n      );\n\n      if (prevTargetItemIndex === targetItemIndex) return;\n\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n      this.setState({ targetItemIndex });\n    };\n    this.onLeave = () => {\n      const { onGroupDraft } = this.props;\n      const { sourceColumnName } = this.state;\n      if (!this.draggingColumnName) {\n        this.resetState();\n        return;\n      }\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: -1,\n      });\n      this.setState({\n        targetItemIndex: -1,\n      });\n    };\n    this.onDrop = () => {\n      const { onGroup } = this.props;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      this.resetState();\n      onGroup({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n    };\n    this.onDragStart = (columnName) => {\n      this.draggingColumnName = columnName;\n    };\n    this.onDragEnd = () => {\n      this.draggingColumnName = null;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      const { onGroup } = this.props;\n      if (sourceColumnName && targetItemIndex === -1) {\n        onGroup({\n          columnName: sourceColumnName,\n        });\n      }\n      this.resetState();\n    };\n  }\n  resetState() {\n    const { onGroupDraftCancel } = this.props;\n    onGroupDraftCancel();\n    this.setState({\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    });\n  }\n  render() {\n    const {\n      items,\n      emptyMessageComponent: EmptyMessage,\n      containerComponent: Container,\n      itemComponent: Item,\n      draggingEnabled,\n    } = this.props;\n\n    this.itemRefs = [];\n\n    const groupPanel = (items.length ? (\n      <Container>\n        {items.map(item => (\n          <ItemLayout\n            key={item.column.name}\n            ref={element => element && this.itemRefs.push(element)}\n            item={item}\n            itemComponent={Item}\n            draggingEnabled={draggingEnabled}\n            onDragStart={() => this.onDragStart(item.column.name)}\n            onDragEnd={this.onDragEnd}\n          />\n        ))}\n      </Container>\n    ) : (\n      <EmptyMessage />\n    ));\n\n    return draggingEnabled\n      ? (\n        <DropTarget\n          onEnter={this.onEnter}\n          onOver={this.onOver}\n          onLeave={this.onLeave}\n          onDrop={this.onDrop}\n        >\n          {groupPanel}\n        </DropTarget>\n      )\n      : groupPanel;\n  }\n}\n\nGroupPanelLayout.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  })).isRequired,\n  onGroup: PropTypes.func,\n  itemComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onGroupDraft: PropTypes.func,\n  onGroupDraftCancel: PropTypes.func,\n};\n\nGroupPanelLayout.defaultProps = {\n  onGroup: () => {},\n  draggingEnabled: false,\n  onGroupDraft: () => {},\n  onGroupDraftCancel: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Toolbar extends React.PureComponent {\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  rootComponent: PropTypes.func.isRequired,\n  flexibleSpaceComponent: PropTypes.func.isRequired,\n};\n"],"names":["GridCore","props","rows","columns","getRowId","getCellValue","Root","rootComponent","rowIdGetter","cellValueGetter","React","PureComponent","propTypes","PropTypes","array","isRequired","func","defaultProps","undefined","Grid","children","oneOfType","arrayOf","node","pluginDependencies","name","ColumnChooser","state","handleToggle","bind","handleHide","buttonRef","button","setState","visible","Overlay","overlayComponent","Container","containerComponent","Item","itemComponent","ToggleButton","toggleButtonComponent","messages","getMessage","getMessagesFormatter","hiddenColumnNames","toggleColumnVisibility","map","item","column","object","createStateHelper","component","lastStateUpdater","initialState","applyReducer","reduce","payload","callback","stateUpdater","prevState","getState","nextState","notifyStateChange","applyFieldReducer","field","FilteringState","defaultFilters","stateHelper","changeColumnFilter","filters","onFiltersChange","IntegratedFiltering","columnExtensions","getColumnPredicate","getColumnExtension","columnName","predicate","rowsComputed","isGroupRow","getRowLevelKey","filteredRows","EditingState","defaultEditingRowIds","defaultAddedRows","defaultRowChanges","defaultDeletedRowIds","startEditRows","stopEditRows","changeRow","cancelChangedRows","cancelChanges","commitChangedRows","rowIds","onCommitChanges","changedRowsByIds","rowChanges","addRow","changeAddedRow","cancelAddedRows","commitAddedRows","addedRowsByIds","addedRows","deleteRows","cancelDeletedRows","commitDeletedRows","deleted","editingRowIds","deletedRowIds","onEditingRowIdsChange","onRowChangesChange","onAddedRowsChange","onDeletedRowIdsChange","createRowChange","createRowChangeGetter","PagingState","defaultCurrentPage","defaultPageSize","setCurrentPage","setPageSize","currentPage","pageSize","onCurrentPageChange","onPageSizeChange","number","clamp","value","max","Math","min","rowsWithHeadersComputed","rowsWithPageHeaders","totalCountComputed","rowCount","paginatedRowsComputed","paginatedRows","currentPageComputed","totalCount","totalPages","pageCount","adjustedCurrentPage","IntegratedPaging","CustomPaging","dependencies","optional","adjustSortIndex","sortIndex","grouping","sorting","slice","acc","columnGrouping","columnSortingIndex","findIndex","columnSorting","GroupingState","defaultGrouping","defaultExpandedGroups","changeColumnGrouping","toggleGroupExpanded","toggleExpandedGroups","draftColumnGrouping","cancelColumnGroupingDraft","changeColumnSorting","expandedGroups","keepOther","restParams","groupingIndex","getters","actions","groupIndex","prevGrouping","prevGroupingIndex","length","onGroupingChange","onExpandedGroupsChange","draftGrouping","expandedGroupedRowsComputed","expandedGroupRows","IntegratedGrouping","getColumnCriteria","criteria","groupedRowsComputed","groupedRows","groupRowChecker","groupRowLevelKeyGetter","getRowIdComputed","customGroupingRowIdGetter","CustomGrouping","getChildGroups","appliedGrouping","appliedExpandedGroups","customGroupedRows","SelectionState","defaultSelection","toggleSelection","selection","onSelectionChange","IntegratedSelection","availableToSelect","toggleSelectAll","getAvailableToSelect","allSelectedComputed","allSelected","someSelectedComputed","someSelected","SortingState","defaultSorting","onSortingChange","IntegratedSorting","getColumnCompare","compare","sortedRows","getTargetColumns","filter","type","find","DragDropProvider","change","clientOffset","Column","columnComponent","tableHeaderRowsComputed","tableHeaderRows","tableHeaderRowsWithReordering","TableColumnReordering","defaultOrder","onOver","handleOver","onLeave","handleLeave","onDrop","handleDrop","order","sourceColumnIndex","targetColumnIndex","draftOrderComputed","getDraftOrder","cellDimensionGetters","cellDimensions","getAvailableColumns","tableColumn","data","TABLE_DATA_TYPE","x","sourceColumnName","availableColumns","relativeSourceColumnIndex","indexOf","cacheCellDimensions","overlappedColumns","left","right","relativeTargetIndex","getTableTargetColumnIndex","prevSourceColumnIndex","prevTargetColumnIndex","draftOrder","resetCellDimensions","onOrderChange","nextOrder","changeColumnOrder","tableContainerComponent","Row","rowComponent","Cell","cellComponent","columnsComputed","tableColumns","orderedColumns","params","tableRow","TABLE_REORDERING_TYPE","storeCellDimensionsGetter","fn","string","RowPlaceholder","CellPlaceholder","tableBodyRowsComputed","tableRowsWithDataRows","Table","Layout","layoutComponent","NoDataRow","noDataRowComponent","NoDataCell","noDataCellComponent","StubCell","stubCellComponent","StubHeaderCell","stubHeaderCellComponent","tableColumnsComputed","tableColumnsWithDataRows","headerRows","bodyRows","tableBodyRows","isHeaderStubTableCell","isDataTableCell","row","isNoDataTableRow","isDataTableRow","TableSelection","highlightRow","selectByRowClick","showSelectionColumn","showSelectAll","HeaderCell","headerCellComponent","selectionColumnWidth","tableColumnsWithSelection","isSelectAllTableCell","selectAllAvailable","select","isSelectTableCell","rowId","bool","RowDetailState","defaultExpandedRowIds","toggleDetailRowExpanded","expandedRowIds","onExpandedRowIdsChange","TableRowDetail","rowHeight","Content","contentComponent","ToggleCell","toggleCellComponent","toggleColumnWidth","tableColumnsWithDetail","expandedDetailRowIds","tableRowsWithExpandedDetail","isDetailToggleTableCell","isDetailRowExpanded","isDetailTableRow","tableRowsWithGrouping","showColumnWhenGroupedGetter","showColumnsWhenGrouped","columnExtension","showWhenGrouped","TableGroupRow","GroupCell","GroupRow","GroupIndentCell","indentCellComponent","indentColumnWidth","tableColumnsWithGrouping","isGroupTableCell","compoundKey","groupKey","isGroupIndentTableCell","isGroupTableRow","tableRowsWithHeading","TableHeaderRow","showSortingControls","showGroupingControls","HeaderRow","isHeadingTableCell","draggingEnabled","tableColumnResizingEnabled","changeTableColumnWidth","draftTableColumnWidth","cancelTableColumnWidthDraft","atLeastOneDataColumn","getColumnSortingDirection","direction","shift","isHeadingTableRow","TableFilterRow","FilterCell","FilterRow","tableHeaderRowsWithFilter","isFilterTableCell","getColumnFilterConfig","onFilter","config","newValue","isFilterTableRow","any","TableEditRow","EditCell","EditRow","tableRowsWithEditing","isEditTableCell","isNew","isAddedTableRow","changedRow","getRowChange","onValueChange","changeArgs","isEditTableRow","TableEditColumn","Command","commandComponent","showAddCommand","showEditCommand","showDeleteCommand","width","tableColumnsWithEditing","isHeadingEditCommandsTableCell","isEditCommandsTableCell","isEdit","isEditing","TableColumnResizing","defaultColumnWidths","columnWidths","onColumnWidthsChange","draftColumnWidths","tableColumnsWithWidths","PagingPanel","Pager","pageSizes","GroupingPanel","EmptyMessage","emptyMessageComponent","EmptyMessagePlaceholder","ItemPlaceholder","groupingPanelItems","DataTypeProvider","columnNames","for","Formatter","formatterComponent","Editor","editorComponent","includes","visibleTableColumnsComputed","visibleTableColumns","TableColumnVisibility","defaultHiddenColumnNames","toggleColumn","onHiddenColumnNamesChange","tableDataColumnsExist","TABLE_FLEX_TYPE","areColumnsChanged","prevColumns","nextColumns","prevKeys","key","TableLayout","Map","animations","tableNode","setRef","ref","nextProps","tableWidth","findDOMNode","scrollWidth","getAnimations","processAnimationFrame","animationState","result","isFixedWidth","push","size","has","get","filterActiveAnimations","evalAnimations","minColumnWidth","restProps","getColumns","minWidth","ColumnGroup","getColumnStyle","getRowStyle","height","RowLayout","colSpanStart","colSpan","OVERSCAN","STUB_TYPE","VISIBLE_TYPE","OVERSCAN_TYPE","STARTING_KEY","ENDING_KEY","getVisibleRows","viewportTop","viewportHeight","getRowHeight","bottom","position","i","last","nextPosition","forEach","overscanRow","overscanRowSize","getRowPosition","visibleRows","index","firstVisibleRowOffset","prevVisibleRows","firstVisibleRowIndex","firstVisibleRow","prevIndex","prevPosition","VirtualTableLayout","rowRefs","rowHeights","updateViewport","registerRowRef","visibleBodyRows","storeRowHeights","prevRowHeight","set","storedHeight","estimatedRowHeight","top","headHeight","rowsWithChangedHeights","Array","from","entries","getBoundingClientRect","prevVisibleBodyRows","scrollOffset","scrollTop","delete","e","target","scrollLeft","clientWidth","clientHeight","scrollHeight","HeadTable","headTableComponent","tableComponent","Head","headComponent","Body","bodyComponent","visibleRow","RowsBlockLayout","Block","blockComponent","StaticTableLayout","ItemLayout","onDragStart","onDragEnd","dragging","itemElement","draft","shape","GroupPanelLayout","onEnter","onGroupDraft","items","prevTargetItemIndex","targetItemIndex","itemGeometries","itemRefs","sourceItemIndex","getGroupCellTargetIndex","draggingColumnName","resetState","onGroup","onGroupDraftCancel","groupPanel","element","Toolbar","FlexibleSpaceComponent","flexibleSpaceComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKaA,QAAb;;;;;;;;;;6BACW;mBAOH,KAAKC,KAPF;UAELC,IAFK,UAELA,IAFK;UAGLC,OAHK,UAGLA,OAHK;UAILC,QAJK,UAILA,QAJK;UAKLC,YALK,UAKLA,YALK;UAMUC,IANV,UAMLC,aANK;;;aAUL;cAAA;;4BACG,MAAD,IAAQ,MAAK,MAAb,EAAoB,OAAOL,IAA3B,GADF;4BAEG,MAAD,IAAQ,MAAK,UAAb,EAAwB,OAAOM,YAAYJ,QAAZ,EAAsBF,IAAtB,CAA/B,GAFF;4BAGG,MAAD,IAAQ,MAAK,SAAb,EAAuB,OAAOC,OAA9B,GAHF;4BAIG,MAAD,IAAQ,MAAK,cAAb,EAA4B,OAAOM,gBAAgBJ,YAAhB,EAA8BF,OAA9B,CAAnC,GAJF;4BAKG,QAAD,IAAU,MAAK,QAAf,GALF;4BAMG,QAAD,IAAU,MAAK,MAAf,GANF;4BAOG,QAAD,IAAU,MAAK,QAAf,GAPF;;kBAQE;YAAU,MAAK,MAAf;;gBACE;;gCACG,mBAAD,IAAqB,MAAK,QAA1B,GADF;gCAEG,mBAAD,IAAqB,MAAK,MAA1B,GAFF;gCAGG,mBAAD,IAAqB,MAAK,QAA1B;;;OAbR;;;;EAV0BO,MAAMC,aAApC;;AA+BAX,SAASY,SAAT,GAAqB;QACbC,UAAUC,KAAV,CAAgBC,UADH;YAETF,UAAUG,IAFD;gBAGLH,UAAUG,IAHL;WAIVH,UAAUC,KAAV,CAAgBC,UAJN;iBAKJF,UAAUG,IAAV,CAAeD;CALhC;;AAQAf,SAASiB,YAAT,GAAwB;YACZC,SADY;gBAERA;CAFhB;;ACvCO,IAAMC,OAAO,SAAPA,IAAO;MAClBjB,IADkB,QAClBA,IADkB;MAElBC,OAFkB,QAElBA,OAFkB;MAGlBC,QAHkB,QAGlBA,QAHkB;MAIlBC,YAJkB,QAIlBA,YAJkB;MAKlBE,aALkB,QAKlBA,aALkB;MAMlBa,QANkB,QAMlBA,QANkB;SAQlB;cAAA;;wBACG,QAAD;YACQlB,IADR;eAEWC,OAFX;gBAGYC,QAHZ;oBAIgBC,YAJhB;qBAKiBE;MANnB;;GARkB;CAAb;;AAoBPY,KAAKP,SAAL,GAAiB;QACTC,UAAUC,KAAV,CAAgBC,UADP;YAELF,UAAUG,IAFL;gBAGDH,UAAUG,IAHT;WAINH,UAAUC,KAAV,CAAgBC,UAJV;iBAKAF,UAAUG,IAAV,CAAeD,UALf;YAMLF,UAAUQ,SAAV,CAAoB,CAC5BR,UAAUS,OAAV,CAAkBT,UAAUU,IAA5B,CAD4B,EAE5BV,UAAUU,IAFkB,CAApB;CANZ;;AAYAJ,KAAKF,YAAL,GAAoB;YACRC,SADQ;gBAEJA,SAFI;YAGRA;CAHZ;;IC7BMM,qBAAqB,CACzB,EAAEC,MAAM,uBAAR,EADyB,EAEzB,EAAEA,MAAM,SAAR,EAFyB,CAA3B;AAIA,IAAaC,aAAb;;;yBACczB,KAAZ,EAAmB;;;6HACXA,KADW;;UAGZ0B,KAAL,GAAa;eACF;KADX;;UAIKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;UACKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,OAAlB;UACKE,SAAL,GAAiB,MAAKA,SAAL,CAAeF,IAAf,OAAjB;;;;;;8BAEQG,MAZZ,EAYoB;WACXA,MAAL,GAAcA,MAAd;;;;mCAEa;WACRC,QAAL,CAAc,EAAEC,SAAS,CAAC,KAAKP,KAAL,CAAWO,OAAvB,EAAd;;;;iCAEW;WACND,QAAL,CAAc,EAAEC,SAAS,KAAX,EAAd;;;;6BAEO;;;mBAOH,KAAKjC,KAPF;UAEakC,OAFb,UAELC,gBAFK;UAGeC,SAHf,UAGLC,kBAHK;UAIUC,IAJV,UAILC,aAJK;UAKkBC,YALlB,UAKLC,qBALK;UAMLC,QANK,UAMLA,QANK;;UAQDC,aAAaC,qBAAqBF,QAArB,CAAnB;UACQT,OATD,GASa,KAAKP,KATlB,CASCO,OATD;;;aAYL;cAAA;;gBACO,eADP;wBAEgBV;;;kBAEd;YAAU,MAAK,gBAAf;8BACG,mBAAD,OADF;;6BAEE;;;kBACMrB,OAAH,QAAGA,OAAH;kBAAY2C,iBAAZ,QAAYA,iBAAZ;kBAAmCC,sBAAnC,SAAmCA,sBAAnC;qBACC;qBAAA,CAAO,QAAP;;oCACG,YAAD;6BACa,OAAKhB,SADlB;4BAEY,OAAKH,YAFjB;8BAGcgB;kBAJhB;;yBAME;;6BACWV,OADX;4BAEU,OAAKF,MAFf;4BAGU,OAAKF;;;6BAEb;;uCACsB3B,OAAnB,EAA4B2C,iBAA5B,EACEE,GADF,CACM;6BACH,oBAAC,IAAD;6BACOC,KAAKC,MAAL,CAAYzB,IADnB;8BAEQwB,IAFR;kCAGY;iCAAMF,uBAAuBE,KAAKC,MAAL,CAAYzB,IAAnC,CAAN;;wBAJT;qBADN;;;eAbR;;;;OART;;;;EAhC+Bf,MAAMC,aAAzC;;AAwEAe,cAAcd,SAAd,GAA0B;oBACNC,UAAUG,IAAV,CAAeD,UADT;sBAEJF,UAAUG,IAAV,CAAeD,UAFX;iBAGTF,UAAUG,IAAV,CAAeD,UAHN;yBAIDF,UAAUG,IAAV,CAAeD,UAJd;YAKdF,UAAUsC;CALtB;;AAQAzB,cAAcT,YAAd,GAA6B;YACjB;CADZ;;AC5FO,IAAMmC,oBAAoB,SAApBA,iBAAoB,CAACC,SAAD,EAAe;MAC1CC,mBAAmB,IAAvB;MACIC,eAAe,IAAnB;;MAEMC,eAAe,SAAfA,YAAe,CAACC,MAAD,EAASC,OAAT,EAAkBC,QAAlB,EAA+B;QAC5CC,eAAe,SAAfA,YAAe,CAACC,SAAD,EAAe;UAC5BlC,qBACD0B,UAAUS,QAAV,CAAmBD,SAAnB,CADC,EAEAR,UAAU1B,KAAV,KAAoBkC,SAApB,GAAgCA,SAAhC,GAA4C,IAF5C,CAAN;UAIIN,iBAAiB,IAArB,EAA2B;uBACV5B,KAAf;;UAEIoC,yBAAiBpC,KAAjB,EAA2B8B,OAAO9B,KAAP,EAAc+B,OAAd,CAA3B,CAAN;;UAEI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;iBACzBI,SAAT,EAAoBpC,KAApB;;UAEEiC,iBAAiBN,gBAArB,EAAuC;kBAC3BU,iBAAV,CAA4BD,SAA5B,EAAuCR,YAAvC;uBACe,IAAf;;;aAGKQ,SAAP;KAlBF;uBAoBmBH,YAAnB;cACU3B,QAAV,CAAmB2B,YAAnB;GAtBF;MAwBMK,oBAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAQT,MAAR,EAAgBC,OAAhB,EAA4B;iBACvC;gCACVQ,KADU,EACFT,OAAO9B,MAAMuC,KAAN,CAAP,EAAqBR,OAArB,CADE;KAAb;GADF;;SAMO;8BAAA;;GAAP;CAlCK;;ICMMS,cAAb;;;0BACclE,KAAZ,EAAmB;;;+HACXA,KADW;;UAGZ0B,KAAL,GAAa;eACF1B,MAAMmE;KADjB;QAGMC,cAAcjB,wBAApB;;UAEKkB,kBAAL,GAA0BD,YAAYJ,iBAAZ,CACvBpC,IADuB,CAClBwC,WADkB,EACL,SADK,EACMC,kBADN,CAA1B;;;;;;+BAGS;2BAGL,KAAKrE,KAHA,CAEPsE,OAFO;UAEPA,OAFO,kCAEG,KAAK5C,KAAL,CAAW4C,OAFd;;0BAKJ,KAAK5C,KADV;;;;;;sCAKgBoC,SArBpB,EAqB+BpC,KArB/B,EAqBsC;UAC1B4C,OAD0B,GACdR,SADc,CAC1BQ,OAD0B;UAE1BC,eAF0B,GAEN,KAAKvE,KAFC,CAE1BuE,eAF0B;;UAG9BA,mBAAmBD,YAAY5C,MAAM4C,OAAzC,EAAkD;wBAChCA,OAAhB;;;;;6BAGK;sBACa,KAAKT,QAAL,EADb;UACCS,OADD,aACCA,OADD;;aAIL;cAAA;;gBACO;;4BAEJ,MAAD,IAAQ,MAAK,SAAb,EAAuB,OAAOA,OAA9B,GAHF;4BAIG,MAAD,IAAQ,MAAK,oBAAb,EAAkC,QAAQ,KAAKD,kBAA/C;OALJ;;;;EA/BgC5D,MAAMC,aAA1C;;AA0CAwD,eAAevD,SAAf,GAA2B;WAChBC,UAAUC,KADM;kBAETD,UAAUC,KAFD;mBAGRD,UAAUG;CAH7B;;AAMAmD,eAAelD,YAAf,GAA8B;WACnBC,SADmB;kBAEZ,EAFY;mBAGXA;CAHnB;;ACjDA,IAAMM,uBAAqB,CACzB,EAAEC,MAAM,gBAAR,EADyB,CAA3B;;AAIA,IAAagD,mBAAb;;;;;;;;;;6BACW;UACCC,gBADD,GACsB,KAAKzE,KAD3B,CACCyE,gBADD;;UAEDC,qBAAqB,SAArBA,kBAAqB;eACzBC,mBAAmBF,gBAAnB,EAAqCG,UAArC,EAAiDC,SADxB;OAA3B;;UAGMC,eAAe,SAAfA,YAAe;YACnB7E,IADmB,QACnBA,IADmB;YAEnBqE,OAFmB,QAEnBA,OAFmB;YAGnBlE,YAHmB,QAGnBA,YAHmB;YAInB2E,UAJmB,QAInBA,UAJmB;YAKnBC,cALmB,QAKnBA,cALmB;eAOnBC,aAAahF,IAAb,EAAmBqE,OAAnB,EAA4BlE,YAA5B,EAA0CsE,kBAA1C,EAA8DK,UAA9D,EAA0EC,cAA1E,CAPmB;OAArB;;aAUE;cAAA;;gBACO,qBADP;wBAEgBzD;;4BAEb,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAUuD,YAA9B;OALJ;;;;EAfqCrE,MAAMC,aAA/C;;AA0BA8D,oBAAoB7D,SAApB,GAAgC;oBACZC,UAAUC;CAD9B;;AAIA2D,oBAAoBxD,YAApB,GAAmC;oBACfC;CADpB;;IChBaiE,YAAb;;;wBACclF,KAAZ,EAAmB;;;2HACXA,KADW;;UAGZ0B,KAAL,GAAa;qBACI1B,MAAMmF,oBADV;iBAEAnF,MAAMoF,gBAFN;kBAGCpF,MAAMqF,iBAHP;qBAIIrF,MAAMsF;KAJvB;;QAOMlB,cAAcjB,wBAApB;;UAEKoC,aAAL,GAAqBnB,YAAYJ,iBAAZ,CAClBpC,IADkB,CACbwC,WADa,EACA,eADA,EACiBmB,aADjB,CAArB;UAEKC,YAAL,GAAoBpB,YAAYJ,iBAAZ,CACjBpC,IADiB,CACZwC,WADY,EACC,eADD,EACkBoB,YADlB,CAApB;;UAGKC,SAAL,GAAiBrB,YAAYJ,iBAAZ,CACdpC,IADc,CACTwC,WADS,EACI,YADJ,EACkBqB,SADlB,CAAjB;UAEKC,iBAAL,GAAyBtB,YAAYJ,iBAAZ,CACtBpC,IADsB,CACjBwC,WADiB,EACJ,YADI,EACUuB,aADV,CAAzB;UAEKC,iBAAL,GAAyB,gBAAgB;UAAbC,MAAa,QAAbA,MAAa;;YAClC7F,KAAL,CAAW8F,eAAX,CAA2B;iBAChBC,iBAAiB,MAAKlC,QAAL,GAAgBmC,UAAjC,EAA6CH,MAA7C;OADX;YAGKH,iBAAL,CAAuB,EAAEG,cAAF,EAAvB;KAJF;;UAOKI,MAAL,GAAc7B,YAAYJ,iBAAZ,CACXpC,IADW,CACNwC,WADM,EACO,WADP,EACoB6B,MADpB,CAAd;UAEKC,cAAL,GAAsB9B,YAAYJ,iBAAZ,CACnBpC,IADmB,CACdwC,WADc,EACD,WADC,EACY8B,cADZ,CAAtB;UAEKC,eAAL,GAAuB/B,YAAYJ,iBAAZ,CACpBpC,IADoB,CACfwC,WADe,EACF,WADE,EACW+B,eADX,CAAvB;UAEKC,eAAL,GAAuB,iBAAgB;UAAbP,MAAa,SAAbA,MAAa;;YAChC7F,KAAL,CAAW8F,eAAX,CAA2B;eAClBO,eAAe,MAAKxC,QAAL,GAAgByC,SAA/B,EAA0CT,MAA1C;OADT;YAGKM,eAAL,CAAqB,EAAEN,cAAF,EAArB;KAJF;;UAOKU,UAAL,GAAkBnC,YAAYJ,iBAAZ,CACfpC,IADe,CACVwC,WADU,EACG,eADH,EACoBmC,UADpB,CAAlB;UAEKC,iBAAL,GAAyBpC,YAAYJ,iBAAZ,CACtBpC,IADsB,CACjBwC,WADiB,EACJ,eADI,EACaoC,iBADb,CAAzB;UAEKC,iBAAL,GAAyB,iBAAgB;UAAbZ,MAAa,SAAbA,MAAa;;YAClC7F,KAAL,CAAW8F,eAAX,CAA2B,EAAEY,SAASb,MAAX,EAA3B;YACKW,iBAAL,CAAuB,EAAEX,cAAF,EAAvB;KAFF;;;;;;+BAKS;mBAML,KAAK7F,KANA;wCAEP2G,aAFO;UAEPA,aAFO,wCAES,KAAKjF,KAAL,CAAWiF,aAFpB;qCAGPX,UAHO;UAGPA,UAHO,qCAGM,KAAKtE,KAAL,CAAWsE,UAHjB;oCAIPM,SAJO;UAIPA,SAJO,oCAIK,KAAK5E,KAAL,CAAW4E,SAJhB;wCAKPM,aALO;UAKPA,aALO,wCAKS,KAAKlF,KAAL,CAAWkF,aALpB;;0BAQJ,KAAKlF,KADV;oCAAA;8BAAA;4BAAA;;;;;;sCAQgBoC,SAlEpB,EAkE+BpC,KAlE/B,EAkEsC;UAC1BiF,aAD0B,GACR7C,SADQ,CAC1B6C,aAD0B;UAE1BE,qBAF0B,GAEA,KAAK7G,KAFL,CAE1B6G,qBAF0B;;UAG9BA,yBAAyBF,kBAAkBjF,MAAMiF,aAArD,EAAoE;8BAC5CA,aAAtB;;;UAGMX,UAP0B,GAOXlC,SAPW,CAO1BkC,UAP0B;UAQ1Bc,kBAR0B,GAQH,KAAK9G,KARF,CAQ1B8G,kBAR0B;;UAS9BA,sBAAsBd,eAAetE,MAAMsE,UAA/C,EAA2D;2BACtCA,UAAnB;;;UAGMM,SAb0B,GAaZxC,SAbY,CAa1BwC,SAb0B;UAc1BS,iBAd0B,GAcJ,KAAK/G,KAdD,CAc1B+G,iBAd0B;;UAe9BA,qBAAqBT,cAAc5E,MAAM4E,SAA7C,EAAwD;0BACpCA,SAAlB;;;UAGMM,aAnB0B,GAmBR9C,SAnBQ,CAmB1B8C,aAnB0B;UAoB1BI,qBApB0B,GAoBA,KAAKhH,KApBL,CAoB1BgH,qBApB0B;;UAqB9BA,yBAAyBJ,kBAAkBlF,MAAMkF,aAArD,EAAoE;8BAC5CA,aAAtB;;;;;6BAGK;oBACuC,KAAK5G,KAD5C;UACCiH,eADD,WACCA,eADD;UACkBxC,gBADlB,WACkBA,gBADlB;;sBAIH,KAAKZ,QAAL,EAJG;UAGL8C,aAHK,aAGLA,aAHK;UAGUX,UAHV,aAGUA,UAHV;UAGsBM,SAHtB,aAGsBA,SAHtB;UAGiCM,aAHjC,aAGiCA,aAHjC;;aAOL;cAAA;;gBACO;;4BAEJ,MAAD;gBACO,iBADP;iBAESM,sBAAsBD,eAAtB,EAAuCxC,gBAAvC;UALX;4BAQG,MAAD,IAAQ,MAAK,eAAb,EAA6B,OAAOkC,aAApC,GARF;4BASG,MAAD,IAAQ,MAAK,eAAb,EAA6B,QAAQ,KAAKpB,aAA1C,GATF;4BAUG,MAAD,IAAQ,MAAK,cAAb,EAA4B,QAAQ,KAAKC,YAAzC,GAVF;4BAYG,MAAD,IAAQ,MAAK,YAAb,EAA0B,OAAOQ,UAAjC,GAZF;4BAaG,MAAD,IAAQ,MAAK,WAAb,EAAyB,QAAQ,KAAKP,SAAtC,GAbF;4BAcG,MAAD,IAAQ,MAAK,mBAAb,EAAiC,QAAQ,KAAKC,iBAA9C,GAdF;4BAeG,MAAD,IAAQ,MAAK,mBAAb,EAAiC,QAAQ,KAAKE,iBAA9C,GAfF;4BAiBG,MAAD,IAAQ,MAAK,WAAb,EAAyB,OAAOU,SAAhC,GAjBF;4BAkBG,MAAD,IAAQ,MAAK,QAAb,EAAsB,QAAQ,KAAKL,MAAnC,GAlBF;4BAmBG,MAAD,IAAQ,MAAK,gBAAb,EAA8B,QAAQ,KAAKC,cAA3C,GAnBF;4BAoBG,MAAD,IAAQ,MAAK,iBAAb,EAA+B,QAAQ,KAAKC,eAA5C,GApBF;4BAqBG,MAAD,IAAQ,MAAK,iBAAb,EAA+B,QAAQ,KAAKC,eAA5C,GArBF;4BAuBG,MAAD,IAAQ,MAAK,eAAb,EAA6B,OAAOQ,aAApC,GAvBF;4BAwBG,MAAD,IAAQ,MAAK,YAAb,EAA0B,QAAQ,KAAKL,UAAvC,GAxBF;4BAyBG,MAAD,IAAQ,MAAK,mBAAb,EAAiC,QAAQ,KAAKC,iBAA9C,GAzBF;4BA0BG,MAAD,IAAQ,MAAK,mBAAb,EAAiC,QAAQ,KAAKC,iBAA9C;OA3BJ;;;;EAjG8BhG,MAAMC,aAAxC;;AAkIAwE,aAAavE,SAAb,GAAyB;mBACNC,UAAUG,IADJ;oBAELH,UAAUC,KAFL;;iBAIRD,UAAUC,KAJF;wBAKDD,UAAUC,KALT;yBAMAD,UAAUG,IANV;;aAQZH,UAAUC,KARE;oBASLD,UAAUC,KATL;qBAUJD,UAAUG,IAVN;;cAYXH,UAAUsC,MAZC;qBAaJtC,UAAUsC,MAbN;sBAcHtC,UAAUG,IAdP;;iBAgBRH,UAAUC,KAhBF;wBAiBDD,UAAUC,KAjBT;yBAkBAD,UAAUG,IAlBV;;mBAoBNH,UAAUG,IAAV,CAAeD;CApBlC;;AAuBAoE,aAAalE,YAAb,GAA4B;mBACTC,SADS;oBAERA,SAFQ;;iBAIXA,SAJW;wBAKJ,EALI;yBAMHA,SANG;;cAQdA,SARc;qBASP,EATO;sBAUNA,SAVM;;aAYfA,SAZe;oBAaR,EAbQ;qBAcPA,SAdO;;iBAgBXA,SAhBW;wBAiBJ,EAjBI;yBAkBHA;CAlBzB;;IC1KakG,WAAb;;;uBACcnH,KAAZ,EAAmB;;;yHACXA,KADW;;UAGZ0B,KAAL,GAAa;mBACE1B,MAAMoH,kBADR;gBAEDpH,MAAMqH;KAFlB;;QAKMjD,cAAcjB,wBAApB;;UAEKmE,cAAL,GAAsBlD,YAAYJ,iBAAZ,CACnBpC,IADmB,CACdwC,WADc,EACD,aADC,EACckD,cADd,CAAtB;UAEKC,WAAL,GAAmBnD,YAAYJ,iBAAZ,CAChBpC,IADgB,CACXwC,WADW,EACE,UADF,EACcmD,WADd,CAAnB;;;;;;+BAGS;mBAIL,KAAKvH,KAJA;sCAEPwH,WAFO;UAEPA,WAFO,sCAEO,KAAK9F,KAAL,CAAW8F,WAFlB;mCAGPC,QAHO;UAGPA,QAHO,mCAGI,KAAK/F,KAAL,CAAW+F,QAHf;;0BAMJ,KAAK/F,KADV;gCAAA;;;;;;sCAMgBoC,SA3BpB,EA2B+BpC,KA3B/B,EA2BsC;UAC1B8F,WAD0B,GACV1D,SADU,CAC1B0D,WAD0B;UAE1BE,mBAF0B,GAEF,KAAK1H,KAFH,CAE1B0H,mBAF0B;;UAG9BA,uBAAuBF,gBAAgB9F,MAAM8F,WAAjD,EAA8D;4BACxCA,WAApB;;;UAGMC,QAP0B,GAOb3D,SAPa,CAO1B2D,QAP0B;UAQ1BE,gBAR0B,GAQL,KAAK3H,KARA,CAQ1B2H,gBAR0B;;UAS9BA,oBAAoBF,aAAa/F,MAAM+F,QAA3C,EAAqD;yBAClCA,QAAjB;;;;;6BAGK;sBAC2B,KAAK5D,QAAL,EAD3B;UACC4D,QADD,aACCA,QADD;UACWD,WADX,aACWA,WADX;;aAIL;cAAA;;gBACO;;4BAEJ,MAAD,IAAQ,MAAK,aAAb,EAA2B,OAAOA,WAAlC,GAHF;4BAIG,MAAD,IAAQ,MAAK,UAAb,EAAwB,OAAOC,QAA/B,GAJF;4BAKG,MAAD,IAAQ,MAAK,gBAAb,EAA8B,QAAQ,KAAKH,cAA3C,GALF;4BAMG,MAAD,IAAQ,MAAK,aAAb,EAA2B,QAAQ,KAAKC,WAAxC;OAPJ;;;;EA3C6B9G,MAAMC,aAAvC;;AAwDAyG,YAAYxG,SAAZ,GAAwB;YACZC,UAAUgH,MADE;mBAELhH,UAAUgH,MAFL;oBAGJhH,UAAUG,IAHN;eAITH,UAAUgH,MAJD;sBAKFhH,UAAUgH,MALR;uBAMDhH,UAAUG;CANjC;;AASAoG,YAAYnG,YAAZ,GAA2B;YACfC,SADe;mBAER,EAFQ;oBAGPA,SAHO;eAIZA,SAJY;sBAKL,CALK;uBAMJA;CANvB;;ACnEA,IAAMM,uBAAqB,CACzB,EAAEC,MAAM,aAAR,EADyB,CAA3B;;AAIA,IAAMqG,QAAQ,SAARA,KAAQ,CAACC,KAAD,EAAQC,GAAR;SAAgBC,KAAKD,GAAL,CAASC,KAAKC,GAAL,CAASH,KAAT,EAAgBC,GAAhB,CAAT,EAA+B,CAA/B,CAAhB;CAAd;;AAEA,IAAMG,0BAA0B,SAA1BA,uBAA0B;MAAGjI,IAAH,QAAGA,IAAH;MAASwH,QAAT,QAASA,QAAT;MAAmBzC,cAAnB,QAAmBA,cAAnB;SAC9BmD,oBAAoBlI,IAApB,EAA0BwH,QAA1B,EAAoCzC,cAApC,CAD8B;CAAhC;AAEA,IAAMoD,qBAAqB,SAArBA,kBAAqB;MAAGnI,IAAH,SAAGA,IAAH;SAAcoI,SAASpI,IAAT,CAAd;CAA3B;AACA,IAAMqI,wBAAwB,SAAxBA,qBAAwB;MAAGrI,IAAH,SAAGA,IAAH;MAASwH,QAAT,SAASA,QAAT;MAAmBD,WAAnB,SAAmBA,WAAnB;SAC5Be,cAActI,IAAd,EAAoBwH,QAApB,EAA8BD,WAA9B,CAD4B;CAA9B;AAEA,IAAMgB,sBAAsB,SAAtBA,mBAAsB,eAA+D;MAA5DhB,WAA4D,SAA5DA,WAA4D;MAA/CiB,UAA+C,SAA/CA,UAA+C;MAAnChB,QAAmC,SAAnCA,QAAmC;MAArBH,iBAAqB,SAArBA,cAAqB;;MACnFoB,aAAaC,UAAUF,UAAV,EAAsBhB,QAAtB,CAAnB;MACMmB,sBAAsBf,MAAML,WAAN,EAAmBkB,aAAa,CAAhC,CAA5B;MACIA,aAAa,CAAb,GAAiBlB,WAArB,EAAkC;sBACjBoB,mBAAf;;SAEKA,mBAAP;CANF;;;AAUA,IAAaC,gBAAb;;;;;;;;;;6BACW;aAEL;cAAA;;gBACO,kBADP;wBAEgBtH;;4BAEb,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAU2G,uBAA9B,GAJF;4BAKG,MAAD,IAAQ,MAAK,YAAb,EAA0B,UAAUE,kBAApC,GALF;4BAMG,MAAD,IAAQ,MAAK,aAAb,EAA2B,UAAUI,mBAArC,GANF;4BAOG,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAUF,qBAA9B;OARJ;;;;EAFkC7H,MAAMC,aAA5C;;ACrBA,IAAMa,uBAAqB,CACzB,EAAEC,MAAM,aAAR,EADyB,CAA3B;;AAIA,IAAasH,YAAb;;;;;;;;;;6BACW;UACCL,UADD,GACgB,KAAKzI,KADrB,CACCyI,UADD;;;aAIL;cAAA;;gBACO,cADP;wBAEgBlH;;4BAEb,MAAD,IAAQ,MAAK,YAAb,EAA0B,OAAOkH,UAAjC;OALJ;;;;EAJ8BhI,MAAMC,aAAxC;;AAeAoI,aAAanI,SAAb,GAAyB;cACXC,UAAUgH;CADxB;;AAIAkB,aAAa9H,YAAb,GAA4B;cACd;CADd;;AChBA,IAAM+H,eAAe,CACnB,EAAEvH,MAAM,cAAR,EAAwBwH,UAAU,IAAlC,EADmB,CAArB;;AAIA,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,OAAtB;SACtBpB,KAAKD,GAAL,CACEoB,SAASE,KAAT,CAAe,CAAf,EAAkBH,SAAlB,EAA6B1F,MAA7B,CACE,UAAC8F,GAAD,EAAMC,cAAN,EAAyB;QACjBC,qBAAqBJ,QAAQK,SAAR,CAAkB;aAC3CC,cAAc9E,UAAd,KAA6B2E,eAAe3E,UADD;KAAlB,CAA3B;WAEQ4E,uBAAuB,CAAC,CAAxB,GAA4BF,MAAM,CAAlC,GAAsCA,GAA9C;GAJJ,EAMEJ,SANF,CADF,EASE,CATF,CADsB;CAAxB;;IAaaS;;;yBACC3J,KAAZ,EAAmB;;;6HACXA,KADW;;UAGZ0B,KAAL,GAAa;gBACD1B,MAAM4J,eADL;qBAEI,IAFJ;sBAGK5J,MAAM6J;KAHxB;;UAMKzF,WAAL,GAAmBjB,wBAAnB;;UAEK2G,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BlI,IAA1B,OAA5B;UACKmI,mBAAL,GAA2B,MAAK3F,WAAL,CAAiBb,YAAjB,CACxB3B,IADwB,CACnB,MAAKwC,WADc,EACD4F,oBADC,CAA3B;UAEKC,mBAAL,GAA2B,MAAK7F,WAAL,CAAiBb,YAAjB,CACxB3B,IADwB,CACnB,MAAKwC,WADc,EACD6F,mBADC,CAA3B;UAEKC,yBAAL,GAAiC,MAAK9F,WAAL,CAAiBb,YAAjB,CAC9B3B,IAD8B,CACzB,MAAKwC,WADoB,EACP8F,yBADO,CAAjC;UAEKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBvI,IAAzB,OAA3B;;;;;;+BAES;mBAIL,KAAK5B,KAJA;mCAEPmJ,QAFO;UAEPA,QAFO,mCAEI,KAAKzH,KAAL,CAAWyH,QAFf;yCAGPiB,cAHO;UAGPA,cAHO,yCAGU,KAAK1I,KAAL,CAAW0I,cAHrB;;0BAMJ,KAAK1I,KADV;0BAAA;;;;;;+DAUA;UAFE0H,OAEF,SAFEA,OAEF;UADEe,oBACF,SADEA,mBACF;UAHEvF,UAGF,QAHEA,UAGF;UAHcyF,SAGd,QAHcA,SAGd;UAH4BC,UAG5B;;sBACqB,KAAKzG,QAAL,EADrB;UACQsF,QADR,aACQA,QADR;;UAEMoB,gBAAgBpB,SACnBM,SADmB,CACT;eAAkBF,eAAe3E,UAAf,KAA8BA,UAAhD;OADS,CAAtB;UAEI2F,kBAAkB,CAAC,CAAvB,EAA0B;;gCACxB;qBAEaF,aAAalB,SAASpG,GAAT,CAAa;mBAAkBwG,eAAe3E,UAAjC;WAAb;WACrB0F,UAHL;eAKO,KAAP;;;UAGIpB,YAAYD,gBAAgBsB,aAAhB,EAA+BpB,QAA/B,EAAyCC,OAAzC,CAAlB;;8BACA;mBAEa,IAFb;;SAIKkB,UAJL;aAMO,KAAP;;;;mDAE+CE,SAASC,SAAS;UAA5C7F,UAA4C,SAA5CA,UAA4C;UAAhC8F,UAAgC,SAAhCA,UAAgC;;WAC5DtG,WAAL,CAAiBb,YAAjB,CACEuG,oBADF,EAEE,EAAElF,sBAAF,EAAc8F,sBAAd,EAFF,EAGE,UAAC5G,SAAD,EAAYpC,KAAZ,EAAsB;YACZyH,QADY,GACCrF,SADD,CACZqF,QADY;YAEFwB,YAFE,GAEejJ,KAFf,CAEZyH,QAFY;YAGZC,OAHY,GAGAoB,OAHA,CAGZpB,OAHY;YAIZe,sBAJY,GAIYM,OAJZ,CAIZN,mBAJY;;;YAMhB,CAACf,OAAL,EAAc;;YAERI,qBAAqBJ,QACxBK,SADwB,CACd;iBAAiBC,cAAc9E,UAAd,KAA6BA,UAA9C;SADc,CAA3B;YAEMgG,oBAAoBD,aACvBlB,SADuB,CACb;iBAAkBF,eAAe3E,UAAf,KAA8BA,UAAhD;SADa,CAA1B;YAEM2F,gBAAgBpB,SACnBM,SADmB,CACT;iBAAkBF,eAAe3E,UAAf,KAA8BA,UAAhD;SADS,CAAtB;;YAGI4E,uBAAuB,CAAC,CAAxB,IACEoB,sBAAsBD,aAAaE,MAAb,GAAsB,CAA5C,IAAiDN,kBAAkB,CAAC,CAD1E,EAC8E;;YAExErB,YAAYD,gBAChBsB,kBAAkB,CAAC,CAAnB,GAAuBpB,SAAS0B,MAAhC,GAAyCN,aADzB,EAEhBpB,QAFgB,EAGhBC,OAHgB,CAAlB;;YAMII,uBAAuBN,SAA3B,EAAsC;;;qBAGzB,IADb;;WAGKE,QAAQI,kBAAR,CAHL;OA7BJ;;;;sCAqCgB1F,WAAWpC,OAAO;UAC1ByH,QAD0B,GACbrF,SADa,CAC1BqF,QAD0B;UAE1B2B,gBAF0B,GAEL,KAAK9K,KAFA,CAE1B8K,gBAF0B;;UAG9BA,oBAAoB3B,aAAazH,MAAMyH,QAA3C,EAAqD;yBAClCA,QAAjB;;;UAGMiB,cAP0B,GAOPtG,SAPO,CAO1BsG,cAP0B;UAQ1BW,sBAR0B,GAQC,KAAK/K,KARN,CAQ1B+K,sBAR0B;;UAS9BA,0BAA0BX,mBAAmB1I,MAAM0I,cAAvD,EAAuE;+BAC9CA,cAAvB;;;;;6BAGK;uBAC6C,KAAKvG,QAAL,EAD7C;UACCsF,QADD,cACCA,QADD;UACW6B,aADX,cACWA,aADX;UAC0BZ,cAD1B,cAC0BA,cAD1B;;aAIL;cAAA;;gBACO,eADP;wBAEgBrB;;4BAEb,MAAD,IAAQ,MAAK,UAAb,EAAwB,OAAOI,QAA/B,GAJF;4BAKG,MAAD,IAAQ,MAAK,eAAb,EAA6B,OAAO6B,iBAAiB7B,QAArD,GALF;4BAMG,MAAD,IAAQ,MAAK,sBAAb,EAAoC,QAAQ,KAAKW,oBAAjD,GANF;4BAOG,MAAD,IAAQ,MAAK,qBAAb,EAAmC,QAAQ,KAAKG,mBAAhD,GAPF;4BAQG,MAAD,IAAQ,MAAK,2BAAb,EAAyC,QAAQ,KAAKC,yBAAtD,GARF;4BAUG,MAAD,IAAQ,MAAK,gBAAb,EAA8B,OAAOE,cAArC,GAVF;4BAWG,MAAD,IAAQ,MAAK,qBAAb,EAAmC,QAAQ,KAAKL,mBAAhD,GAXF;4BAaG,MAAD,IAAQ,MAAK,qBAAb,EAAmC,QAAQ,KAAKI,mBAAhD;OAdJ;;;;EAhH+B1J,MAAMC;;cAoI3BC,SAAd,GAA0B;YACdC,UAAUC,KADI;mBAEPD,UAAUC,KAFH;oBAGND,UAAUG,IAHJ;kBAIRH,UAAUC,KAJF;yBAKDD,UAAUC,KALT;0BAMAD,UAAUG;CANpC;;AASA4I,cAAc3I,YAAd,GAA6B;YACjBC,SADiB;mBAEV,EAFU;oBAGTA,SAHS;kBAIXA,SAJW;yBAKJ,EALI;0BAMHA;CAN1B;;AC9JA,IAAMM,uBAAqB,CACzB,EAAEC,MAAM,eAAR,EADyB,CAA3B;;AAIA,IAAMyJ,8BAA8B,SAA9BA,2BAA8B;MAAGhL,IAAH,QAAGA,IAAH;MAASkJ,QAAT,QAASA,QAAT;MAAmBiB,cAAnB,QAAmBA,cAAnB;SAClCc,kBAAkBjL,IAAlB,EAAwBkJ,QAAxB,EAAkCiB,cAAlC,CADkC;CAApC;;AAGA,IAAae,kBAAb;;;;;;;;;;6BACW;UACC1G,gBADD,GACsB,KAAKzE,KAD3B,CACCyE,gBADD;;UAED2G,oBAAoB,SAApBA,iBAAoB;eACxBzG,mBAAmBF,gBAAnB,EAAqCG,UAArC,EAAiDyG,QADzB;OAA1B;;UAGMC,sBAAsB,SAAtBA,mBAAsB;YAAGrL,IAAH,SAAGA,IAAH;YAASkJ,QAAT,SAASA,QAAT;YAAmB/I,YAAnB,SAAmBA,YAAnB;eAC1BmL,YAAYtL,IAAZ,EAAkBkJ,QAAlB,EAA4B/I,YAA5B,EAA0CgL,iBAA1C,CAD0B;OAA5B;;aAIE;cAAA;;gBACO,oBADP;wBAEgB7J;;4BAEb,MAAD,IAAQ,MAAK,YAAb,EAA0B,OAAOiK,eAAjC,GAJF;4BAKG,MAAD,IAAQ,MAAK,gBAAb,EAA8B,OAAOC,sBAArC,GALF;4BAMG,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAUH,mBAA9B,GANF;4BAOG,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAUL,2BAA9B;OARJ;;;;EAToCxK,MAAMC,aAA9C;;AAuBAyK,mBAAmBxK,SAAnB,GAA+B;oBACXC,UAAUC;CAD9B;;AAIAsK,mBAAmBnK,YAAnB,GAAkC;oBACdC;CADpB;;AClCA,IAAMM,uBAAqB,CACzB,EAAEC,MAAM,eAAR,EADyB,CAA3B;;AAIA,IAAMyJ,gCAA8B,SAA9BA,2BAA8B;MAAGhL,IAAH,QAAGA,IAAH;MAASkJ,QAAT,QAASA,QAAT;MAAmBiB,cAAnB,QAAmBA,cAAnB;SAClCc,kBAAkBjL,IAAlB,EAAwBkJ,QAAxB,EAAkCiB,cAAlC,CADkC;CAApC;AAEA,IAAMsB,mBAAmB,SAAnBA,gBAAmB;MAAGvL,QAAH,SAAGA,QAAH;MAAaF,IAAb,SAAaA,IAAb;SACvB0L,0BAA0BxL,QAA1B,EAAoCF,IAApC,CADuB;CAAzB;;AAGA,IAAa2L,cAAb;;;;;;;;;;6BACW;mBAKH,KAAK5L,KALF;UAEL6L,cAFK,UAELA,cAFK;UAGKC,eAHL,UAGL3C,QAHK;UAIW4C,qBAJX,UAIL3B,cAJK;;UAMDkB,sBAAsB,SAAtBA,mBAAsB;YAAGrL,IAAH,SAAGA,IAAH;YAASkJ,QAAT,SAASA,QAAT;eAC1B6C,kBAAkB/L,IAAlB,EAAwBkJ,QAAxB,EAAkC0C,cAAlC,CAD0B;OAA5B;;aAIE;cAAA;;gBACO,gBADP;wBAEgBtK;;2BAGZ,oBAAC,MAAD,IAAQ,MAAK,UAAb,EAAwB,OAAOuK,eAA/B,GALJ;iCAQI,oBAAC,MAAD,IAAQ,MAAK,gBAAb,EAA8B,OAAOC,qBAArC,GARJ;4BAUG,MAAD,IAAQ,MAAK,YAAb,EAA0B,OAAOP,eAAjC,GAVF;4BAWG,MAAD,IAAQ,MAAK,gBAAb,EAA8B,OAAOC,sBAArC,GAXF;4BAYG,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAUH,mBAA9B,GAZF;4BAaG,MAAD,IAAQ,MAAK,UAAb,EAAwB,UAAUI,gBAAlC,GAbF;4BAcG,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAUT,6BAA9B;OAfJ;;;;EAVgCxK,MAAMC,aAA1C;;AA+BAkL,eAAejL,SAAf,GAA2B;kBACTC,UAAUG,IAAV,CAAeD,UADN;YAEfF,UAAUC,KAFK;kBAGTD,UAAUC;CAH5B;;AAMA+K,eAAe5K,YAAf,GAA8B;YAClBC,SADkB;kBAEZA;CAFlB;;ICnDagL,cAAb;;;0BACcjM,KAAZ,EAAmB;;;+HACXA,KADW;;UAGZ0B,KAAL,GAAa;iBACA1B,MAAMkM;KADnB;;QAIM9H,cAAcjB,wBAApB;;UAEKgJ,eAAL,GAAuB/H,YAAYJ,iBAAZ,CACpBpC,IADoB,CACfwC,WADe,EACF,WADE,EACW+H,eADX,CAAvB;;;;;;+BAGS;6BAGL,KAAKnM,KAHA,CAEPoM,SAFO;UAEPA,SAFO,oCAEK,KAAK1K,KAAL,CAAW0K,SAFhB;;0BAKJ,KAAK1K,KADV;;;;;;sCAKgBoC,SAtBpB,EAsB+BpC,KAtB/B,EAsBsC;UAC1B0K,SAD0B,GACZtI,SADY,CAC1BsI,SAD0B;UAE1BC,iBAF0B,GAEJ,KAAKrM,KAFD,CAE1BqM,iBAF0B;;UAG9BA,qBAAqBD,cAAc1K,MAAM0K,SAA7C,EAAwD;0BACpCA,SAAlB;;;;;6BAGK;sBACe,KAAKvI,QAAL,EADf;UACCuI,SADD,aACCA,SADD;;aAIL;cAAA;;gBACO;;4BAEJ,MAAD,IAAQ,MAAK,WAAb,EAAyB,OAAOA,SAAhC,GAHF;4BAIG,MAAD,IAAQ,MAAK,iBAAb,EAA+B,QAAQ,KAAKD,eAA5C;OALJ;;;;EAhCgC1L,MAAMC,aAA1C;;AA2CAuL,eAAetL,SAAf,GAA2B;aACdC,UAAUC,KADI;oBAEPD,UAAUC,KAFH;qBAGND,UAAUG;CAH/B;;AAMAkL,eAAejL,YAAf,GAA8B;aACjBC,SADiB;oBAEV,EAFU;qBAGTA;CAHrB;;AC/CA,IAAMM,uBAAqB,CACzB,EAAEC,MAAM,gBAAR,EADyB,CAA3B;;AAIA,IAAa8K,mBAAb;;;+BACctM,KAAZ,EAAmB;;;yIACXA,KADW;;UAGZ0B,KAAL,GAAa,EAAE6K,mBAAmB,EAArB,EAAb;;UAEKC,eAAL,GAAuB,MAAKA,eAAL,CAAqB5K,IAArB,OAAvB;UACK2K,iBAAL,GAAyB,MAAKA,iBAAL,CAAuB3K,IAAvB,OAAzB;;;;;;oCAGcF,KAVlB,EAUyB8I,OAVzB,QAUuD;UAAnB2B,kBAAmB,QAAnBA,eAAmB;UAC3CI,iBAD2C,GACrB,KAAK7K,KADgB,CAC3C6K,iBAD2C;;yBAEnC,EAAE1G,QAAQ0G,iBAAV,EAA6B7K,YAA7B,EAAhB;;;;6CAEgD;UAA9BzB,IAA8B,SAA9BA,IAA8B;UAAxBE,QAAwB,SAAxBA,QAAwB;UAAd4E,UAAc,SAAdA,UAAc;;WAC3C/C,QAAL,CAAc,EAAEuK,mBAAmBE,qBAAqBxM,IAArB,EAA2BE,QAA3B,EAAqC4E,UAArC,CAArB,EAAd;aACO9E,IAAP;;;;6BAEO;UACCsM,iBADD,GACuB,KAAK7K,KAD5B,CACC6K,iBADD;;;UAGDG,sBAAsB,SAAtBA,mBAAsB;YAAGN,SAAH,SAAGA,SAAH;eAC1BO,YAAY,EAAEP,oBAAF,EAAaG,oCAAb,EAAZ,CAD0B;OAA5B;UAEMK,uBAAuB,SAAvBA,oBAAuB;YAAGR,SAAH,SAAGA,SAAH;eAC3BS,aAAa,EAAET,oBAAF,EAAaG,oCAAb,EAAb,CAD2B;OAA7B;;aAIE;cAAA;;gBACO,qBADP;wBAEgBhL;;4BAEb,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAU,KAAKgL,iBAAnC,GAJF;4BAKG,MAAD,IAAQ,MAAK,aAAb,EAA2B,UAAUG,mBAArC,GALF;4BAMG,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAUE,oBAAtC,GANF;4BAOG,MAAD,IAAQ,MAAK,oBAAb,EAAkC,OAAO,CAAC,CAACL,kBAAkB1B,MAA7D,GAPF;4BASG,MAAD,IAAQ,MAAK,iBAAb,EAA+B,QAAQ,KAAK2B,eAA5C;OAVJ;;;;EA1BqC/L,MAAMC,aAA/C;;ICNaoM,YAAb;;;wBACc9M,KAAZ,EAAmB;;;2HACXA,KADW;;UAGZ0B,KAAL,GAAa;eACF1B,MAAM+M;KADjB;;QAIM3I,cAAcjB,wBAApB;;UAEKgH,mBAAL,GAA2B/F,YAAYb,YAAZ,CACxB3B,IADwB,CACnBwC,WADmB,EACN+F,mBADM,CAA3B;;;;;;+BAGS;2BAGL,KAAKnK,KAHA,CAEPoJ,OAFO;UAEPA,OAFO,kCAEG,KAAK1H,KAAL,CAAW0H,OAFd;;0BAKJ,KAAK1H,KADV;;;;;;sCAKgBoC,SAtBpB,EAsB+BpC,KAtB/B,EAsBsC;UAC1B0H,OAD0B,GACdtF,SADc,CAC1BsF,OAD0B;UAE1B4D,eAF0B,GAEN,KAAKhN,KAFC,CAE1BgN,eAF0B;;UAG9BA,mBAAmB5D,YAAY1H,MAAM0H,OAAzC,EAAkD;wBAChCA,OAAhB;;;;;6BAGK;sBACa,KAAKvF,QAAL,EADb;UACCuF,OADD,aACCA,OADD;;aAIL;cAAA;;gBACO;;4BAEJ,MAAD,IAAQ,MAAK,SAAb,EAAuB,OAAOA,OAA9B,GAHF;4BAIG,MAAD,IAAQ,MAAK,qBAAb,EAAmC,QAAQ,KAAKe,mBAAhD;OALJ;;;;EAhC8B1J,MAAMC,aAAxC;;AA2CAoM,aAAanM,SAAb,GAAyB;WACdC,UAAUC,KADI;kBAEPD,UAAUC,KAFH;mBAGND,UAAUG;CAH7B;;AAMA+L,aAAa9L,YAAb,GAA4B;WACjBC,SADiB;kBAEV,EAFU;mBAGTA;CAHnB;;AClDA,IAAMM,uBAAqB,CACzB,EAAEC,MAAM,cAAR,EADyB,CAA3B;;AAIA,IAAayL,iBAAb;;;;;;;;;;6BACW;UACCxI,gBADD,GACsB,KAAKzE,KAD3B,CACCyE,gBADD;;UAEDyI,mBAAmB,SAAnBA,gBAAmB;eACvBvI,mBAAmBF,gBAAnB,EAAqCG,UAArC,EAAiDuI,OAD1B;OAAzB;;UAGMrI,eAAe,SAAfA,YAAe;YACnB7E,IADmB,QACnBA,IADmB;YACbmJ,OADa,QACbA,OADa;YACJhJ,YADI,QACJA,YADI;YACU2E,UADV,QACUA,UADV;YACsBC,cADtB,QACsBA,cADtB;eAGnBoI,WAAWnN,IAAX,EAAiBmJ,OAAjB,EAA0BhJ,YAA1B,EAAwC8M,gBAAxC,EAA0DnI,UAA1D,EAAsEC,cAAtE,CAHmB;OAArB;;aAME;cAAA;;gBACO,mBADP;wBAEgBzD;;4BAEb,MAAD,IAAQ,MAAK,MAAb,EAAoB,UAAUuD,YAA9B;OALJ;;;;EAXmCrE,MAAMC,aAA7C;;AAsBAuM,kBAAkBtM,SAAlB,GAA8B;oBACVC,UAAUC;CAD9B;;AAIAoM,kBAAkBjM,YAAlB,GAAiC;oBACbC;CADpB;;AC3BA,IAAMoM,mBAAmB,SAAnBA,gBAAmB,CAAC5J,OAAD,EAAUvD,OAAV;SAAsBuD,QAC5C6J,MAD4C,CACrC;WAAQtK,KAAKuK,IAAL,KAAc,QAAtB;GADqC,EAE5CxK,GAF4C,CAExC;WAAQ7C,QAAQsN,IAAR,CAAa;aAAUvK,OAAOzB,IAAP,KAAgBwB,KAAK4B,UAA/B;KAAb,CAAR;GAFwC,CAAtB;CAAzB;;AAIA,IAAa6I,kBAAb;;;+BACczN,KAAZ,EAAmB;;;yIACXA,KADW;;UAGZ0B,KAAL,GAAa;eACF,IADE;oBAEG;KAFhB;;UAKKgM,MAAL,GAAc;UAAGjK,OAAH,QAAGA,OAAH;UAAYkK,YAAZ,QAAYA,YAAZ;aAA+B,MAAK3L,QAAL,CAAc,EAAEyB,gBAAF,EAAWkK,0BAAX,EAAd,CAA/B;KAAd;;;;;;6BAEO;mBAIH,KAAK3N,KAJF;UAEeoC,SAFf,UAELC,kBAFK;UAGYuL,MAHZ,UAGLC,eAHK;mBAQH,KAAKnM,KARF;UAML+B,OANK,UAMLA,OANK;UAOLkK,YAPK,UAOLA,YAPK;;;aAWL;cAAA;;gBACO;;4BAEJ,MAAD,IAAQ,MAAK,iBAAb,EAA+B,WAA/B,GAHF;;kBAIE;YAAU,MAAK,MAAf;;4BACE;;wBACY,KAAKD;;gCAEd,mBAAD;WAJJ;qBAOI;6BAAA;;;kBACMxN,OAAH,SAAGA,OAAH;qBACC;yBAAA;;gCACgByN;;iCAEIlK,OAAjB,EAA0BvD,OAA1B,EACE6C,GADF,CACM;yBACH,oBAAC,MAAD;yBACOE,OAAOzB,IADd;4BAEUyB;oBAHP;iBADN;eAJJ;;;;OAbX;;;;EArBkCxC,MAAMC,aAA5C;;AAwDA+M,mBAAiB9M,SAAjB,GAA6B;sBACPC,UAAUG,IAAV,CAAeD,UADR;mBAEVF,UAAUG,IAAV,CAAeD;CAFlC;;AClDA,IAAMS,uBAAqB,CACzB,EAAEC,MAAM,OAAR,EADyB,CAA3B;;AAIA,IAAMsM,0BAA0B,SAA1BA,uBAA0B;MAAGC,eAAH,QAAGA,eAAH;SAC9BC,8BAA8BD,eAA9B,CAD8B;CAAhC;;AAGA,IAAaE,qBAAb;;;iCACcjO,KAAZ,EAAmB;;;6IACXA,KADW;;UAGZ0B,KAAL,GAAa;aACJ1B,MAAMkO,YADF;yBAEQ,CAAC,CAFT;yBAGQ,CAAC;KAHtB;;UAMKC,MAAL,GAAc,MAAKC,UAAL,CAAgBxM,IAAhB,OAAd;UACKyM,OAAL,GAAe,MAAKC,WAAL,CAAiB1M,IAAjB,OAAf;UACK2M,MAAL,GAAc,MAAKC,UAAL,CAAgB5M,IAAhB,OAAd;;;;;;+BAES;yBAGL,KAAK5B,KAHA,CAEPyO,KAFO;UAEPA,KAFO,gCAEC,KAAK/M,KAAL,CAAW+M,KAFZ;;0BAKJ,KAAK/M,KADV;;;;;;oCAKc;sBAC0C,KAAKmC,QAAL,EAD1C;UACN4K,KADM,aACNA,KADM;UACCC,iBADD,aACCA,iBADD;UACoBC,iBADpB,aACoBA,iBADpB;;aAEPC,WAAmBH,KAAnB,EAA0BC,iBAA1B,EAA6CC,iBAA7C,CAAP;;;;0CAEoB;;;aACb,KAAKE,aAAL,GACJvB,MADI,CACG;eAAc,CAAC,CAAC,OAAKwB,oBAAL,CAA0BlK,UAA1B,CAAhB;OADH,CAAP;;;;0CAGoB;;;WACfmK,cAAL,GAAuB,KAAKA,cAAL,IAAuB,KAAKA,cAAL,CAAoBlE,MAA5C,GAClB,KAAKkE,cADa,GAElB,KAAKC,mBAAL,GACCjM,GADD,CACK;eAAc,OAAK+L,oBAAL,CAA0BlK,UAA1B,GAAd;OADL,CAFJ;;;;0CAKoB;WACfmK,cAAL,GAAsB,EAAtB;;;;8CAEwBE,WAxC5B,EAwCyCC,IAxCzC,EAwC+C;UACvCD,YAAY1B,IAAZ,KAAqB4B,eAAzB,EAA0C;aACnCL,oBAAL,CAA0BG,YAAYhM,MAAZ,CAAmBzB,IAA7C,IAAqD0N,IAArD;;;;;sCAGyC;UAAhCzL,OAAgC,SAAhCA,OAAgC;UAAP2L,CAAO,SAAvBzB,YAAuB,CAAPyB,CAAO;;UACrCC,mBAAmB5L,QAAQ,CAAR,EAAWmB,UAApC;UACM0K,mBAAmB,KAAKN,mBAAL,EAAzB;UACMO,4BAA4BD,iBAAiBE,OAAjB,CAAyBH,gBAAzB,CAAlC;;UAEIE,8BAA8B,CAAC,CAAnC,EAAsC;;WAEjCE,mBAAL;UACQV,cARmC,GAQhB,IARgB,CAQnCA,cARmC;;;UAUrCW,oBAAoBX,eACvBzB,MADuB,CAChB;YAAGqC,IAAH,SAAGA,IAAH;YAASC,KAAT,SAASA,KAAT;eAAqBD,QAAQP,CAAR,IAAaA,KAAKQ,KAAvC;OADgB,CAA1B;;UAGIF,kBAAkB7E,MAAlB,GAA2B,CAA/B,EAAkC;;UAE5BgF,sBAAsBC,0BAC1Bf,cAD0B,EAE1BQ,yBAF0B,EAG1BH,CAH0B,CAA5B;;UAMIS,wBAAwB,CAAC,CAA7B,EAAgC;;uBAK5B,KAAKhM,QAAL,EA1BuC;UAwBtBkM,qBAxBsB,cAwBzCrB,iBAxByC;UAyBtBsB,qBAzBsB,cAyBzCrB,iBAzByC;;UA2BrCsB,gBAAa,KAAKpB,aAAL,EAAnB;UACMF,oBAAoBsB,cAAWT,OAAX,CAAmBF,iBAAiBO,mBAAjB,CAAnB,CAA1B;;UAEIlB,sBAAsBqB,qBAA1B,EAAiD;;UAE3CtB,oBAAoBqB,0BAA0B,CAAC,CAA3B,GACtBE,cAAWT,OAAX,CAAmBH,gBAAnB,CADsB,GAEtBU,qBAFJ;;WAIK/N,QAAL,CAAc;4CAAA;;OAAd;;;;kCAKY;WACPA,QAAL,CAAc;2BACO,CAAC,CADR;2BAEO,CAAC;OAFtB;;WAKKkO,mBAAL;;;;iCAEW;uBAC6C,KAAKrM,QAAL,EAD7C;UACH6K,iBADG,cACHA,iBADG;UACgBC,iBADhB,cACgBA,iBADhB;UACmCF,KADnC,cACmCA,KADnC;;UAEH0B,aAFG,GAEe,KAAKnQ,KAFpB,CAEHmQ,aAFG;;UAGLC,YAAYC,kBAAkB5B,KAAlB,EAAyB;0BACvBA,MAAMC,iBAAN,CADuB;0BAEvBD,MAAME,iBAAN;OAFF,CAAlB;;WAKK3M,QAAL,CAAc;eACLoO,SADK;2BAEO,CAAC,CAFR;2BAGO,CAAC;OAHtB;;UAMID,aAAJ,EAAmB;sBACHC,SAAd;;;WAGGF,mBAAL;;;;6BAEO;;;mBAKH,KAAKlQ,KALF;UAEoBoC,SAFpB,UAELkO,uBAFK;UAGSC,GAHT,UAGLC,YAHK;UAIUC,IAJV,UAILC,aAJK;;;UAODC,kBAAkB,SAAlBA,eAAkB;YAAGC,YAAH,SAAGA,YAAH;eACtBC,eAAeD,YAAf,EAA6B,OAAK/B,aAAL,EAA7B,CADsB;OAAxB;;WAGKC,oBAAL,GAA4B,EAA5B;;aAGE;cAAA;;gBACO,uBADP;wBAEgBvN;;4BAEb,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAUoP,eAAtC,GAJF;4BAKG,MAAD,IAAQ,MAAK,iBAAb,EAA+B,UAAU7C,uBAAzC,GALF;;kBAME;YAAU,MAAK,OAAf;;mBAEI;uBAAA;2BACMgD,MADN;wBAEU,OAAK3C,MAFf;yBAGW,OAAKE,OAHhB;wBAIU,OAAKE;;kCAEZ,mBAAD;aAPH;;SAPL;;kBAkBE;;kBACO,UADP;uBAEa;kBAAGwC,QAAH,SAAGA,QAAH;qBAAkBA,SAASxD,IAAT,KAAkByD,qBAApC;;;;mBAGT,oBAAC,GAAD,EAASF,MAAT,CADD;;SAtBL;;kBA0BE;;kBACO,WADP;uBAEa;kBAAGC,QAAH,SAAGA,QAAH;qBAAkBA,SAASxD,IAAT,KAAkByD,qBAApC;;;;mBAGT,oBAAC,IAAD,eACMF,MADN;iCAEqB;uBACjB,OAAKG,yBAAL,CAA+BH,OAAO7B,WAAtC,EAAmDiC,EAAnD,CADiB;;eAHtB;;;OA/BP;;;;EA9HuCzQ,MAAMC,aAAjD;;AA0KAuN,sBAAsBtN,SAAtB,GAAkC;SACzBC,UAAUS,OAAV,CAAkBT,UAAUuQ,MAA5B,CADyB;gBAElBvQ,UAAUS,OAAV,CAAkBT,UAAUuQ,MAA5B,CAFkB;iBAGjBvQ,UAAUG,IAHO;2BAIPH,UAAUG,IAAV,CAAeD,UAJR;gBAKlBF,UAAUG,IAAV,CAAeD,UALG;iBAMjBF,UAAUG,IAAV,CAAeD;CANhC;;AASAmN,sBAAsBjN,YAAtB,GAAqC;SAC5BC,SAD4B;gBAErB,EAFqB;iBAGpBA;CAHjB;;ACzLA,IAAMmQ,iBAAiB,SAAjBA,cAAiB;SACrB,oBAAC,mBAAD,IAAqB,MAAK,UAA1B,EAAqC,QAAQpR,KAA7C,GADqB;CAAvB;AAEA,IAAMqR,kBAAkB,SAAlBA,eAAkB;SACtB,oBAAC,mBAAD,IAAqB,MAAK,WAA1B,EAAsC,QAAQrR,KAA9C,GADsB;CAAxB;;AAGA,IAAM+N,kBAAkB,EAAxB;AACA,IAAMuD,wBAAwB,SAAxBA,qBAAwB;MAAGrR,IAAH,QAAGA,IAAH;MAASE,QAAT,QAASA,QAAT;SAC5BoR,sBAAsBtR,IAAtB,EAA4BE,QAA5B,CAD4B;CAA9B;;AAGA,IAAMoB,uBAAqB,CACzB,EAAEC,MAAM,kBAAR,EAA4BwH,UAAU,IAAtC,EADyB,CAA3B;;AAIA,IAAawI,KAAb;;;;;;;;;;6BACW;mBAWH,KAAKxR,KAXF;UAEYyR,MAFZ,UAELC,eAFK;UAGUjB,IAHV,UAGLC,aAHK;UAISH,GAJT,UAILC,YAJK;UAKemB,SALf,UAKLC,kBALK;UAMgBC,UANhB,UAMLC,mBANK;UAOcC,QAPd,UAOLC,iBAPK;UAQoBC,cARpB,UAQLC,uBARK;UASLzN,gBATK,UASLA,gBATK;UAUL/B,QAVK,UAULA,QAVK;;;UAaDC,aAAaC,qBAAqBF,QAArB,CAAnB;UACMyP,uBAAuB,SAAvBA,oBAAuB;YAAGjS,OAAH,SAAGA,OAAH;eAC3BkS,yBAAyBlS,OAAzB,EAAkCuE,gBAAlC,CAD2B;OAA7B;;aAIE;cAAA;;gBACO,OADP;wBAEgBlD;;4BAEb,MAAD,IAAQ,MAAK,iBAAb,EAA+B,OAAOwM,eAAtC,GAJF;4BAKG,MAAD,IAAQ,MAAK,eAAb,EAA6B,UAAUuD,qBAAvC,GALF;4BAMG,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAUa,oBAAtC,GANF;;kBAQE;YAAU,MAAK,MAAf;8BACG,mBAAD,IAAqB,MAAK,OAA1B;SATJ;;kBAWE;YAAU,MAAK,OAAf;;6BACE;;;kBACuBE,UAApB,SAAGtE,eAAH;kBAA+CuE,QAA/C,SAAgCC,aAAhC;kBAAuErS,OAAvE,SAAyD0Q,YAAzD;qBACC,oBAAC,MAAD;4BACcyB,UADd;0BAEYC,QAFZ;yBAGWpS,OAHX;8BAIgBkR,cAJhB;+BAKiBC;gBANlB;;;SAbP;;kBAwBE;YAAU,MAAK,WAAf;;mBAEI;+BAAA;;;oBACuBgB,UAApB,SAAGtE,eAAH;uBACEyE,sBAAsB1B,OAAOC,QAA7B,EAAuCsB,UAAvC,IACG,oBAAC,cAAD,EAAoBvB,MAApB,CADH,GAEG,oBAAC,QAAD,EAAcA,MAAd,CAHL;;aAFJ;;SAzBL;;kBAoCE;;kBACO,WADP;uBAEa;kBAAGC,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+BwD,gBAAgB1B,QAAhB,EAA0B9B,WAA1B,CAA/B;;;;mBAGT;+BAAA;;+BACyB;oBAAnB7O,YAAmB,SAAnBA,YAAmB;;oBACfwE,aAAakM,OAAO7B,WAAP,CAAmBhM,MAAnB,CAA0BzB,IAA7C;oBACMsG,QAAQ1H,aAAa0Q,OAAOC,QAAP,CAAgB2B,GAA7B,EAAkC9N,UAAlC,CAAd;uBAEE;qCAAA;;0BACO,gBADP;4BAEU;2BACDkM,OAAOC,QAAP,CAAgB2B,GADf;8BAEE5B,OAAO7B,WAAP,CAAmBhM,MAFrB;;;;;2BAON;0BAAA;mCACM6N,MADN;6BAEOA,OAAOC,QAAP,CAAgB2B,GAFvB;gCAGU5B,OAAO7B,WAAP,CAAmBhM,MAH7B;+BAIS6E;;;qBALV;;iBATL;;aALL;;SAxCL;;kBAsEE;;kBACO,WADP;uBAEa;kBAAGiJ,QAAH,SAAGA,QAAH;qBAAkB4B,iBAAiB5B,QAAjB,CAAlB;;;;mBAEA,oBAAC,UAAD,aAAkBpO,sBAAlB,IAAiCmO,MAAjC,EAAV;;SA1EL;;kBA4EE;;kBACO,UADP;uBAEa;kBAAGC,QAAH,SAAGA,QAAH;qBAAkB6B,eAAe7B,QAAf,CAAlB;;;;mBAGT,oBAAC,GAAD,eACMD,MADN;mBAEOA,OAAOC,QAAP,CAAgB2B;eAHxB;;SAhFL;;kBAuFE;;kBACO,UADP;uBAEa;kBAAG3B,QAAH,SAAGA,QAAH;qBAAkB4B,iBAAiB5B,QAAjB,CAAlB;;;;mBAEA,oBAAC,SAAD,EAAeD,MAAf,CAAV;;;OA5FP;;;;EAlBuBrQ,MAAMC,aAAjC;;AAqHA8Q,MAAM7Q,SAAN,GAAkB;mBACCC,UAAUG,IAAV,CAAeD,UADhB;iBAEDF,UAAUG,IAAV,CAAeD,UAFd;gBAGFF,UAAUG,IAAV,CAAeD,UAHb;uBAIKF,UAAUG,IAAV,CAAeD,UAJpB;sBAKIF,UAAUG,IAAV,CAAeD,UALnB;qBAMGF,UAAUG,IAAV,CAAeD,UANlB;2BAOSF,UAAUG,IAAV,CAAeD,UAPxB;oBAQEF,UAAUC,KARZ;YASND,UAAUsC;CATtB;;AAYAsO,MAAMxQ,YAAN,GAAqB;oBACDC,SADC;YAET;CAFZ;;ICpJa4R,cAAb;;;;;;;;;;6BACW;mBAUH,KAAK7S,KAVF;UAEL8S,YAFK,UAELA,YAFK;UAGLC,gBAHK,UAGLA,gBAHK;UAILC,mBAJK,UAILA,mBAJK;UAKLC,aALK,UAKLA,aALK;UAMgBC,UANhB,UAMLC,mBANK;UAOU1C,IAPV,UAOLC,aAPK;UAQSH,GART,UAQLC,YARK;UASL4C,oBATK,UASLA,oBATK;;;UAYDjB,uBAAuB,SAAvBA,oBAAuB;YAAGvB,YAAH,QAAGA,YAAH;eAC3ByC,0BAA0BzC,YAA1B,EAAwCwC,oBAAxC,CAD2B;OAA7B;;aAIE;cAAA;;gBACO,gBADP;wBAEgB,CACZ,EAAE5R,MAAM,OAAR,EADY,EAEZ,EAAEA,MAAM,gBAAR,EAFY,EAGZ,EAAEA,MAAM,qBAAR,EAA+BwH,UAAU,CAACiK,aAA1C,EAHY;;+BAOZ,oBAAC,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAUd,oBAAtC,GATJ;+BAY2Bc,aAAxB,IACC;kBAAA;;kBACO,WADP;uBAEa;kBAAGlC,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+BqE,qBAAqBvC,QAArB,EAA+B9B,WAA/B,CAA/B;;;;mBAGT;+BAAA;;;oBACMsE,kBAAH,SAAGA,kBAAH;oBAAuB5G,cAAvB,SAAuBA,WAAvB;oBAAoCE,eAApC,SAAoCA,YAApC;oBAAsDL,eAAtD,SAAsDA,eAAtD;uBACC,oBAAC,UAAD,eACMsE,MADN;4BAEY,CAACyC,kBAFb;+BAGe5G,cAHf;gCAIgBE,eAJhB;4BAKY;2BAAUL,gBAAgBgH,MAAhB,CAAV;;mBANb;;aAFJ;;SAjBP;+BAiCI;kBAAA;;kBACO,WADP;uBAEa;kBAAGzC,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+BwE,kBAAkB1C,QAAlB,EAA4B9B,WAA5B,CAA/B;;;;mBAGT;+BAAA;;;oBACM7C,SAAH,SAAGA,SAAH;oBAAkBD,kBAAlB,SAAkBA,eAAlB;uBACC,oBAAC,IAAD,eACM2E,MADN;uBAEOA,OAAOC,QAAP,CAAgB2B,GAFvB;4BAGYtG,UAAUoD,OAAV,CAAkBsB,OAAOC,QAAP,CAAgB2C,KAAlC,MAA6C,CAAC,CAH1D;4BAIY;2BAAMvH,mBAAgB,EAAEtG,QAAQ,CAACiL,OAAOC,QAAP,CAAgB2C,KAAjB,CAAV,EAAhB,CAAN;;mBALb;;aAFJ;;SArCP;SAmDIZ,gBAAgBC,gBAAjB,KACC;kBAAA;;kBACO,UADP;uBAEa;kBAAGhC,QAAH,SAAGA,QAAH;qBAAkB6B,eAAe7B,QAAf,CAAlB;;;;mBAGT;+BAAA;;;oBACM3E,SAAH,SAAGA,SAAH;oBAAkBD,kBAAlB,UAAkBA,eAAlB;uBACC,oBAAC,GAAD,eACM2E,MADN;wCAAA;4BAGYgC,gBAAgB1G,UAAUoD,OAAV,CAAkBsB,OAAOC,QAAP,CAAgB2C,KAAlC,MAA6C,CAAC,CAH1E;4BAIY;2BAAMvH,mBAAgB,EAAEtG,QAAQ,CAACiL,OAAOC,QAAP,CAAgB2C,KAAjB,CAAV,EAAhB,CAAN;;mBALb;;aAFJ;;;OAzDT;;;;EAhBgCjT,MAAMC,aAA1C;;AA4FAmS,eAAelS,SAAf,GAA2B;uBACJC,UAAUG,IAAV,CAAeD,UADX;iBAEVF,UAAUG,IAAV,CAAeD,UAFL;gBAGXF,UAAUG,IAAV,CAAeD,UAHJ;gBAIXF,UAAU+S,IAJC;oBAKP/S,UAAU+S,IALH;iBAMV/S,UAAU+S,IANA;uBAOJ/S,UAAU+S,IAPN;wBAQH/S,UAAUgH,MAAV,CAAiB9G;CARzC;;AAWA+R,eAAe7R,YAAf,GAA8B;gBACd,KADc;oBAEV,KAFU;iBAGb,KAHa;uBAIP;CAJvB;;IC9Ga4S,cAAb;;;0BACc5T,KAAZ,EAAmB;;;+HACXA,KADW;;UAGZ0B,KAAL,GAAa;sBACK1B,MAAM6T;KADxB;;QAIMzP,cAAcjB,wBAApB;;UAEK2Q,uBAAL,GAA+B1P,YAAYJ,iBAAZ,CAC5BpC,IAD4B,CACvBwC,WADuB,EACV,gBADU,EACQ0P,uBADR,CAA/B;;;;;;+BAGS;kCAGL,KAAK9T,KAHA,CAEP+T,cAFO;UAEPA,cAFO,yCAEU,KAAKrS,KAAL,CAAWqS,cAFrB;;0BAKJ,KAAKrS,KADV;;;;;;sCAKgBoC,SAtBpB,EAsB+BpC,KAtB/B,EAsBsC;UAC1BqS,cAD0B,GACPjQ,SADO,CAC1BiQ,cAD0B;UAE1BC,sBAF0B,GAEC,KAAKhU,KAFN,CAE1BgU,sBAF0B;;UAG9BA,0BAA0BD,mBAAmBrS,MAAMqS,cAAvD,EAAuE;+BAC9CA,cAAvB;;;;;6BAGK;sBACoB,KAAKlQ,QAAL,EADpB;UACCkQ,cADD,aACCA,cADD;;aAIL;cAAA;;gBACO;;4BAEJ,MAAD,IAAQ,MAAK,sBAAb,EAAoC,OAAOA,cAA3C,GAHF;4BAIG,MAAD,IAAQ,MAAK,yBAAb,EAAuC,QAAQ,KAAKD,uBAApD;OALJ;;;;EAhCgCrT,MAAMC,aAA1C;;AA2CAkT,eAAejT,SAAf,GAA2B;kBACTC,UAAUC,KADD;yBAEFD,UAAUC,KAFR;0BAGDD,UAAUG;CAHpC;;AAMA6S,eAAe5S,YAAf,GAA8B;kBACZC,SADY;yBAEL,EAFK;0BAGJA;CAH1B;;AC1CA,IAAMM,wBAAqB,CACzB,EAAEC,MAAM,OAAR,EADyB,CAA3B;;AAIA,IAAayS,cAAb;;;;;;;;;;6BACW;mBAQH,KAAKjU,KARF;UAELkU,SAFK,UAELA,SAFK;UAGaC,OAHb,UAGLC,gBAHK;UAIgBC,UAJhB,UAILC,mBAJK;UAKU7D,IALV,UAKLC,aALK;UAMSH,GANT,UAMLC,YANK;UAOL+D,iBAPK,UAOLA,iBAPK;;;UAUDpC,uBAAuB,SAAvBA,oBAAuB;YAAGvB,YAAH,QAAGA,YAAH;eAC3B4D,uBAAuB5D,YAAvB,EAAqC2D,iBAArC,CAD2B;OAA7B;UAEMjD,wBAAwB,SAAxBA,qBAAwB;YAAGiB,aAAH,SAAGA,aAAH;YAAkBkC,oBAAlB,SAAkBA,oBAAlB;eAC5BC,4BAA4BnC,aAA5B,EAA2CkC,oBAA3C,EAAiEP,SAAjE,CAD4B;OAA9B;;aAIE;cAAA;;gBACO,gBADP;wBAEgB3S;;4BAEb,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAU4Q,oBAAtC,GAJF;4BAKG,MAAD,IAAQ,MAAK,eAAb,EAA6B,UAAUb,qBAAvC,GALF;;kBAME;;kBACO,WADP;uBAEa;kBAAGP,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+B0F,wBAAwB5D,QAAxB,EAAkC9B,WAAlC,CAA/B;;;;mBAGT;+BAAA;;;oBACMwF,oBAAH,SAAGA,oBAAH;oBAA6BX,0BAA7B,SAA6BA,uBAA7B;uBACC,oBAAC,UAAD,eACMhD,MADN;uBAEOA,OAAOC,QAAP,CAAgB2B,GAFvB;4BAGYkC,oBAAoBH,oBAApB,EAA0C3D,OAAOC,QAAP,CAAgB2C,KAA1D,CAHZ;4BAIY;2BAAMI,2BAAwB,EAAEJ,OAAO5C,OAAOC,QAAP,CAAgB2C,KAAzB,EAAxB,CAAN;;mBALb;;aAFJ;;SAVL;;kBAuBE;;kBACO,WADP;uBAEa;kBAAG3C,QAAH,SAAGA,QAAH;qBAAkB8D,iBAAiB9D,QAAjB,CAAlB;;;;mBAGT;kBAAA;2BACMD,MADN;qBAEOA,OAAOC,QAAP,CAAgB2B;;kCAEpB,OAAD,IAAS,KAAK5B,OAAOC,QAAP,CAAgB2B,GAA9B;aALH;;SA3BL;;kBAoCE;;kBACO,UADP;uBAEa;kBAAG3B,QAAH,SAAGA,QAAH;qBAAkB8D,iBAAiB9D,QAAjB,CAAlB;;;;mBAGT,oBAAC,GAAD,eACMD,MADN;mBAEOA,OAAOC,QAAP,CAAgB2B;eAHxB;;;OAzCP;;;;EAhBgCjS,MAAMC,aAA1C;;AAqEAuT,eAAetT,SAAf,GAA2B;oBACPC,UAAUG,IADH;uBAEJH,UAAUG,IAAV,CAAeD,UAFX;iBAGVF,UAAUG,IAAV,CAAeD,UAHL;gBAIXF,UAAUG,IAAV,CAAeD,UAJJ;qBAKNF,UAAUgH,MAAV,CAAiB9G,UALX;aAMdF,UAAUgH;CANvB;;AASAqM,eAAejT,YAAf,GAA8B;oBACV;WAAM,IAAN;GADU;aAEjBC;CAFb;;AClFA,IAAMM,wBAAqB,CACzB,EAAEC,MAAM,eAAR,EADyB,EAEzB,EAAEA,MAAM,OAAR,EAFyB,EAGzB,EAAEA,MAAM,kBAAR,EAA4BwH,UAAU,IAAtC,EAHyB,CAA3B;;AAMA,IAAMsI,0BAAwB,SAAxBA,qBAAwB;MAAGiB,aAAH,QAAGA,aAAH;MAAkBxN,UAAlB,QAAkBA,UAAlB;SAC5B+P,sBAAsBvC,aAAtB,EAAqCxN,UAArC,CAD4B;CAA9B;;AAGA,IAAMgQ,8BAA8B,SAA9BA,2BAA8B,CAACC,sBAAD,EAAmD;MAA1BvQ,gBAA0B,uEAAP,EAAO;;MAC/E1B,MAAM0B,iBAAiBjB,MAAjB,CAAwB,UAAC8F,GAAD,EAAM2L,eAAN,EAA0B;QACxDA,gBAAgBrQ,UAApB,IAAkCqQ,gBAAgBC,eAAlD;WACO5L,GAAP;GAFU,EAGT,EAHS,CAAZ;;SAKO;WAAcvG,IAAI6B,UAAJ,KAAmBoQ,sBAAjC;GAAP;CANF;;AASA,IAAaG,aAAb;;;;;;;;;;6BACW;mBAQH,KAAKnV,KARF;UAEUoV,SAFV,UAEL1E,aAFK;UAGS2E,QAHT,UAGL7E,YAHK;UAIgB8E,eAJhB,UAILC,mBAJK;UAKLC,iBALK,UAKLA,iBALK;UAMLR,sBANK,UAMLA,sBANK;UAOLvQ,gBAPK,UAOLA,gBAPK;;;UAUD0N,uBAAuB,SAAvBA,oBAAuB;YAC3BjS,OAD2B,SAC3BA,OAD2B;YAClB0Q,YADkB,SAClBA,YADkB;YACJzH,QADI,SACJA,QADI;YACM6B,aADN,SACMA,aADN;eAG3ByK,yBACEvV,OADF,EAEE0Q,YAFF,EAGEzH,QAHF,EAIE6B,aAJF,EAKEwK,iBALF,EAMET,4BAA4BC,sBAA5B,EAAoDvQ,gBAApD,CANF,CAH2B;OAA7B;;aAaE;cAAA;;gBACO,eADP;wBAEgBlD;;4BAEb,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAU4Q,oBAAtC,GAJF;4BAKG,MAAD,IAAQ,MAAK,eAAb,EAA6B,UAAUb,uBAAvC,GALF;;kBAOE;;kBACO,WADP;uBAEa;kBAAGP,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+ByG,iBAAiB3E,QAAjB,EAA2B9B,WAA3B,CAA/B;;;;mBAGT;+BAAA;;;oBACM7E,cAAH,SAAGA,cAAH;oBAAuBL,mBAAvB,SAAuBA,mBAAvB;uBACC;qCAAA;;0BACO,gBADP;4BAEU;8BACE+G,OAAO7B,WAAP,CAAmBhM,MADrB;6BAEC6N,OAAOC,QAAP,CAAgB2B,GAAhB,CAAoB5K;;;;2BAI3B;+BAAA;mCACMgJ,MADN;6BAEOA,OAAOC,QAAP,CAAgB2B,GAFvB;gCAGU5B,OAAO7B,WAAP,CAAmBhM,MAH7B;kCAIYmH,eAAeoF,OAAf,CAAuBsB,OAAOC,QAAP,CAAgB2B,GAAhB,CAAoBiD,WAA3C,MAA4D,CAAC,CAJzE;kCAKY;iCACR5L,oBAAoB,EAAE6L,UAAU9E,OAAOC,QAAP,CAAgB2B,GAAhB,CAAoBiD,WAAhC,EAApB,CADQ;;;;qBANb;;iBARJ;;aAFJ;;SAXL;2BAuCI;kBAAA;;kBACO,WADP;uBAEa;kBAAG5E,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+B4G,uBAAuB9E,QAAvB,EAAiC9B,WAAjC,CAA/B;;;;mBAGT,oBAAC,eAAD,eACM6B,MADN;mBAEOA,OAAOC,QAAP,CAAgB2B,GAFvB;sBAGU5B,OAAO7B,WAAP,CAAmBhM;eAJ9B;;SA3CP;;kBAoDE;;kBACO,UADP;uBAEa;kBAAG8N,QAAH,SAAGA,QAAH;qBAAkB+E,gBAAgB/E,QAAhB,CAAlB;;;;mBAGT,oBAAC,QAAD,eACMD,MADN;mBAEOA,OAAOC,QAAP,CAAgB2B;eAHxB;;;OAzDP;;;;EAvB+BjS,MAAMC,aAAzC;;AA4FAyU,cAAcxU,SAAd,GAA0B;iBACTC,UAAUG,IAAV,CAAeD,UADN;gBAEVF,UAAUG,IAAV,CAAeD,UAFL;uBAGHF,UAAUG,IAHP;qBAILH,UAAUgH,MAAV,CAAiB9G,UAJZ;0BAKAF,UAAU+S,IALV;oBAMN/S,UAAUC;CAN9B;;AASAsU,cAAcnU,YAAd,GAA6B;uBACN,IADM;0BAEH,KAFG;oBAGTC;CAHpB;;ACtHA,IAAM6M,4BAA0B,SAA1BA,uBAA0B;MAAGC,eAAH,QAAGA,eAAH;SAAyBgI,qBAAqBhI,eAArB,CAAzB;CAAhC;;AAEA,IAAaiI,cAAb;;;;;;;;;;6BACW;mBAOH,KAAKhW,KAPF;UAELiW,mBAFK,UAELA,mBAFK;UAGLC,oBAHK,UAGLA,oBAHK;UAIUhD,UAJV,UAILxC,aAJK;UAKSyF,SALT,UAKL3F,YALK;UAML9N,QANK,UAMLA,QANK;;UAQDC,aAAaC,qBAAqBF,QAArB,CAAnB;;aAGE;cAAA;;gBACO,gBADP;wBAEgB,CACZ,EAAElB,MAAM,OAAR,EADY,EAEZ,EAAEA,MAAM,cAAR,EAAwBwH,UAAU,CAACiN,mBAAnC,EAFY,EAGZ,EAAEzU,MAAM,eAAR,EAAyBwH,UAAU,CAACkN,oBAApC,EAHY,EAIZ,EAAE1U,MAAM,kBAAR,EAA4BwH,UAAU,IAAtC,EAJY,EAKZ,EAAExH,MAAM,qBAAR,EAA+BwH,UAAU,IAAzC,EALY;;4BAQb,MAAD,IAAQ,MAAK,iBAAb,EAA+B,UAAU8E,yBAAzC,GAVF;;kBAYE;;kBACO,WADP;uBAEa;kBAAGiD,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+BmH,mBAAmBrF,QAAnB,EAA6B9B,WAA7B,CAA/B;;;;mBAGT;+BAAA;;sCAMQ;oBAJJ7F,OAII,SAJJA,OAII;oBAJKwH,YAIL,SAJKA,YAIL;oBAJmByF,eAInB,SAJmBA,eAInB;oBAJoCC,0BAIpC,SAJoCA,0BAIpC;oBAFJnM,sBAEI,SAFJA,mBAEI;oBAFiBL,uBAEjB,SAFiBA,oBAEjB;oBADJyM,yBACI,SADJA,sBACI;oBADoBC,wBACpB,SADoBA,qBACpB;oBAD2CC,8BAC3C,SAD2CA,2BAC3C;oBACU7R,UADV,GACyBkM,OAAO7B,WAAP,CAAmBhM,MAD5C,CACIzB,IADJ;;oBAEEkV,uBAAuB9F,aAC1BtD,MAD0B,CACnB;sBAAGC,IAAH,SAAGA,IAAH;yBAAcA,SAAS4B,eAAvB;iBADmB,EACqBtE,MADrB,GAC8B,CAD3D;;uBAIE,oBAAC,UAAD,eACMiG,MADN;0BAEUA,OAAO7B,WAAP,CAAmBhM,MAF7B;8BAGcN,UAHd;uCAIuBsT,uBAAuB7M,YAAYnI,SAJ1D;wCAKwBiV,wBAAwBQ,oBALhD;mCAMmBL,mBAAmBK,oBANtC;mCAOmBJ,0BAPnB;oCAQoBL,uBAAuB7M,YAAYnI,SAAnC,GACd0V,0BAA0BvN,OAA1B,EAAmCxE,UAAnC,CADc,GACmC3D,SATvD;0BAUU;wBAAG2V,SAAH,SAAGA,SAAH;wBAAcvM,SAAd,SAAcA,SAAd;2BACNF,uBAAoB,EAAEvF,sBAAF,EAAcgS,oBAAd,EAAyBvM,oBAAzB,EAApB,CADM;mBAVV;2BAYW;2BAAMP,wBAAqB,EAAElF,sBAAF,EAArB,CAAN;mBAZX;iCAaiB;wBAAGiS,KAAH,SAAGA,KAAH;2BAAeN,0BAAuB,EAAE3R,sBAAF,EAAciS,YAAd,EAAvB,CAAf;mBAbjB;gCAcgB;wBAAGA,KAAH,SAAGA,KAAH;2BAAeL,yBAAsB,EAAE5R,sBAAF,EAAciS,YAAd,EAAtB,CAAf;mBAdhB;sCAesB;2BAAMJ,gCAAN;;mBAhBxB;;aAZL;;SAhBL;;kBAmDE;;kBACO,UADP;uBAEa;kBAAG1F,QAAH,SAAGA,QAAH;qBAAkB+F,kBAAkB/F,QAAlB,CAAlB;;;;mBAEA,oBAAC,SAAD,EAAeD,MAAf,CAAV;;;OAxDP;;;;EAXgCrQ,MAAMC,aAA1C;;AA0EAsV,eAAerV,SAAf,GAA2B;uBACJC,UAAU+S,IADN;wBAEH/S,UAAU+S,IAFP;iBAGV/S,UAAUG,IAAV,CAAeD,UAHL;gBAIXF,UAAUG,IAAV,CAAeD,UAJJ;YAKfF,UAAUsC;CALtB;;AAQA8S,eAAehV,YAAf,GAA8B;uBACP,KADO;wBAEN,KAFM;YAGlB;CAHZ;;ACrFA,IAAMO,wBAAqB,CACzB,EAAEC,MAAM,gBAAR,EADyB,EAEzB,EAAEA,MAAM,OAAR,EAFyB,EAGzB,EAAEA,MAAM,kBAAR,EAA4BwH,UAAU,IAAtC,EAHyB,CAA3B;;AAMA,IAAa+N,cAAb;;;;;;;;;;6BACW;mBAMH,KAAK/W,KANF;UAELkU,SAFK,UAELA,SAFK;UAGU8C,UAHV,UAGLtG,aAHK;UAISuG,SAJT,UAILzG,YAJK;UAKL9N,QALK,UAKLA,QALK;;;UAQDC,aAAaC,qBAAqBF,QAArB,CAAnB;;UAEMoL,0BAA0B,SAA1BA,uBAA0B;YAAGC,eAAH,QAAGA,eAAH;eAC9BmJ,0BAA0BnJ,eAA1B,EAA2CmG,SAA3C,CAD8B;OAAhC;;aAIE;cAAA;;gBACO,gBADP;wBAEgB3S;;4BAEb,MAAD,IAAQ,MAAK,iBAAb,EAA+B,UAAUuM,uBAAzC,GAJF;;kBAKE;;kBACO,WADP;uBAEa;kBAAGiD,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+BkI,kBAAkBpG,QAAlB,EAA4B9B,WAA5B,CAA/B;;;;mBAGT;+BAAA;;sCAC4C;oBAAtC3K,OAAsC,SAAtCA,OAAsC;oBAAzBD,qBAAyB,SAAzBA,kBAAyB;oBAC1BO,UAD0B,GACXkM,OAAO7B,WAAP,CAAmBhM,MADR,CAChCzB,IADgC;;oBAElC8L,SAAS8J,sBAAsB9S,OAAtB,EAA+BM,UAA/B,CAAf;oBACMyS,WAAW,SAAXA,QAAW;yBAAUhT,sBAAmB,EAAEO,sBAAF,EAAc0S,cAAd,EAAnB,CAAV;iBAAjB;uBAEE;qCAAA;;0BACO,aADP;4BAEU;8BACExG,OAAO7B,WAAP,CAAmBhM,MADrB;6BAECqK,SAASA,OAAOxF,KAAhB,GAAwB,IAFzB;qCAGS;+BAAYuP,SAASE,WAAW,EAAEzP,OAAOyP,QAAT,EAAX,GAAiC,IAA1C,CAAZ;;;;;2BAIf;gCAAA;mCACMzG,MADN;oCAEcnO,UAFd;gCAGUmO,OAAO7B,WAAP,CAAmBhM,MAH7B;gCAIUqK,MAJV;kCAKY+J;;;qBANb;;iBATL;;aANL;;SATL;;kBAyCE;;kBACO,UADP;uBAEa;kBAAGtG,QAAH,SAAGA,QAAH;qBAAkByG,iBAAiBzG,QAAjB,CAAlB;;;;mBAEA,oBAAC,SAAD,EAAeD,MAAf,CAAV;;;OA9CP;;;;EAdgCrQ,MAAMC,aAA1C;;AAmEAqW,eAAepW,SAAf,GAA2B;aACdC,UAAU6W,GADI;YAEf7W,UAAUsC,MAFK;iBAGVtC,UAAUG,IAAV,CAAeD,UAHL;gBAIXF,UAAUG,IAAV,CAAeD;CAJ/B;;AAOAiW,eAAe/V,YAAf,GAA8B;aACjBC,SADiB;YAElB;CAFZ;;AChFA,IAAMM,wBAAqB,CACzB,EAAEC,MAAM,cAAR,EADyB,EAEzB,EAAEA,MAAM,OAAR,EAFyB,EAGzB,EAAEA,MAAM,kBAAR,EAA4BwH,UAAU,IAAtC,EAHyB,CAA3B;;AAMA,IAAa0O,YAAb;;;;;;;;;;6BACW;mBAKH,KAAK1X,KALF;UAEU2X,QAFV,UAELjH,aAFK;UAGSkH,OAHT,UAGLpH,YAHK;UAIL0D,SAJK,UAILA,SAJK;;;UAOD5C,wBAAwB,SAAxBA,qBAAwB;YAAGiB,aAAH,QAAGA,aAAH;YAAkB5L,aAAlB,QAAkBA,aAAlB;YAAiCL,SAAjC,QAAiCA,SAAjC;eAC5BuR,qBAAqBtF,aAArB,EAAoC5L,aAApC,EAAmDL,SAAnD,EAA8D4N,SAA9D,CAD4B;OAA9B;;aAIE;cAAA;;gBACO,cADP;wBAEgB3S;;4BAEb,MAAD,IAAQ,MAAK,eAAb,EAA6B,UAAU+P,qBAAvC,GAJF;;kBAKE;;kBACO,WADP;uBAEa;kBAAGP,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBAA+B6I,gBAAgB/G,QAAhB,EAA0B9B,WAA1B,CAA/B;;;;mBAGT;+BAAA;;sCACqF;oBAA/E7O,YAA+E,SAA/EA,YAA+E;oBAAjE6G,eAAiE,SAAjEA,eAAiE;oBAAhDjB,UAAgD,SAAhDA,UAAgD;oBAAhCE,iBAAgC,SAAhCA,cAAgC;oBAAhBT,YAAgB,SAAhBA,SAAgB;uCAC1DqL,OAAOC,QADmD;oBACzE2C,KADyE,oBACzEA,KADyE;oBAClEhB,GADkE,oBAClEA,GADkE;oBAEnE9N,UAFmE,GAEpDkM,OAAO7B,WAAP,CAAmBhM,MAFiC,CAEzEzB,IAFyE;;;oBAI3EuW,QAAQC,gBAAgBlH,OAAOC,QAAvB,CAAd;oBACMkH,aAAaF,QACfrF,GADe,gBAEVA,GAFU,EAEFwF,aAAalS,UAAb,EAAyB0N,KAAzB,CAFE,CAAnB;;oBAIM5L,QAAQ1H,aAAa6X,UAAb,EAAyBrT,UAAzB,CAAd;oBACMuT,gBAAgB,SAAhBA,aAAgB,CAACZ,QAAD,EAAc;sBAC5Ba,aAAa;gCAAA;4BAETnR,gBAAgBgR,UAAhB,EAA4BV,QAA5B,EAAsC3S,UAAtC;mBAFV;sBAIImT,KAAJ,EAAW;sCACMK,UAAf;mBADF,MAEO;iCACKA,UAAV;;iBARJ;uBAYE;qCAAA;;0BACO,aADP;4BAEU;8BACEtH,OAAO7B,WAAP,CAAmBhM,MADrB;8BAAA;kCAAA;;;;;2BAQN;8BAAA;mCACM6N,MADN;6BAEO4B,GAFP;gCAGU5B,OAAO7B,WAAP,CAAmBhM,MAH7B;+BAIS6E,KAJT;uCAKiBqQ;;;qBANlB;;iBAVL;;aAvBL;;SATL;;kBA2DE;;kBACO,UADP;uBAEa;kBAAGpH,QAAH,SAAGA,QAAH;qBAAmBsH,eAAetH,QAAf,KAA4BiH,gBAAgBjH,QAAhB,CAA/C;;;;mBAGT,oBAAC,OAAD,eACMD,MADN;mBAEOA,OAAOC,QAAP,CAAgB2B;eAHxB;;;OAhEP;;;;EAX8BjS,MAAMC,aAAxC;;AAuFAgX,aAAa/W,SAAb,GAAyB;aACZC,UAAU6W,GADE;iBAER7W,UAAUG,IAAV,CAAeD,UAFP;gBAGTF,UAAUG,IAAV,CAAeD;CAH/B;;AAMA4W,aAAa1W,YAAb,GAA4B;aACfC;CADb;;AClGA,IAAMM,wBAAqB,CACzB,EAAEC,MAAM,cAAR,EADyB,EAEzB,EAAEA,MAAM,OAAR,EAFyB,CAA3B;;AAKA,IAAa8W,eAAb;;;;;;;;;;6BACW;mBAUH,KAAKtY,KAVF;UAEUyQ,IAFV,UAELC,aAFK;UAGgBwC,UAHhB,UAGLC,mBAHK;UAIaoF,OAJb,UAILC,gBAJK;UAKLC,cALK,UAKLA,cALK;UAMLC,eANK,UAMLA,eANK;UAOLC,iBAPK,UAOLA,iBAPK;UAQLC,KARK,UAQLA,KARK;UASLlW,QATK,UASLA,QATK;;UAWDC,aAAaC,qBAAqBF,QAArB,CAAnB;UACMyP,uBAAuB,SAAvBA,oBAAuB;YAAGvB,YAAH,QAAGA,YAAH;eAAsBiI,wBAAwBjI,YAAxB,EAAsCgI,KAAtC,CAAtB;OAA7B;;aAGE;cAAA;;gBACO,iBADP;wBAEgBrX;;4BAEb,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAU4Q,oBAAtC,GAJF;;kBAME;;kBACO,WADP;uBAEa;kBAAGpB,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBACT6J,+BAA+B/H,QAA/B,EAAyC9B,WAAzC,CADS;;;;mBAIT;+BAAA;;wBACIzE,OAAD,EAAUC,OAAV;uBACC;4BAAA;wBAAA;oCAEI,oBAAC,OAAD;wBACK,KADL;0BAEQ9H,WAAW,YAAX,CAFR;+BAGa;6BAAM8H,QAAQxE,MAAR,EAAN;;;iBANlB;;aAFJ;;SAXL;;kBA2BE;;kBACO,WADP;uBAEa;kBAAG8K,QAAH,SAAGA,QAAH;kBAAa9B,WAAb,SAAaA,WAAb;qBACT8J,wBAAwBhI,QAAxB,EAAkC9B,WAAlC,CADS;;;;mBAIT;+BAAA;;wBACIzE,OAAD,EAAUC,OAAV,EAAsB;oBACfuO,SAASX,eAAevH,OAAOC,QAAtB,CAAf;oBACMgH,QAAQC,gBAAgBlH,OAAOC,QAAvB,CAAd;oBACMkI,YAAYD,UAAUjB,KAA5B;oBACMlS,SAAS,CAACiL,OAAOC,QAAP,CAAgB2C,KAAjB,CAAf;uBAEE;sBAAA;+BACM5C,MADN;yBAEOA,OAAOC,QAAP,CAAgB2B;;qCAED,CAACuG,SAApB,IACC,oBAAC,OAAD;wBACK,MADL;0BAEQtW,WAAW,aAAX,CAFR;+BAGa;6BAAM8H,QAAQlF,aAAR,CAAsB,EAAEM,cAAF,EAAtB,CAAN;;oBARjB;uCAWwB,CAACoT,SAAtB,IACC,oBAAC,OAAD;wBACK,QADL;0BAEQtW,WAAW,eAAX,CAFR;+BAGa,qBAAM;8BACP4D,UAAR,CAAmB,EAAEV,cAAF,EAAnB;8BACQY,iBAAR,CAA0B,EAAEZ,cAAF,EAA1B;;oBAjBR;+BAsBI,oBAAC,OAAD;wBACK,QADL;0BAEQlD,WAAW,eAAX,CAFR;+BAGa,qBAAM;0BACXoV,KAAJ,EAAW;gCACD3R,eAAR,CAAwB,EAAEP,cAAF,EAAxB;uBADF,MAEO;gCACGL,YAAR,CAAqB,EAAEK,cAAF,EAArB;gCACQD,iBAAR,CAA0B,EAAEC,cAAF,EAA1B;;;oBA9BV;+BAoCI,oBAAC,OAAD;wBACK,QADL;0BAEQlD,WAAW,eAAX,CAFR;+BAGa,qBAAM;0BACXoV,KAAJ,EAAW;gCACD5R,eAAR,CAAwB,EAAEN,cAAF,EAAxB;uBADF,MAEO;gCACGL,YAAR,CAAqB,EAAEK,cAAF,EAArB;gCACQH,iBAAR,CAA0B,EAAEG,cAAF,EAA1B;;;;iBA7CZ;;aAPL;;;OAjCP;;;;EAfiCpF,MAAMC,aAA3C;AAmHA4X,gBAAgB3X,SAAhB,GAA4B;iBACXC,UAAUG,IAAV,CAAeD,UADJ;uBAELF,UAAUG,IAAV,CAAeD,UAFV;oBAGRF,UAAUG,IAAV,CAAeD,UAHP;kBAIVF,UAAU+S,IAJA;mBAKT/S,UAAU+S,IALD;qBAMP/S,UAAU+S,IANH;SAOnB/S,UAAUgH,MAPS;YAQhBhH,UAAUsC;CARtB;AAUAoV,gBAAgBtX,YAAhB,GAA+B;kBACb,KADa;mBAEZ,KAFY;qBAGV,KAHU;SAItB,GAJsB;YAKnB;CALZ;;ACrIA,IAAMO,wBAAqB,CACzB,EAAEC,MAAM,OAAR,EADyB,CAA3B;;AAIA,IAAa0X,mBAAb;;;+BACclZ,KAAZ,EAAmB;;;yIACXA,KADW;;UAGZ0B,KAAL,GAAa;oBACG1B,MAAMmZ,mBADT;yBAEQ;KAFrB;;QAKM/U,cAAcjB,wBAApB;;UAEKoT,sBAAL,GACEnS,YAAYb,YAAZ,CAAyB3B,IAAzB,CAA8BwC,WAA9B,EAA2CmS,sBAA3C,CADF;UAEKC,qBAAL,GACEpS,YAAYb,YAAZ,CAAyB3B,IAAzB,CAA8BwC,WAA9B,EAA2CoS,qBAA3C,CADF;UAEKC,2BAAL,GACErS,YAAYb,YAAZ,CAAyB3B,IAAzB,CAA8BwC,WAA9B,EAA2CqS,2BAA3C,CADF;;;;;;+BAGS;gCAGL,KAAKzW,KAHA,CAEPoZ,YAFO;UAEPA,YAFO,uCAEQ,KAAK1X,KAAL,CAAW0X,YAFnB;;0BAKJ,KAAK1X,KADV;;;;;;sCAKgBoC,SA3BpB,EA2B+BpC,KA3B/B,EA2BsC;UAC1B0X,YAD0B,GACTtV,SADS,CAC1BsV,YAD0B;UAE1BC,oBAF0B,GAED,KAAKrZ,KAFJ,CAE1BqZ,oBAF0B;;UAG9BA,wBAAwBD,iBAAiB1X,MAAM0X,YAAnD,EAAiE;6BAC1CA,YAArB;;;;;6BAGK;sBACqC,KAAKvV,QAAL,EADrC;UACCuV,YADD,aACCA,YADD;UACeE,iBADf,aACeA,iBADf;;UAGDnH,uBAAuB,SAAvBA,oBAAuB;YAAGvB,YAAH,QAAGA,YAAH;eAC3B2I,uBAAuB3I,YAAvB,EAAqCwI,YAArC,EAAmDE,iBAAnD,CAD2B;OAA7B;;aAIE;cAAA;;gBACO,qBADP;wBAEgB/X;;4BAEb,MAAD,IAAQ,MAAK,4BAAb,EAA0C,WAA1C,GAJF;4BAKG,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAU4Q,oBAAtC,GALF;4BAMG,MAAD,IAAQ,MAAK,wBAAb,EAAsC,QAAQ,KAAKoE,sBAAnD,GANF;4BAOG,MAAD,IAAQ,MAAK,uBAAb,EAAqC,QAAQ,KAAKC,qBAAlD,GAPF;4BAQG,MAAD,IAAQ,MAAK,6BAAb,EAA2C,QAAQ,KAAKC,2BAAxD;OATJ;;;;EAxCqChW,MAAMC,aAA/C;;AAuDAwY,oBAAoBvY,SAApB,GAAgC;uBACTC,UAAUC,KADD;gBAEhBD,UAAUC,KAFM;wBAGRD,UAAUG;CAHlC;;AAMAmY,oBAAoBlY,YAApB,GAAmC;uBACZ,EADY;gBAEnBC,SAFmB;wBAGXA;CAHxB;;ACpEA,IAAMM,wBAAqB,CACzB,EAAEC,MAAM,aAAR,EADyB,CAA3B;;AAIA,IAAagY,WAAb;;;;;;;;;;6BACW;mBAKH,KAAKxZ,KALF;UAEeyZ,KAFf,UAELpX,kBAFK;UAGLqX,SAHK,UAGLA,SAHK;UAILhX,QAJK,UAILA,QAJK;;UAMDC,aAAaC,qBAAqBF,QAArB,CAAnB;;aAGE;cAAA;;gBACO,aADP;wBAEgBnB;;;kBAEd;YAAU,MAAK,QAAf;8BACG,mBAAD,OADF;;6BAEE;;;kBACMiG,WAAH,QAAGA,WAAH;kBAAgBC,QAAhB,QAAgBA,QAAhB;kBAA0BgB,UAA1B,QAA0BA,UAA1B;kBAA0CnB,iBAA1C,SAA0CA,cAA1C;kBAA0DC,cAA1D,SAA0DA,WAA1D;qBACC,oBAAC,KAAD;6BACeC,WADf;0BAEYC,QAFZ;4BAGcgB,UAHd;4BAIcE,UAAUF,UAAV,EAAsBhB,QAAtB,CAJd;2BAKaiS,SALb;4BAMc/W,UANd;qCAOuB2E,iBAPvB;kCAQoBC;gBATrB;;;;OART;;;;EAT6B9G,MAAMC,aAAvC;;AAoCA8Y,YAAY7Y,SAAZ,GAAwB;aACXC,UAAUS,OAAV,CAAkBT,UAAUgH,MAA5B,CADW;sBAEFhH,UAAUG,IAAV,CAAeD,UAFb;YAGZF,UAAUsC;CAHtB;;AAMAsW,YAAYxY,YAAZ,GAA2B;aACd,EADc;YAEf;CAFZ;;IC3Ca2Y,aAAb;;;;;;;;;;6BACW;mBASH,KAAK3Z,KATF;UAEYyR,MAFZ,UAELC,eAFK;UAGetP,SAHf,UAGLC,kBAHK;UAIUC,IAJV,UAILC,aAJK;UAKkBqX,YALlB,UAKLC,qBALK;UAML5D,mBANK,UAMLA,mBANK;UAOLC,oBAPK,UAOLA,oBAPK;UAQLxT,QARK,UAQLA,QARK;;;UAWDC,aAAaC,qBAAqBF,QAArB,CAAnB;;UAEMoX,0BAA0B,SAA1BA,uBAA0B;eAC9B,oBAAC,YAAD;sBACcnX;UAFgB;OAAhC;;UAMMoX,kBAAkB,SAAlBA,eAAkB,OAAc;YAAX/W,IAAW,QAAXA,IAAW;YACtB4B,UADsB,GACP5B,KAAKC,MADE,CAC5BzB,IAD4B;;eAGlC;2BAAA;;;gBACM4H,OAAH,SAAGA,OAAH;gBAAgBU,uBAAhB,SAAgBA,oBAAhB;gBAAsCK,sBAAtC,SAAsCA,mBAAtC;mBACC,oBAAC,IAAD;oBACQnH,IADR;mCAEuBiT,uBAAuB7M,YAAYnI,SAF1D;gCAGoBmI,YAAYnI,SAAZ,GACd0V,0BAA0BvN,OAA1B,EAAmCxE,UAAnC,CADc,GACmC3D,SAJvD;oCAKwBiV,oBALxB;uBAMW;uBAAMpM,wBAAqB,EAAElF,sBAAF,EAArB,CAAN;eANX;sBAOU;oBAAGgS,SAAH,SAAGA,SAAH;oBAAcvM,SAAd,SAAcA,SAAd;uBACNF,uBAAoB,EAAEvF,sBAAF,EAAcgS,oBAAd,EAAyBvM,oBAAzB,EAApB,CADM;;cARX;;SAFL;OAFF;;aAqBE;cAAA;;gBACO,eADP;wBAEgB,CACZ,EAAE7I,MAAM,eAAR,EADY,EAEZ,EAAEA,MAAM,SAAR,EAFY,EAGZ,EAAEA,MAAM,cAAR,EAAwBwH,UAAU,CAACiN,mBAAnC,EAHY;;;kBAMd;YAAU,MAAK,gBAAf;;6BACE;;;kBAEI/V,OADD,SACCA,OADD;kBACUiJ,QADV,SACUA,QADV;kBACoB6B,aADpB,SACoBA,aADpB;kBACmCqL,eADnC,SACmCA,eADnC;kBAGCvM,uBAHD,SAGCA,oBAHD;kBAGuBG,sBAHvB,SAGuBA,mBAHvB;kBAG4CC,4BAH5C,SAG4CA,yBAH5C;qBAKC,oBAAC,MAAD;uBACS8P,mBAAmB9Z,OAAnB,EAA4BiJ,QAA5B,EAAsC6B,aAAtC,CADT;iCAEmBqL,eAFnB;yBAGWvM,uBAHX;8BAIgBG,sBAJhB;oCAKsBC,4BALtB;+BAMiB6P,eANjB;uCAOyBD,uBAPzB;oCAQsB1X;gBAbvB;;WAFL;8BAmBG,mBAAD;;OA5BN;;;;EAxC+B3B,MAAMC,aAAzC;;AA2EAiZ,cAAchZ,SAAd,GAA0B;uBACHC,UAAU+S,IADP;wBAEF/S,UAAU+S,IAFR;mBAGP/S,UAAUG,IAAV,CAAeD,UAHR;sBAIJF,UAAUG,IAAV,CAAeD,UAJX;iBAKTF,UAAUG,IAAV,CAAeD,UALN;yBAMDF,UAAUG,IAAV,CAAeD,UANd;YAOdF,UAAUsC;CAPtB;;AAUAyW,cAAc3Y,YAAd,GAA6B;uBACN,KADM;wBAEL,KAFK;YAGjB;CAHZ;;AC5FA;AACA,IAAaiZ,gBAAb;;;;;;;;;;6BACW;mBAKH,KAAKja,KALF;UAEAka,WAFA,UAELC,GAFK;UAGeC,SAHf,UAGLC,kBAHK;UAIYC,MAJZ,UAILC,eAJK;;aAOL;cAAA;UAAQ,MAAK,kBAAb;oBAGM;kBAAA;;kBACO,gBADP;uBAEa;kBAAGtX,MAAH,QAAGA,MAAH;qBAAgBiX,YAAYM,QAAZ,CAAqBvX,OAAOzB,IAA5B,CAAhB;;;;mBAEA,oBAAC,SAAD,EAAesP,MAAf,CAAV;;SANN,GASG,IAVN;iBAcM;kBAAA;;kBACO,aADP;uBAEa;kBAAG7N,MAAH,SAAGA,MAAH;qBAAgBiX,YAAYM,QAAZ,CAAqBvX,OAAOzB,IAA5B,CAAhB;;;;mBAEA,oBAAC,MAAD,EAAYsP,MAAZ,CAAV;;SANN,GASG;OAtBR;;;;EAPkCrQ,MAAMC,aAA5C;;AAoCAuZ,iBAAiBtZ,SAAjB,GAA6B;OACtBC,UAAUS,OAAV,CAAkBT,UAAUuQ,MAA5B,EAAoCrQ,UADd;sBAEPF,UAAUG,IAFH;mBAGVH,UAAUG;CAH7B;;AAMAkZ,iBAAiBjZ,YAAjB,GAAgC;sBACVC,SADU;mBAEbA;CAFnB;;AClCA,IAAMM,wBAAqB,CACzB,EAAEC,MAAM,OAAR,EADyB,CAA3B;;AAIA,IAAMiZ,8BAA8B,SAA9BA,2BAA8B;MAAG7J,YAAH,QAAGA,YAAH;MAAiB/N,iBAAjB,QAAiBA,iBAAjB;SAClC6X,oBAAoB9J,YAApB,EAAkC/N,iBAAlC,CADkC;CAApC;;AAGA,IAAa8X,qBAAb;;;iCACc3a,KAAZ,EAAmB;;;6IACXA,KADW;;UAGZ0B,KAAL,GAAa;yBACQ1B,MAAM4a;KAD3B;QAGMxW,cAAcjB,wBAApB;;UAEKL,sBAAL,GAA8BsB,YAAYJ,iBAAZ,CAA8BpC,IAA9B,CAAmCwC,WAAnC,EAAgD,mBAAhD,EAAqEyW,YAArE,CAA9B;;;;;;+BAES;kCAGL,KAAK7a,KAHA,CAEP6C,iBAFO;UAEPA,iBAFO,yCAEa,KAAKnB,KAAL,CAAWmB,iBAFxB;;0BAKJ,KAAKnB,KADV;;;;;;sCAKgBoC,SApBpB,EAoB+BpC,KApB/B,EAoBsC;UAC1BmB,iBAD0B,GACJiB,SADI,CAC1BjB,iBAD0B;UAE1BiY,yBAF0B,GAEI,KAAK9a,KAFT,CAE1B8a,yBAF0B;;UAG9BA,6BAA6BjY,sBAAsBnB,MAAMmB,iBAA7D,EAAgF;kCACpDA,iBAA1B;;;;;6BAGK;mBAIH,KAAK7C,KAJF;UAEkB4Z,YAFlB,UAELC,qBAFK;UAGLnX,QAHK,UAGLA,QAHK;;UAKDC,aAAaC,qBAAqBF,QAArB,CAAnB;;sBAC8B,KAAKmB,QAAL,EANvB;UAMChB,iBAND,aAMCA,iBAND;;aASL;cAAA;;gBACO,uBADP;wBAEgBtB;;4BAEb,MAAD,IAAQ,MAAK,mBAAb,EAAiC,OAAOsB,iBAAxC,GAJF;4BAKG,MAAD,IAAQ,MAAK,cAAb,EAA4B,UAAU4X,2BAAtC,GALF;4BAMG,MAAD;gBACO,wBADP;kBAEU,KAAK3X;UARjB;;kBAWE;YAAU,MAAK,OAAf;;mBAEI;+BAAA;;;oBACM8N,YAAH,SAAGA,YAAH;uBACEmK,sBAAsBnK,YAAtB,IACC,oBAAC,mBAAD,OADD,GAEC,oBAAC,YAAD;8BACYjO;mBACRmO,MAFJ,EAHH;;aAFJ;;;OAbP;;;;EAnCuCrQ,MAAMC,aAAjD;;AAkEAia,sBAAsBha,SAAtB,GAAkC;qBACbC,UAAUS,OAAV,CAAkBT,UAAUuQ,MAA5B,CADa;4BAENvQ,UAAUS,OAAV,CAAkBT,UAAUuQ,MAA5B,CAFM;yBAGTvQ,UAAUG,IAAV,CAAeD,UAHN;6BAILF,UAAUG,IAJL;YAKtBH,UAAUsC;CALtB;;AAQAyX,sBAAsB3Z,YAAtB,GAAqC;qBAChBC,SADgB;4BAET,EAFS;6BAGRA,SAHQ;YAIzB;CAJZ;;AC9FA;;AAEA,IASM+Z,kBAAkB,MAAxB;;AAEA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,WAAD,EAAcC,WAAd,EAA8B;MAClDD,YAAYrQ,MAAZ,KAAuBsQ,YAAYtQ,MAAvC,EAA+C,OAAO,IAAP;MACzCuQ,WAAWF,YAAYnY,GAAZ,CAAgB;WAAUE,OAAOoY,GAAjB;GAAhB,CAAjB;SACOF,YAAY3N,IAAZ,CAAiB;WACtB4N,SAAS5L,OAAT,CAAiBvM,OAAOoY,GAAxB,MAAiC,CAAC,CADZ;GAAjB,MACoCpa,SAD3C;CAHF;;AAOA,IAAaqa,WAAb;;;uBACctb,KAAZ,EAAmB;;;yHACXA,KADW;;UAGZ0B,KAAL,GAAa;sBACK,IAAI6Z,GAAJ;KADlB;;UAIKC,UAAL,GAAkB,IAAID,GAAJ,EAAlB;UACKE,SAAL,GAAiB,IAAjB;;UAEKC,MAAL,GAAc,UAACC,GAAD,EAAS;UAAMA,GAAJ,EAAS,MAAKF,SAAL,GAAiBE,GAAjB;KAAlC;;;;;;8CAEwBC,SAb5B,EAauC;UAClBT,WADkB,GACFS,SADE,CAC3B1b,OAD2B;UAE3BA,OAF2B,GAEf,KAAKF,KAFU,CAE3BE,OAF2B;;;UAI/B+a,kBAAkB/a,OAAlB,EAA2Bib,WAA3B,CAAJ,EAA6C;;;UAGvCU,aAAaC,YAAY,IAAZ,EAAkBC,WAArC;WACKP,UAAL,GAAkBQ,cAAc9b,OAAd,EAAuBib,WAAvB,EAAoCU,UAApC,EAAgD,KAAKL,UAArD,CAAlB;WACKS,qBAAL;;;;iCAEW;UACH/b,OADG,GACS,KAAKF,KADd,CACHE,OADG;UAEHgc,cAFG,GAEgB,KAAKxa,KAFrB,CAEHwa,cAFG;;;UAIPC,SAASjc,OAAb;;UAEMkc,eAAelc,QAAQoN,MAAR,CAAe;eAAUrK,OAAO2V,KAAP,KAAiB3X,SAA3B;OAAf,EAAqD4J,MAArD,KAAgE,CAArF;UACIuR,YAAJ,EAAkB;iBACPD,OAAO9S,KAAP,EAAT;eACOgT,IAAP,CAAY,EAAEhB,KAAKL,eAAP,EAAwBzN,MAAMyN,eAA9B,EAAZ;;;UAGEkB,eAAeI,IAAnB,EAAyB;iBACdH,OACNpZ,GADM,CACF;iBAAWmZ,eAAeK,GAAf,CAAmBtZ,OAAOoY,GAA1B,iBACPpY,MADO,IACCiZ,gBAAgBA,eAAeM,GAAf,CAAmBvZ,OAAOoY,GAA1B,CADjB,MAEZpY,MAFC;SADE,CAAT;;;aAMKkZ,MAAP;;;;4CAEsB;WACjBX,UAAL,GAAkBiB,uBAAuB,KAAKjB,UAA5B,CAAlB;;UAEI,CAAC,KAAKA,UAAL,CAAgBc,IAArB,EAA2B;YACrB,KAAK5a,KAAL,CAAWwa,cAAX,CAA0BI,IAA9B,EAAoC;eAC7Bta,QAAL,CAAc,EAAEka,gBAAgB,IAAIX,GAAJ,EAAlB,EAAd;;;;;UAKEW,iBAAiBQ,eAAe,KAAKlB,UAApB,CAAvB;WACKxZ,QAAL,CAAc,EAAEka,8BAAF,EAAd;;4BAEsB,KAAKD,qBAAL,CAA2Bra,IAA3B,CAAgC,IAAhC,CAAtB;;;;6BAEO;mBAKH,KAAK5B,KALF;UAEYyR,MAFZ,UAELC,eAFK;UAGLiL,cAHK,UAGLA,cAHK;UAIFC,SAJE;;UAMD1c,UAAU,KAAK2c,UAAL,EAAhB;UACMC,WAAW5c,QACd6C,GADc,CACV;eAAUE,OAAO2V,KAAP,KAAiB3V,OAAOsK,IAAP,KAAgByN,eAAhB,GAAkC,CAAlC,GAAsC2B,cAAvD,CAAV;OADU,EAEdnZ,MAFc,CAEP,UAAC8F,GAAD,EAAMsP,KAAN;eAAgBtP,MAAMsP,KAAtB;OAFO,EAEsB,CAFtB,CAAjB;;aAKE,oBAAC,MAAD,eACMgE,SADN;iBAEW1c,OAFX;kBAGY4c;SAJd;;;;EAvE6Brc,MAAMC,aAAvC;;AAiFA4a,YAAY3a,SAAZ,GAAwB;WACbC,UAAUC,KAAV,CAAgBC,UADH;kBAENF,UAAUgH,MAAV,CAAiB9G,UAFX;mBAGLF,UAAUG,IAAV,CAAeD;CAHlC;;IClGaic,WAAb;;;;;;;;;;6BACW;UACC7c,OADD,GACa,KAAKF,KADlB,CACCE,OADD;;;aAIL;;;gBACW6C,GAAR,CAAY;iBACX;iBACOE,OAAOoY,GADd;mBAESpY,OAAO2V,KAAP,KAAiB3X,SAAjB,GACH,EAAE2X,OAAU3V,OAAO2V,KAAjB,OAAF,EADG,GAEH;YALK;SAAZ;OAFL;;;;EAJ6BnY,MAAMC,aAAvC;;AAmBAqc,YAAYpc,SAAZ,GAAwB;WACbC,UAAUC,KAAV,CAAgBC;CAD3B;;AClBA,IAAMkc,iBAAiB,SAAjBA,cAAiB;MAAG/Z,MAAH,QAAGA,MAAH;SAAgBA,OAAOiZ,cAAvB;CAAvB;;AAEA,IAAMe,cAAc,SAAdA,WAAc;MAAGvK,GAAH,SAAGA,GAAH;SAAcA,IAAIwK,MAAJ,KAAejc,SAAf,GAC7B,EAAEic,QAAWxK,IAAIwK,MAAf,OAAF,EAD6B,GAE9Bjc,SAFgB;CAApB;;AAIA,IAAakc,SAAb;;;;;;;;;;6BACW;mBAMH,KAAKnd,KANF;UAEL0S,GAFK,UAELA,GAFK;UAGLxS,OAHK,UAGLA,OAHK;UAISqQ,GAJT,UAILC,YAJK;UAKUC,IALV,UAKLC,aALK;;;aASL;WAAA;;oBACYgC,GADZ;iBAESuK,YAAY,EAAEvK,QAAF,EAAZ;;sCAGyBxS,OAA9B,EAAuCwS,IAAI0K,YAA3C,EACGra,GADH,CACO;iBACH,oBAAC,IAAD;iBACOE,OAAOoY,GADd;sBAEY3I,GAFZ;yBAGezP,MAHf;mBAIS+Z,eAAe,EAAE/Z,cAAF,EAAf,CAJT;qBAKWA,OAAOoa;YANf;SADP;OANN;;;;EAT2B5c,MAAMC,aAArC;;AA+BAyc,UAAUxc,SAAV,GAAsB;OACfC,UAAUsC,MAAV,CAAiBpC,UADF;WAEXF,UAAUC,KAAV,CAAgBC,UAFL;gBAGNF,UAAUG,IAAV,CAAeD,UAHT;iBAILF,UAAUG,IAAV,CAAeD;CAJhC;;ACzCA,IAAMwc,WAAW,CAAjB;;AAEA,IAAaC,YAAY,MAAlB;AACP,IAAMC,eAAe,SAArB;AACA,IAAMC,gBAAgB,UAAtB;;AAEA,IAAMC,eAAe,UAArB;AACA,IAAMC,aAAa,QAAnB;;AAEA,IAAaC,iBAAiB,SAAjBA,cAAiB,CAAC3d,IAAD,EAAO4d,WAAP,EAAoBC,cAApB,EAAoCC,YAApC,EAAqD;MAC3E5B,SAAS,EAAf;;MAEM6B,SAASH,cAAcC,cAA7B;MACIG,WAAW,CAAf;;;QAEQvL,MAAMzS,KAAKie,EAAL,CAAZ;QACMC,OAAOhC,OAAOA,OAAOtR,MAAP,GAAgB,CAAvB,CAAb;;QAEMqS,SAASa,aAAarL,GAAb,CAAf;QACM0L,eAAeH,WAAWf,MAAhC;QAEGW,eAAeI,QAAf,IAA2BA,WAAWD,MAAtC,IACIH,cAAcO,YADlB,IACkCA,gBAAgBJ,MADnD,IAECH,cAAcI,QAAd,IAA0BG,eAAeJ,MAH5C,EAIE;UACIG,QAAQA,KAAK5Q,IAAL,KAAcgQ,SAA1B,EAAqC;aAC9BlU,KAAL,CAAWrB,KAAKD,GAAL,CAAS,CAAT,EAAYmW,KAAIZ,QAAhB,CAAX,EAAsCY,EAAtC,EAAyCG,OAAzC,CAAiD,UAACC,WAAD,EAAiB;cAC1DC,kBAAkBR,aAAaO,WAAb,CAAxB;eACKpB,MAAL,IAAeqB,eAAf;iBACOlC,IAAP,CAAY,EAAE9O,MAAMkQ,aAAR,EAAuBP,QAAQqB,eAA/B,EAAgD7L,KAAK4L,WAArD,EAAZ;SAHF;;aAMKjC,IAAP,CAAY,EAAE9O,MAAMiQ,YAAR,EAAsBN,cAAtB,EAA8BxK,QAA9B,EAAZ;KAZF,MAaO,IAAIyL,QAAQA,KAAK5Q,IAAL,KAAcgQ,SAA1B,EAAqC;WACrCL,MAAL,IAAeA,MAAf;KADK,MAEA,IAAIgB,KAAI,CAAR,EAAW;WACX7U,KAAL,CAAW6U,EAAX,EAAcA,KAAIZ,QAAlB,EAA4Be,OAA5B,CAAoC,UAACC,WAAD,EAAiB;YAC7CC,kBAAkBR,aAAaO,WAAb,CAAxB;eACOjC,IAAP,CAAY,EAAE9O,MAAMkQ,aAAR,EAAuBP,QAAQqB,eAA/B,EAAgD7L,KAAK4L,WAArD,EAAZ;OAFF;YAIKhB,WAAW,CAAhB;UACIY,KAAIje,KAAK4K,MAAb,EAAqB;eACZwR,IAAP,CAAY,EAAE9O,MAAMgQ,SAAR,EAAmBlC,KAAKsC,UAAxB,EAAoCT,QAAQ,CAA5C,EAAZ;;KAPG,MASA;aACEb,IAAP,CAAY,EAAE9O,MAAMgQ,SAAR,EAAmBlC,KAAKqC,YAAxB,EAAsCR,cAAtC,EAAZ;;eAESkB,YAAX;KAtC+E;;;OAK5E,IAAIF,IAAI,CAAb,EAAgBA,IAAIje,KAAK4K,MAAzB,EAAiCqT,KAAK,CAAtC,EAAyC;UAAhCA,CAAgC;;;SAoClC/B,MAAP;CAzCK;;AA4CP,IAAMqC,iBAAiB,SAAjBA,cAAiB,CAACC,WAAD,EAAcC,KAAd;SAAwBD,YAC5CpV,KAD4C,CACtC,CADsC,EACnCqV,KADmC,EAE5Clb,MAF4C,CAErC,UAAC8F,GAAD,EAAMoJ,GAAN;WAAcpJ,MAAMoJ,IAAIwK,MAAxB;GAFqC,EAEL,CAFK,CAAxB;CAAvB;;AAIA,IAAayB,wBAAwB,SAAxBA,qBAAwB,CAACC,eAAD,EAAkBH,WAAlB,EAAkC;MAC/DI,uBAAuBJ,YAAYhV,SAAZ,CAAsB;WAAOiJ,IAAInF,IAAJ,KAAaiQ,YAApB;GAAtB,CAA7B;MACIqB,yBAAyB,CAAC,CAA9B,EAAiC,OAAO,CAAP;;MAE3BC,kBAAkBL,YAAYI,oBAAZ,EAAkCnM,GAA1D;MACMqM,YAAYH,gBAAgBnV,SAAhB,CAA0B;WAAOiJ,IAAIA,GAAJ,KAAYoM,eAAnB;GAA1B,CAAlB;MACIC,cAAc,CAAC,CAAnB,EAAsB,OAAO,CAAP;;MAEhBd,WAAWO,eAAeC,WAAf,EAA4BI,oBAA5B,CAAjB;MACMG,eAAeR,eAAeI,eAAf,EAAgCG,SAAhC,CAArB;SACOd,WAAWe,YAAlB;CAVK;;IC/CMC,kBAAb;;;8BACcjf,KAAZ,EAAmB;;;uIACXA,KADW;;UAGZ0B,KAAL,GAAa;uBACM;KADnB;;UAIKwd,OAAL,GAAe,IAAI3D,GAAJ,EAAf;UACK4D,UAAL,GAAkB,IAAI5D,GAAJ,EAAlB;UACKsC,WAAL,GAAmB,CAAnB;UACKuB,cAAL,GAAsB,MAAKA,cAAL,CAAoBxd,IAApB,OAAtB;UACKyd,cAAL,GAAsB,MAAKA,cAAL,CAAoBzd,IAApB,OAAtB;UACKmc,YAAL,GAAoB,MAAKA,YAAL,CAAkBnc,IAAlB,OAApB;;UAEKF,KAAL,CAAW4d,eAAX,GAA6B,MAAK1B,cAAL,EAA7B;;;;;;wCAEkB;WACb2B,eAAL;;;;8CAEwB3D,SApB5B,EAoBuC;UAC/B,KAAK5b,KAAL,CAAWqS,UAAX,KAA0BuJ,UAAUvJ,UAApC,IACF,KAAKrS,KAAL,CAAWC,IAAX,KAAoB2b,UAAU3b,IADhC,EACsC;YAChBuf,aADgB,GACE,IADF,CAC5BL,UAD4B;;aAE/BA,UAAL,GAAkB,4BAAIvD,UAAUvJ,UAAd,qBAA6BuJ,UAAU3b,IAAvC,GAA6CuD,MAA7C,CAChB,UAAC8F,GAAD,EAAMoJ,GAAN,EAAc;cACNwB,YAAYsL,cAAchD,GAAd,CAAkB9J,IAAI2I,GAAtB,CAAlB;cACInH,cAAcjT,SAAlB,EAA6B;gBACvBwe,GAAJ,CAAQ/M,IAAI2I,GAAZ,EAAiBnH,SAAjB;;iBAEK5K,GAAP;SANc,EAQhB,IAAIiS,GAAJ,EARgB,CAAlB;aAUKvZ,QAAL,CAAc;2BACK,KAAK4b,cAAL,CAAoBhC,SAApB,EAA+B,KAAKiC,WAApC;SADnB;;;;;yCAKiB;WACd0B,eAAL;;;;iCAEW7M,GA1Cf,EA0CoB;UACVgN,eAAe,KAAKP,UAAL,CAAgB3C,GAAhB,CAAoB9J,IAAI2I,GAAxB,CAArB;UACIqE,iBAAiBze,SAArB,EAAgC,OAAOye,YAAP;UAC5BhN,IAAIwK,MAAR,EAAgB,OAAOxK,IAAIwK,MAAX;aACT,KAAKld,KAAL,CAAW2f,kBAAlB;;;;wCAEgF;;;qFAApC,KAAK3f,KAA+B;UAAjEC,IAAiE,QAAjEA,IAAiE;UAA3DoS,UAA2D,QAA3DA,UAA2D;UAA/C6K,MAA+C,QAA/CA,MAA+C;;UAAxB0C,GAAwB,uEAAlB,KAAK/B,WAAa;;UAC1EgC,aAAaxN,WAAW7O,MAAX,CAAkB,UAAC8F,GAAD,EAAMoJ,GAAN;eAAcpJ,MAAM,OAAKyU,YAAL,CAAkBrL,GAAlB,CAApB;OAAlB,EAA8D,CAA9D,CAAnB;aACOkL,eAAe3d,IAAf,EAAqB2f,GAArB,EAA0B1C,SAAS2C,UAAnC,EAA+C,KAAK9B,YAApD,CAAP;;;;sCAEgB;;;UACV+B,yBAAyBC,MAAMC,IAAN,CAAW,KAAKd,OAAL,CAAae,OAAb,EAAX;;OAE5Bld,GAF4B,CAExB;;YAAE2P,GAAF;YAAOiJ,GAAP;;eAAgB,CAACjJ,GAAD,EAAMoJ,YAAYH,GAAZ,EAAiBuE,qBAAjB,GAAyChD,MAA/C,CAAhB;OAFwB,EAG5B5P,MAH4B,CAGrB;;YAAEoF,GAAF;YAAOwK,MAAP;;eAAmBA,WAAW,OAAKa,YAAL,CAAkBrL,GAAlB,CAA9B;OAHqB,CAA/B;;UAKIoN,uBAAuBjV,MAA3B,EAAmC;YACzBsU,UADyB,GACV,IADU,CACzBA,UADyB;;+BAG9Bd,OADH,CACW;;cAAE3L,GAAF;cAAOwK,MAAP;;iBAAmBiC,WAAWM,GAAX,CAAe/M,IAAI2I,GAAnB,EAAwB6B,MAAxB,CAAnB;SADX;;YAGyBiD,mBALQ,GAKgB,KAAKze,KALrB,CAKzB4d,eALyB;;YAM3BA,kBAAkB,KAAK1B,cAAL,EAAxB;;aAEK5b,QAAL,CAAc;;SAAd;;YAIMoe,eAAezB,sBAAsBwB,mBAAtB,EAA2Cb,eAA3C,CAArB;YACIc,iBAAiB,CAArB,EAAwB;;sBAEV,IAAZ,EAAkBC,SAAlB,IAA+BD,YAA/B;;;;;;mCAIS1N,GA7EjB,EA6EsBiJ,GA7EtB,EA6E2B;UACnBA,QAAQ,IAAZ,EAAkB;aACXuD,OAAL,CAAaoB,MAAb,CAAoB5N,GAApB;OADF,MAEO;aACAwM,OAAL,CAAaO,GAAb,CAAiB/M,GAAjB,EAAsBiJ,GAAtB;;;;;mCAGW4E,CApFjB,EAoFoB;UACVjf,OAAOif,EAAEC,MAAf;;;UAGIlf,KAAK+e,SAAL,GAAiB,CAAjB,IACF/e,KAAKmf,UAAL,GAAkB,CADhB,IAEFnf,KAAKmf,UAAL,GAAkBnf,KAAKof,WAAvB,GAAqCpf,KAAKya,WAFxC,IAGFza,KAAK+e,SAAL,GAAiB/e,KAAKqf,YAAtB,GAAqCrf,KAAKsf,YAH5C,EAG0D;;;;UAItD,KAAK/C,WAAL,KAAqBvc,KAAK+e,SAA9B,EAAyC;aAClCxC,WAAL,GAAmBvc,KAAK+e,SAAxB;aACKre,QAAL,CAAc;2BACK,KAAK4b,cAAL;SADnB;;;;;6BAKK;;;mBAUH,KAAK5d,KAVF;UAELqS,UAFK,UAELA,UAFK;UAEOnS,OAFP,UAEOA,OAFP;UAGL4c,QAHK,UAGLA,QAHK;UAGKI,MAHL,UAGKA,MAHL;UAIe9a,SAJf,UAILC,kBAJK;UAKewe,SALf,UAKLC,kBALK;UAMWtP,KANX,UAMLuP,cANK;UAOUC,IAPV,UAOLC,aAPK;UAQUC,IARV,UAQLC,aARK;UASL3Q,YATK,UASLA,YATK;UASSE,aATT,UASSA,aATT;UAYL4O,eAZK,GAaH,KAAK5d,KAbF,CAYL4d,eAZK;;;aAgBL;iBAAA;;iBACS,EAAEpC,QAAWA,MAAX,OAAF,EADT;oBAEY,KAAKkC;;SAEb,CAAC/M,WAAWxH,MAAb,IACC;mBAAA;;mBACS,EAAEiS,UAAaA,QAAb,OAAF;;8BAEN,WAAD,IAAa,SAAS5c,OAAtB,GAHF;;gBAIE;;uBACc6C,GAAX,CAAe;qBACd,oBAAC,SAAD;qBACO2P,IAAI2I,GADX;qBAEO;yBAAO,OAAKgE,cAAL,CAAoB3M,GAApB,EAAyBiJ,KAAzB,CAAP;iBAFP;qBAGOjJ,GAHP;yBAIWxS,OAJX;8BAKgBsQ,YALhB;+BAMiBE;gBAPH;aAAf;;SAVT;;eAuBE;;mBACS,EAAEoM,UAAaA,QAAb,OAAF;;8BAEN,WAAD,IAAa,SAAS5c,OAAtB,GAHF;;gBAIE;;4BACmB6C,GAAhB,CAAoB,UAACqe,UAAD,EAAgB;kBAC/BA,WAAW7T,IAAX,KAAoB,MAAxB,EAAgC;uBAE5B,4BAAI,KAAK6T,WAAW/F,GAApB,EAAyB,OAAO,EAAE6B,QAAWkE,WAAWlE,MAAtB,OAAF,EAAhC,GADF;;kBAIMxK,GAN2B,GAMnB0O,UANmB,CAM3B1O,GAN2B;;qBAQjC,oBAAC,SAAD;qBACOA,IAAI2I,GADX;qBAEO;yBAAO,OAAKgE,cAAL,CAAoB3M,GAApB,EAAyBiJ,KAAzB,CAAP;iBAFP;qBAGOjJ,GAHP;yBAIWxS,OAJX;8BAKgBsQ,YALhB;+BAMiBE;gBAPnB;aAPD;;;OA7BT;;;;EArHoCjQ,MAAMC,aAA9C;;AA2KAue,mBAAmBte,SAAnB,GAA+B;YACnBC,UAAUgH,MAAV,CAAiB9G,UADE;UAErBF,UAAUgH,MAAV,CAAiB9G,UAFI;cAGjBF,UAAUC,KAHO;QAIvBD,UAAUC,KAAV,CAAgBC,UAJO;WAKpBF,UAAUC,KAAV,CAAgBC,UALI;iBAMdF,UAAUG,IAAV,CAAeD,UAND;gBAOfF,UAAUG,IAAV,CAAeD,UAPA;iBAQdF,UAAUG,IAAV,CAAeD,UARD;iBASdF,UAAUG,IATI;kBAUbH,UAAUG,IAAV,CAAeD,UAVF;sBAWTF,UAAUG,IAXD;sBAYTH,UAAUG,IAAV,CAAeD,UAZN;sBAaTF,UAAUgH,MAAV,CAAiB9G;CAbvC;;AAgBAme,mBAAmBje,YAAnB,GAAkC;cACpB,EADoB;iBAEjB;WAAM,IAAN;GAFiB;sBAGZ;WAAM,IAAN;;CAHtB;;ICjMaqgB,eAAb;;;;;;;;;;6BACW;mBAOH,KAAKrhB,KAPF;UAELC,IAFK,UAELA,IAFK;UAGLC,OAHK,UAGLA,OAHK;UAIWohB,KAJX,UAILC,cAJK;UAKL/Q,YALK,UAKLA,YALK;UAMLE,aANK,UAMLA,aANK;;;aAUL;aAAA;;aAGO3N,GADH,CACO;iBACH,oBAAC,SAAD;iBACO2P,IAAI2I,GADX;iBAEO3I,GAFP;qBAGWxS,OAHX;0BAIgBsQ,YAJhB;2BAKiBE;YANd;SADP;OAHN;;;;EAViCjQ,MAAMC,aAA3C;;AA6BA2gB,gBAAgB1gB,SAAhB,GAA4B;QACpBC,UAAUC,KAAV,CAAgBC,UADI;WAEjBF,UAAUC,KAAV,CAAgBC,UAFC;kBAGVF,UAAUG,IAAV,CAAeD,UAHL;gBAIZF,UAAUG,IAAV,CAAeD,UAJH;iBAKXF,UAAUG,IAAV,CAAeD;CALhC;;IC5Ba0gB,iBAAb;;;;;;;;;;6BACW;mBAYH,KAAKxhB,KAZF;UAELqS,UAFK,UAELA,UAFK;UAGLpS,IAHK,UAGLA,IAHK;UAILC,OAJK,UAILA,OAJK;UAKL4c,QALK,UAKLA,QALK;UAMe1a,SANf,UAMLC,kBANK;UAOWmP,KAPX,UAOLuP,cAPK;UAQLE,aARK,UAQLA,aARK;UASLE,aATK,UASLA,aATK;UAUL3Q,YAVK,UAULA,YAVK;UAWLE,aAXK,UAWLA,aAXK;;;aAeL;iBAAA;;;eACE;;mBACS,EAAEoM,UAAaA,QAAb,OAAF;;8BAEN,WAAD,IAAa,SAAS5c,OAAtB,GAHF;WAII,CAACmS,WAAWxH,MAAb,IACC,oBAAC,eAAD;kBACQwH,UADR;qBAEWnS,OAFX;4BAGkB+gB,aAHlB;0BAIgBzQ,YAJhB;2BAKiBE;YAVrB;8BAaG,eAAD;kBACQzQ,IADR;qBAEWC,OAFX;4BAGkBihB,aAHlB;0BAIgB3Q,YAJhB;2BAKiBE;;;OApBvB;;;;EAfmCjQ,MAAMC,aAA7C;;AA2CA8gB,kBAAkB7gB,SAAlB,GAA8B;cAChBC,UAAUC,KADM;QAEtBD,UAAUC,KAAV,CAAgBC,UAFM;WAGnBF,UAAUC,KAAV,CAAgBC,UAHG;YAIlBF,UAAUgH,MAAV,CAAiB9G,UAJC;sBAKRF,UAAUG,IAAV,CAAeD,UALP;kBAMZF,UAAUG,IAAV,CAAeD,UANH;iBAObF,UAAUG,IAPG;iBAQbH,UAAUG,IAAV,CAAeD,UARF;gBASdF,UAAUG,IAAV,CAAeD,UATD;iBAUbF,UAAUG,IAAV,CAAeD;CAVhC;;AAaA0gB,kBAAkBxgB,YAAlB,GAAiC;cACnB,EADmB;iBAEhB;WAAM,IAAN;;CAFjB;;ICzDaygB,UAAb;;;sBACczhB,KAAZ,EAAmB;;;uHACXA,KADW;;UAGZ0B,KAAL,GAAa;gBACD;KADZ;;;;;;6BAIO;;;mBAOH,KAAK1B,KAPF;UAELgD,IAFK,UAELA,IAFK;UAGUV,IAHV,UAGLC,aAHK;UAIL8T,eAJK,UAILA,eAJK;UAKLqL,WALK,UAKLA,WALK;UAMLC,SANK,UAMLA,SANK;UAQCC,QARD,GAQc,KAAKlgB,KARnB,CAQCkgB,QARD;;;UAUDC,cAAc,oBAAC,IAAD,IAAM,mBAAW7e,IAAX,IAAiB8e,OAAOF,YAAY5e,KAAK8e,KAAzC,GAAN,GAApB;;aAEQzL,kBACN;kBAAA;;mBACW,CAAC,EAAE9I,MAAM,QAAR,EAAkB3I,YAAY5B,KAAKC,MAAL,CAAYzB,IAA1C,EAAD,CADX;mBAEW,mBAAM;mBACRQ,QAAL,CAAc,EAAE4f,UAAU,IAAZ,EAAd;;WAHJ;iBAMS,iBAAM;mBACN5f,QAAL,CAAc,EAAE4f,UAAU,KAAZ,EAAd;;;;;OARE,GAeNC,WAfF;;;;EApB4BphB,MAAMC,aAAtC;;AAwCA+gB,WAAW9gB,SAAX,GAAuB;QACfC,UAAUmhB,KAAV,CAAgB;YACZnhB,UAAUsC,MADE;WAEbtC,UAAU+S;GAFb,EAGH7S,UAJkB;iBAKNF,UAAUG,IAAV,CAAeD,UALT;mBAMJF,UAAU+S,IANN;eAOR/S,UAAUG,IAPF;aAQVH,UAAUG;CARvB;;AAWA0gB,WAAWzgB,YAAX,GAA0B;mBACP,KADO;eAEX,uBAAM,EAFK;aAGb,qBAAM;CAHnB;;IC9CaghB,gBAAb;;;4BACchiB,KAAZ,EAAmB;;;mIACXA,KADW;;UAGZ0B,KAAL,GAAa;wBACO,IADP;uBAEM,CAAC;KAFpB;;UAKKugB,OAAL,GAAe,gBAAiB;UAAdxe,OAAc,QAAdA,OAAc;;YACzBzB,QAAL,CAAc;0BACMyB,QAAQ,CAAR,EAAWmB;OAD/B;KADF;UAKKuJ,MAAL,GAAc,iBAAsB;UAAnBR,YAAmB,SAAnBA,YAAmB;wBACF,MAAK3N,KADH;UAC1BkiB,YAD0B,eAC1BA,YAD0B;UACZC,KADY,eACZA,KADY;wBAEiC,MAAKzgB,KAFtC;UAE1B2N,gBAF0B,eAE1BA,gBAF0B;UAES+S,mBAFT,eAERC,eAFQ;;;UAI5BC,iBAAiB,MAAKC,QAAL,CAAcxf,GAAd,CAAkB;eAAO+Y,YAAYH,GAAZ,EAAiBuE,qBAAjB,EAAP;OAAlB,CAAvB;UACMsC,kBAAkBL,MAAM1Y,SAAN,CAAgB;YAAGxG,MAAH,SAAGA,MAAH;eAAgBA,OAAOzB,IAAP,KAAgB6N,gBAAhC;OAAhB,CAAxB;UACMgT,kBAAkBI,wBACtBH,cADsB,EAEtBE,eAFsB,EAGtB7U,YAHsB,CAAxB;;UAMIyU,wBAAwBC,eAA5B,EAA6C;;mBAEhC;oBACChT,gBADD;oBAECgT;OAFd;YAIKrgB,QAAL,CAAc,EAAEqgB,gCAAF,EAAd;KAlBF;UAoBKhU,OAAL,GAAe,YAAM;UACX6T,YADW,GACM,MAAKliB,KADX,CACXkiB,YADW;UAEX7S,gBAFW,GAEU,MAAK3N,KAFf,CAEX2N,gBAFW;;UAGf,CAAC,MAAKqT,kBAAV,EAA8B;cACvBC,UAAL;;;mBAGW;oBACCtT,gBADD;oBAEC,CAAC;OAFf;YAIKrN,QAAL,CAAc;yBACK,CAAC;OADpB;KAXF;UAeKuM,MAAL,GAAc,YAAM;UACVqU,OADU,GACE,MAAK5iB,KADP,CACV4iB,OADU;yBAE4B,MAAKlhB,KAFjC;UAEV2N,gBAFU,gBAEVA,gBAFU;UAEQgT,eAFR,gBAEQA,eAFR;;YAGbM,UAAL;cACQ;oBACMtT,gBADN;oBAEMgT;OAFd;KAJF;UASKX,WAAL,GAAmB,UAAC9c,UAAD,EAAgB;YAC5B8d,kBAAL,GAA0B9d,UAA1B;KADF;UAGK+c,SAAL,GAAiB,YAAM;YAChBe,kBAAL,GAA0B,IAA1B;yBAC8C,MAAKhhB,KAF9B;UAEb2N,gBAFa,gBAEbA,gBAFa;UAEKgT,eAFL,gBAEKA,eAFL;UAGbO,OAHa,GAGD,MAAK5iB,KAHJ,CAGb4iB,OAHa;;UAIjBvT,oBAAoBgT,oBAAoB,CAAC,CAA7C,EAAgD;gBACtC;sBACMhT;SADd;;YAIGsT,UAAL;KATF;;;;;;iCAYW;UACHE,kBADG,GACoB,KAAK7iB,KADzB,CACH6iB,kBADG;;;WAGN7gB,QAAL,CAAc;0BACM,IADN;yBAEK,CAAC;OAFpB;;;;6BAKO;;;mBAOH,KAAKhC,KAPF;UAELmiB,KAFK,UAELA,KAFK;UAGkBvI,YAHlB,UAGLC,qBAHK;UAIezX,SAJf,UAILC,kBAJK;UAKUC,IALV,UAKLC,aALK;UAML8T,eANK,UAMLA,eANK;;;WASFkM,QAAL,GAAgB,EAAhB;;UAEMO,aAAcX,MAAMtX,MAAN,GAClB;iBAAA;;cACS9H,GAAN,CAAU;iBACT,oBAAC,UAAD;iBACOC,KAAKC,MAAL,CAAYzB,IADnB;iBAEO;qBAAWuhB,WAAW,OAAKR,QAAL,CAAclG,IAAd,CAAmB0G,OAAnB,CAAtB;aAFP;kBAGQ/f,IAHR;2BAIiBV,IAJjB;6BAKmB+T,eALnB;yBAMe;qBAAM,OAAKqL,WAAL,CAAiB1e,KAAKC,MAAL,CAAYzB,IAA7B,CAAN;aANf;uBAOa,OAAKmgB;YART;SAAV;OAFe,GAelB,oBAAC,YAAD,OAfF;;aAkBOtL,kBAEH;kBAAA;;mBACW,KAAK4L,OADhB;kBAEU,KAAK9T,MAFf;mBAGW,KAAKE,OAHhB;kBAIU,KAAKE;;;OANZ,GAWHuU,UAXJ;;;;EA9GkCriB,MAAMC,aAA5C;;AA6HAshB,iBAAiBrhB,SAAjB,GAA6B;SACpBC,UAAUS,OAAV,CAAkBT,UAAUmhB,KAAV,CAAgB;YAC/BnhB,UAAUsC,MADqB;WAEhCtC,UAAU+S;GAFM,CAAlB,EAGH7S,UAJuB;WAKlBF,UAAUG,IALQ;iBAMZH,UAAUG,IAAV,CAAeD,UANH;sBAOPF,UAAUG,IAAV,CAAeD,UAPR;yBAQJF,UAAUG,IAAV,CAAeD,UARX;mBASVF,UAAU+S,IATA;gBAUb/S,UAAUG,IAVG;sBAWPH,UAAUG;CAXhC;;AAcAihB,iBAAiBhhB,YAAjB,GAAgC;WACrB,mBAAM,EADe;mBAEb,KAFa;gBAGhB,wBAAM,EAHU;sBAIV,8BAAM;CAJ5B;;IC3IagiB,OAAb;;;;;;;;;;6BACW;mBAIH,KAAKhjB,KAJF;UAEUK,IAFV,UAELC,aAFK;UAGmB2iB,sBAHnB,UAGLC,sBAHK;;aAML;cAAA;;gBACO;;;kBAEL;YAAU,MAAK,QAAf;;gBACE;;gCACG,mBAAD,IAAqB,MAAK,gBAA1B;WAFJ;8BAIG,mBAAD;SAPJ;;kBASE;YAAU,MAAK,gBAAf;8BACG,sBAAD;;OAXN;;;;EANyBziB,MAAMC,aAAnC;;AAwBAsiB,QAAQriB,SAAR,GAAoB;iBACHC,UAAUG,IAAV,CAAeD,UADZ;0BAEMF,UAAUG,IAAV,CAAeD;CAFzC;;"}